name: Tag and Publish
on:
  push:
    branches:
      - main

jobs:
  bump_versions_and_update_schemas:
    runs-on: ubuntu-latest
    env:
      OUTPUT_DIR: 'schemas'
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.DEFAULT_BRANCH }}
          fetch-depth: 0
          token: ${{ secrets.SERVICE_TOKEN }}
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - name: Install dependencies
        run: python -m pip install -e .[dev] --no-cache-dir
      - name: Bump schema versions
        run: |
          python -m aind_data_schema.utils.schema_version_bump
          echo "Finished schema version bump"
      - name: Update schemas
        run: |
          rm -rf $OUTPUT_DIR
          python -m pip install -e .
          python -m aind_data_schema.utils.json_writer --output $OUTPUT_DIR
      - name: Create example schemas
        run: |
          cd examples
          for script in ./*.py; do
              python "$script"
          done
      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "bump schema version [skip actions]"
          add: '["src", "schemas", "examples"]'

  update_docs:
    needs: bump_versions_and_update_schemas
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      DIAGRAM_DIRECTORY: ./docs/source/_static/diagrams
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.DEFAULT_BRANCH }}
          fetch-depth: 0
          token: ${{ secrets.SERVICE_TOKEN }}
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: python -m pip install -e .[dev] --no-cache-dir
      - name: Generate new rst files
        run: |
          sphinx-apidoc -o docs/source/ src
          sphinx-build -b html docs/source/ docs/build/html
      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "updates diagrams [skip actions]"
          add: '["*.png", "*.rst"]'

  tag:
    needs: update_docs
    uses: AllenNeuralDynamics/aind-github-actions/.github/workflows/tag.yml@main
    secrets:
      SERVICE_TOKEN: ${{ secrets.SERVICE_TOKEN }} # required

  publish:
    needs: tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Pull latest changes
        run: git pull origin main
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          pip install --upgrade setuptools wheel twine build
          python -m build
          twine check dist/*
      - name: Publish on PyPI
        uses: pypa/gh-action-pypi-publish@release/v1.5
        with:
          password: ${{ secrets.AIND_PYPI_TOKEN }}

  upload_schemas_prod:
    needs: publish
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_DATA_SCHEMA_ROLE: ${{ secrets.AWS_DATA_SCHEMA_ROLE_PROD}}
      AWS_DATA_SCHEMA_BUCKET: ${{ vars.AWS_DATA_SCHEMA_BUCKET_PROD }}
      AWS_REGION: ${{ vars.AWS_REGION_PROD }}
      TEMP_DIR: 'temp_schemas'
      S3_PREFIX: 'schemas'
    steps:
      - uses: actions/checkout@master
      - name: Pull latest changes
        run: git pull origin main
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.AWS_DATA_SCHEMA_ROLE }}
          role-session-name: github-schema-upload-session
          aws-region: ${{ env.AWS_REGION }}
      - name: Create and upload schemas
        run: |
          python -m pip install -e .
          python -m aind_data_schema.utils.json_writer --output $TEMP_DIR --attach-version
          python -m pip install awscli
          aws s3 sync $TEMP_DIR s3://${AWS_DATA_SCHEMA_BUCKET}/$S3_PREFIX

  upload_schemas_dev:
    needs: upload_schemas_prod
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_DATA_SCHEMA_ROLE: ${{ secrets.AWS_DATA_SCHEMA_ROLE_DEV }}
      AWS_DATA_SCHEMA_BUCKET: ${{ vars.AWS_DATA_SCHEMA_BUCKET_DEV }}
      AWS_REGION : ${{ vars.AWS_REGION_DEV }}
      TEMP_DIR: 'temp_schemas'
      S3_PREFIX: 'schemas'
    steps:
      - uses: actions/checkout@master
      - name: Pull latest changes
        run: git pull origin main
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.AWS_DATA_SCHEMA_ROLE }}
          role-session-name: github-schema-upload-session
          aws-region: ${{ env.AWS_REGION }}
      - name: Create and upload schemas
        run: | 
          python -m pip install -e .
          python -m aind_data_schema.utils.json_writer --output $TEMP_DIR --attach-version
          python -m pip install awscli
          aws s3 sync $TEMP_DIR s3://${AWS_DATA_SCHEMA_BUCKET}/$S3_PREFIX
