[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "aind-data-schema"
description = "A library that defines AIND data schema and validates JSON files."
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3"
]
readme = "README.md"
dynamic = ["version"]

dependencies = [
    'aind-data-schema-models',
    'dictdiffer',
    'pydantic>2.0,<2.7',
    'inflection',
    'jsonschema',
    'semver'
]

[project.optional-dependencies]
dev = [
    'aind_data_schema[linters]'
]

linters = [
    'codespell',
    'black',
    'coverage',
    'flake8',
    'interrogate',
    'isort'
]

docs = [
    'Sphinx',
    'sphinx-jinja',
    'furo',
    'erdantic>=0.7.0,<1.0',
    'autodoc_pydantic'
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = {attr = "aind_data_schema.__version__"}
readme = {file = ["README.md"]}

[tool.black]
line-length = 120
target_version = ['py38']
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | build
    | dist
  )/
  | .gitignore
)
'''

[tool.coverage.run]
omit = [
    "*__init__*",
    "*/aind_data_schema/utils/diagrams.py",
    "*/tests/test_diagram_builder.py"
]
source = ["aind_data_schema", "tests"]

[tool.coverage.report]
exclude_lines = ["if __name__ == .__main__.:", "pragma: no cover"]
fail_under = 100

[tool.isort]
line_length = 120
profile = "black"

[tool.interrogate]
exclude = ["setup.py", "docs", "build"]
fail-under = 100

[tool.codespell]
skip = '.git,*.pdf,*.svg'
ignore-words-list = 'nd'
