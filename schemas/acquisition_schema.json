{
   "$defs": {
      "AcquisitionSubjectDetails": {
         "additionalProperties": false,
         "description": "Details about the subject during an acquisition",
         "properties": {
            "object_type": {
               "const": "Acquisition subject details",
               "default": "Acquisition subject details",
               "title": "Object Type",
               "type": "string"
            },
            "animal_weight_prior": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Animal weight before procedure",
               "title": "Animal weight (g)"
            },
            "animal_weight_post": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Animal weight after procedure",
               "title": "Animal weight (g)"
            },
            "weight_unit": {
               "$ref": "#/$defs/MassUnit",
               "default": "gram",
               "title": "Weight unit"
            },
            "anaesthesia": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Anaesthetic"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Anaesthesia"
            },
            "mouse_platform_name": {
               "title": "Mouse platform",
               "type": "string"
            },
            "reward_consumed_total": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Total reward consumed (mL)"
            },
            "reward_consumed_unit": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/VolumeUnit"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Reward consumed unit"
            }
         },
         "required": [
            "mouse_platform_name"
         ],
         "title": "AcquisitionSubjectDetails",
         "type": "object"
      },
      "Affine": {
         "additionalProperties": false,
         "description": "Definition of an affine transform 3x4 matrix",
         "properties": {
            "object_type": {
               "const": "Affine",
               "default": "Affine",
               "title": "Object Type",
               "type": "string"
            },
            "affine_transform": {
               "items": {
                  "items": {
                     "type": "number"
                  },
                  "type": "array"
               },
               "title": "Affine transform matrix",
               "type": "array"
            }
         },
         "required": [
            "affine_transform"
         ],
         "title": "Affine",
         "type": "object"
      },
      "AirPuffConfig": {
         "additionalProperties": false,
         "description": "Air puff device configuration",
         "properties": {
            "object_type": {
               "const": "Air puff config",
               "default": "Air puff config",
               "title": "Object Type",
               "type": "string"
            },
            "device_name": {
               "description": "Must match a device defined in the instrument.json",
               "title": "Device name",
               "type": "string"
            },
            "valence": {
               "$ref": "#/$defs/Valence",
               "default": "Negative"
            },
            "relative_position": {
               "items": {
                  "$ref": "#/$defs/AnatomicalRelative"
               },
               "title": "Initial relative position",
               "type": "array"
            },
            "coordinate_system": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/CoordinateSystem"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Device coordinate system"
            },
            "transform": {
               "anyOf": [
                  {
                     "items": {
                        "discriminator": {
                           "mapping": {
                              "Affine": "#/$defs/Affine",
                              "Rotation": "#/$defs/Rotation",
                              "Scale": "#/$defs/Scale",
                              "Translation": "#/$defs/Translation"
                           },
                           "propertyName": "object_type"
                        },
                        "oneOf": [
                           {
                              "$ref": "#/$defs/Translation"
                           },
                           {
                              "$ref": "#/$defs/Rotation"
                           },
                           {
                              "$ref": "#/$defs/Scale"
                           },
                           {
                              "$ref": "#/$defs/Affine"
                           }
                        ]
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Device to acquisition transform"
            },
            "pressure": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Pressure"
            },
            "pressure_unit": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/PressureUnit"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Pressure unit"
            },
            "duration": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Duration"
            }
         },
         "required": [
            "device_name",
            "relative_position"
         ],
         "title": "AirPuffConfig",
         "type": "object"
      },
      "Anaesthetic": {
         "additionalProperties": false,
         "description": "Description of an anaesthetic",
         "properties": {
            "object_type": {
               "const": "Anaesthetic",
               "default": "Anaesthetic",
               "title": "Object Type",
               "type": "string"
            },
            "anaesthetic_type": {
               "title": "Type",
               "type": "string"
            },
            "duration": {
               "title": "Duration",
               "type": "number"
            },
            "duration_unit": {
               "$ref": "#/$defs/TimeUnit",
               "default": "minute",
               "title": "Duration unit"
            },
            "level": {
               "anyOf": [
                  {
                     "maximum": 5,
                     "minimum": 1,
                     "type": "number"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Level (percent)"
            }
         },
         "required": [
            "anaesthetic_type",
            "duration"
         ],
         "title": "Anaesthetic",
         "type": "object"
      },
      "AnatomicalRelative": {
         "description": "Relative positions in 3D space",
         "enum": [
            "Superior",
            "Inferior",
            "Anterior",
            "Posterior",
            "Left",
            "Right",
            "Medial",
            "Lateral",
            "Origin"
         ],
         "title": "AnatomicalRelative",
         "type": "string"
      },
      "AngleUnit": {
         "description": "Enumeration of Angle Measurements",
         "enum": [
            "radians",
            "degrees"
         ],
         "title": "AngleUnit",
         "type": "string"
      },
      "Atlas": {
         "additionalProperties": false,
         "description": "Definition an atlas",
         "properties": {
            "object_type": {
               "const": "Atlas",
               "default": "Atlas",
               "title": "Object Type",
               "type": "string"
            },
            "name": {
               "$ref": "#/$defs/AtlasName",
               "title": "Atlas name"
            },
            "origin": {
               "$ref": "#/$defs/Origin",
               "description": "Defines the position of (0,0,0) in the coordinate system"
            },
            "axes": {
               "description": "Axis names and directions",
               "items": {
                  "$ref": "#/$defs/Axis"
               },
               "title": "Axis names",
               "type": "array"
            },
            "axis_unit": {
               "$ref": "#/$defs/SizeUnit",
               "title": "Size unit"
            },
            "version": {
               "title": "Atlas version",
               "type": "string"
            },
            "size": {
               "items": {
                  "type": "number"
               },
               "title": "Size",
               "type": "array"
            },
            "size_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "pixel",
               "title": "Size unit"
            },
            "resolution": {
               "items": {
                  "type": "number"
               },
               "title": "Resolution",
               "type": "array"
            },
            "resolution_unit": {
               "$ref": "#/$defs/SizeUnit",
               "title": "Resolution unit"
            }
         },
         "required": [
            "name",
            "origin",
            "axes",
            "axis_unit",
            "version",
            "size",
            "resolution",
            "resolution_unit"
         ],
         "title": "Atlas",
         "type": "object"
      },
      "AtlasCoordinate": {
         "additionalProperties": false,
         "description": "A point in an Atlas",
         "properties": {
            "object_type": {
               "const": "Atlas coordinate",
               "default": "Atlas coordinate",
               "title": "Object Type",
               "type": "string"
            },
            "translation": {
               "items": {
                  "type": "number"
               },
               "title": "Translation parameters",
               "type": "array"
            },
            "coordinate_system": {
               "$ref": "#/$defs/Atlas"
            }
         },
         "required": [
            "translation",
            "coordinate_system"
         ],
         "title": "AtlasCoordinate",
         "type": "object"
      },
      "AtlasName": {
         "description": "Atlas names",
         "enum": [
            "CCF",
            "CUSTOM"
         ],
         "title": "AtlasName",
         "type": "string"
      },
      "Axis": {
         "additionalProperties": false,
         "description": "Linked direction and axis",
         "properties": {
            "object_type": {
               "const": "Axis",
               "default": "Axis",
               "title": "Object Type",
               "type": "string"
            },
            "name": {
               "$ref": "#/$defs/AxisName",
               "title": "Axis"
            },
            "direction": {
               "$ref": "#/$defs/Direction",
               "description": "Direction of positive values along the axis"
            }
         },
         "required": [
            "name",
            "direction"
         ],
         "title": "Axis",
         "type": "object"
      },
      "AxisName": {
         "description": "Axis name",
         "enum": [
            "X",
            "Y",
            "Z",
            "AP",
            "ML",
            "SI",
            "Depth"
         ],
         "title": "AxisName",
         "type": "string"
      },
      "BrainStructureModel": {
         "description": "Base model for brain strutures",
         "properties": {
            "atlas": {
               "title": "Atlas",
               "type": "string"
            },
            "name": {
               "title": "Name",
               "type": "string"
            },
            "acronym": {
               "title": "Acronym",
               "type": "string"
            },
            "id": {
               "title": "Id",
               "type": "string"
            }
         },
         "required": [
            "atlas",
            "name",
            "acronym",
            "id"
         ],
         "title": "BrainStructureModel",
         "type": "object"
      },
      "Calibration": {
         "additionalProperties": false,
         "description": "Generic calibration class",
         "properties": {
            "object_type": {
               "const": "Calibration",
               "default": "Calibration",
               "title": "Object Type",
               "type": "string"
            },
            "device_name": {
               "description": "Must match a device defined in the instrument.json",
               "title": "Device name",
               "type": "string"
            },
            "calibration_date": {
               "format": "date-time",
               "title": "Date and time of calibration",
               "type": "string"
            },
            "description": {
               "description": "Brief description of what is being calibrated",
               "title": "Description",
               "type": "string"
            },
            "input": {
               "description": "Calibration input",
               "items": {
                  "anyOf": [
                     {
                        "type": "number"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "title": "Inputs",
               "type": "array"
            },
            "input_unit": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/SizeUnit"
                  },
                  {
                     "$ref": "#/$defs/MassUnit"
                  },
                  {
                     "$ref": "#/$defs/FrequencyUnit"
                  },
                  {
                     "$ref": "#/$defs/SpeedUnit"
                  },
                  {
                     "$ref": "#/$defs/VolumeUnit"
                  },
                  {
                     "$ref": "#/$defs/AngleUnit"
                  },
                  {
                     "$ref": "#/$defs/TimeUnit"
                  },
                  {
                     "$ref": "#/$defs/PowerUnit"
                  },
                  {
                     "$ref": "#/$defs/CurrentUnit"
                  },
                  {
                     "$ref": "#/$defs/ConcentrationUnit"
                  },
                  {
                     "$ref": "#/$defs/TemperatureUnit"
                  },
                  {
                     "$ref": "#/$defs/SoundIntensityUnit"
                  },
                  {
                     "$ref": "#/$defs/VoltageUnit"
                  },
                  {
                     "$ref": "#/$defs/MemoryUnit"
                  },
                  {
                     "$ref": "#/$defs/UnitlessUnit"
                  },
                  {
                     "$ref": "#/$defs/MagneticFieldUnit"
                  },
                  {
                     "$ref": "#/$defs/PressureUnit"
                  }
               ],
               "title": "Input unit"
            },
            "repeats": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "If each input was repeated multiple times, provide the number of repeats",
               "title": "Number of repeats"
            },
            "output": {
               "description": "Calibration output (provide the average if repeated)",
               "items": {
                  "anyOf": [
                     {
                        "type": "number"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "title": "Outputs",
               "type": "array"
            },
            "output_unit": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/SizeUnit"
                  },
                  {
                     "$ref": "#/$defs/MassUnit"
                  },
                  {
                     "$ref": "#/$defs/FrequencyUnit"
                  },
                  {
                     "$ref": "#/$defs/SpeedUnit"
                  },
                  {
                     "$ref": "#/$defs/VolumeUnit"
                  },
                  {
                     "$ref": "#/$defs/AngleUnit"
                  },
                  {
                     "$ref": "#/$defs/TimeUnit"
                  },
                  {
                     "$ref": "#/$defs/PowerUnit"
                  },
                  {
                     "$ref": "#/$defs/CurrentUnit"
                  },
                  {
                     "$ref": "#/$defs/ConcentrationUnit"
                  },
                  {
                     "$ref": "#/$defs/TemperatureUnit"
                  },
                  {
                     "$ref": "#/$defs/SoundIntensityUnit"
                  },
                  {
                     "$ref": "#/$defs/VoltageUnit"
                  },
                  {
                     "$ref": "#/$defs/MemoryUnit"
                  },
                  {
                     "$ref": "#/$defs/UnitlessUnit"
                  },
                  {
                     "$ref": "#/$defs/MagneticFieldUnit"
                  },
                  {
                     "$ref": "#/$defs/PressureUnit"
                  }
               ],
               "title": "Output unit"
            },
            "fit": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/CalibrationFit"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Fit equation for the calibration data used during data acquisition",
               "title": "Fit"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "device_name",
            "calibration_date",
            "description",
            "input",
            "input_unit",
            "output",
            "output_unit"
         ],
         "title": "Calibration",
         "type": "object"
      },
      "CalibrationFit": {
         "additionalProperties": false,
         "description": "Fit equation for calibration data",
         "properties": {
            "object_type": {
               "const": "Calibration fit",
               "default": "Calibration fit",
               "title": "Object Type",
               "type": "string"
            },
            "fit_type": {
               "$ref": "#/$defs/FitType",
               "title": "Fit type"
            },
            "fit_parameters": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/GenericModel"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Parameters of the fit equation, e.g. slope and intercept for linear fit",
               "title": "Fit parameters"
            }
         },
         "required": [
            "fit_type"
         ],
         "title": "CalibrationFit",
         "type": "object"
      },
      "Channel": {
         "additionalProperties": false,
         "description": "Configuration of a channel",
         "properties": {
            "object_type": {
               "const": "Channel",
               "default": "Channel",
               "title": "Object Type",
               "type": "string"
            },
            "channel_name": {
               "title": "Channel",
               "type": "string"
            },
            "intended_measurement": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "What signal is this channel measuring",
               "title": "Intended measurement"
            },
            "detector": {
               "$ref": "#/$defs/DetectorConfig",
               "title": "Detector configuration"
            },
            "additional_device_names": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/DeviceConfig"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Mirrors, dichroics, etc",
               "title": "Additional device names"
            },
            "light_sources": {
               "default": [],
               "items": {
                  "discriminator": {
                     "mapping": {
                        "Laser config": "#/$defs/LaserConfig",
                        "Light emitting diode config": "#/$defs/LightEmittingDiodeConfig"
                     },
                     "propertyName": "object_type"
                  },
                  "oneOf": [
                     {
                        "$ref": "#/$defs/LaserConfig"
                     },
                     {
                        "$ref": "#/$defs/LightEmittingDiodeConfig"
                     }
                  ]
               },
               "title": "Light source configurations",
               "type": "array"
            },
            "variable_power": {
               "anyOf": [
                  {
                     "type": "boolean"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": false,
               "description": "Set to true when the power varies across Planes -- put the power in the Plane.power field",
               "title": "Variable power"
            },
            "excitation_filters": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/DeviceConfig"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Excitation filters"
            },
            "emission_filters": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/DeviceConfig"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Emission filters"
            },
            "emission_wavelength": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Emission wavelength"
            },
            "emission_wavelength_unit": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/SizeUnit"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Emission wavelength unit"
            }
         },
         "required": [
            "channel_name",
            "detector"
         ],
         "title": "Channel",
         "type": "object"
      },
      "Code": {
         "additionalProperties": false,
         "description": "Code or script identifier",
         "properties": {
            "object_type": {
               "const": "Code",
               "default": "Code",
               "title": "Object Type",
               "type": "string"
            },
            "url": {
               "description": "URL to code repository",
               "title": "Code URL",
               "type": "string"
            },
            "name": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Name"
            },
            "version": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Code version"
            },
            "container": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Container"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Container"
            },
            "run_script": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Path to run script",
               "title": "Run script"
            },
            "language": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Programming language used",
               "title": "Programming language"
            },
            "language_version": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Programming language version"
            },
            "input_data": {
               "anyOf": [
                  {
                     "items": {
                        "discriminator": {
                           "mapping": {
                              "Combined data": "#/$defs/CombinedData",
                              "Data asset": "#/$defs/DataAsset"
                           },
                           "propertyName": "object_type"
                        },
                        "oneOf": [
                           {
                              "$ref": "#/$defs/DataAsset"
                           },
                           {
                              "$ref": "#/$defs/CombinedData"
                           }
                        ]
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Input data used in the code or script",
               "title": "Input data"
            },
            "parameters": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/GenericModel"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Parameters used in the code or script",
               "title": "Parameters"
            },
            "core_dependency": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Software"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "For code with a core software package dependency, e.g. Bonsai",
               "title": "Core dependency"
            }
         },
         "required": [
            "url"
         ],
         "title": "Code",
         "type": "object"
      },
      "CombinedData": {
         "additionalProperties": false,
         "description": "Description of a group of data assets",
         "properties": {
            "object_type": {
               "const": "Combined data",
               "default": "Combined data",
               "title": "Object Type",
               "type": "string"
            },
            "assets": {
               "items": {
                  "$ref": "#/$defs/DataAsset"
               },
               "minItems": 1,
               "title": "Data assets",
               "type": "array"
            },
            "name": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Name"
            },
            "database_identifier": {
               "anyOf": [
                  {
                     "additionalProperties": {
                        "items": {
                           "type": "string"
                        },
                        "type": "array"
                     },
                     "propertyNames": {
                        "$ref": "#/$defs/Database"
                     },
                     "type": "object"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "ID or link to the Combined Data asset, if materialized.",
               "title": "Database identifier"
            },
            "description": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Intention or approach used to select group of assets",
               "title": "Description"
            }
         },
         "required": [
            "assets"
         ],
         "title": "CombinedData",
         "type": "object"
      },
      "ConcentrationUnit": {
         "description": "Concentraion units",
         "enum": [
            "molar",
            "micromolar",
            "nanomolar",
            "% m/m",
            "% v/v"
         ],
         "title": "ConcentrationUnit",
         "type": "string"
      },
      "Connection": {
         "additionalProperties": false,
         "description": "Description of a connection between devices in an instrument",
         "properties": {
            "object_type": {
               "const": "Connection",
               "default": "Connection",
               "title": "Object Type",
               "type": "string"
            },
            "source_device": {
               "title": "Source device name",
               "type": "string"
            },
            "source_port": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Source device port index/name"
            },
            "target_device": {
               "title": "Target device name",
               "type": "string"
            },
            "target_port": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Target device port index/name"
            },
            "send_and_receive": {
               "default": false,
               "description": "Whether the connection is bidirectional (send and receive data)",
               "title": "Send and receive",
               "type": "boolean"
            }
         },
         "required": [
            "source_device",
            "target_device"
         ],
         "title": "Connection",
         "type": "object"
      },
      "Container": {
         "additionalProperties": false,
         "description": "Code container identifier, e.g. Docker",
         "properties": {
            "object_type": {
               "const": "Container",
               "default": "Container",
               "title": "Object Type",
               "type": "string"
            },
            "container_type": {
               "description": "Type of container, e.g. Docker, Singularity",
               "title": "Type",
               "type": "string"
            },
            "tag": {
               "description": "Tag of the container, e.g. version number",
               "title": "Tag",
               "type": "string"
            },
            "uri": {
               "description": "URI of the container, e.g. Docker Hub URL",
               "title": "URI",
               "type": "string"
            }
         },
         "required": [
            "container_type",
            "tag",
            "uri"
         ],
         "title": "Container",
         "type": "object"
      },
      "CoordinateSystem": {
         "additionalProperties": false,
         "description": "Definition of a coordinate system relative to a brain",
         "properties": {
            "object_type": {
               "const": "Coordinate system",
               "default": "Coordinate system",
               "title": "Object Type",
               "type": "string"
            },
            "name": {
               "title": "Name",
               "type": "string"
            },
            "origin": {
               "$ref": "#/$defs/Origin",
               "description": "Defines the position of (0,0,0) in the coordinate system"
            },
            "axes": {
               "description": "Axis names and directions",
               "items": {
                  "$ref": "#/$defs/Axis"
               },
               "title": "Axis names",
               "type": "array"
            },
            "axis_unit": {
               "$ref": "#/$defs/SizeUnit",
               "title": "Size unit"
            }
         },
         "required": [
            "name",
            "origin",
            "axes",
            "axis_unit"
         ],
         "title": "CoordinateSystem",
         "type": "object"
      },
      "CoupledPlane": {
         "additionalProperties": false,
         "description": "Configuration of a pair of coupled imaging plane",
         "properties": {
            "object_type": {
               "const": "Coupled plane",
               "default": "Coupled plane",
               "title": "Object Type",
               "type": "string"
            },
            "depth": {
               "title": "Depth",
               "type": "number"
            },
            "depth_unit": {
               "$ref": "#/$defs/SizeUnit",
               "title": "Depth unit"
            },
            "power": {
               "title": "Power",
               "type": "number"
            },
            "power_unit": {
               "$ref": "#/$defs/PowerUnit",
               "title": "Power unit"
            },
            "targeted_structure": {
               "$ref": "#/$defs/BrainStructureModel",
               "title": "Targeted structure"
            },
            "plane_index": {
               "title": "Plane index",
               "type": "integer"
            },
            "coupled_plane_index": {
               "description": "Plane index of the coupled plane",
               "title": "Coupled plane index",
               "type": "integer"
            },
            "power_ratio": {
               "title": "Power ratio",
               "type": "number"
            }
         },
         "required": [
            "depth",
            "depth_unit",
            "power",
            "power_unit",
            "targeted_structure",
            "plane_index",
            "coupled_plane_index",
            "power_ratio"
         ],
         "title": "CoupledPlane",
         "type": "object"
      },
      "CurrentUnit": {
         "description": "Current units",
         "enum": [
            "microamps"
         ],
         "title": "CurrentUnit",
         "type": "string"
      },
      "DataAsset": {
         "additionalProperties": false,
         "description": "Description of a single data asset",
         "properties": {
            "object_type": {
               "const": "Data asset",
               "default": "Data asset",
               "title": "Object Type",
               "type": "string"
            },
            "url": {
               "description": "URL pointing to the data asset",
               "title": "Asset location",
               "type": "string"
            }
         },
         "required": [
            "url"
         ],
         "title": "DataAsset",
         "type": "object"
      },
      "DataStream": {
         "additionalProperties": false,
         "description": "A set of devices that are acquiring data and their configurations starting and stopping at approximately the\nsame time.",
         "properties": {
            "object_type": {
               "const": "Data stream",
               "default": "Data stream",
               "title": "Object Type",
               "type": "string"
            },
            "stream_start_time": {
               "format": "date-time",
               "title": "Stream start time",
               "type": "string"
            },
            "stream_end_time": {
               "format": "date-time",
               "title": "Stream stop time",
               "type": "string"
            },
            "modalities": {
               "description": "Modalities that are acquired in this stream",
               "items": {
                  "discriminator": {
                     "mapping": {
                        "EM": "#/$defs/_Em",
                        "EMG": "#/$defs/_Emg",
                        "ISI": "#/$defs/_Isi",
                        "MRI": "#/$defs/_Mri",
                        "SPIM": "#/$defs/_Spim",
                        "STPT": "#/$defs/_Stpt",
                        "behavior": "#/$defs/_Behavior",
                        "behavior-videos": "#/$defs/_Behavior_Videos",
                        "brightfield": "#/$defs/_Brightfield",
                        "confocal": "#/$defs/_Confocal",
                        "ecephys": "#/$defs/_Ecephys",
                        "fMOST": "#/$defs/_Fmost",
                        "fib": "#/$defs/_Fib",
                        "icephys": "#/$defs/_Icephys",
                        "merfish": "#/$defs/_Merfish",
                        "pophys": "#/$defs/_Pophys",
                        "slap": "#/$defs/_Slap"
                     },
                     "propertyName": "abbreviation"
                  },
                  "oneOf": [
                     {
                        "$ref": "#/$defs/_Behavior"
                     },
                     {
                        "$ref": "#/$defs/_Behavior_Videos"
                     },
                     {
                        "$ref": "#/$defs/_Brightfield"
                     },
                     {
                        "$ref": "#/$defs/_Confocal"
                     },
                     {
                        "$ref": "#/$defs/_Emg"
                     },
                     {
                        "$ref": "#/$defs/_Em"
                     },
                     {
                        "$ref": "#/$defs/_Ecephys"
                     },
                     {
                        "$ref": "#/$defs/_Fib"
                     },
                     {
                        "$ref": "#/$defs/_Fmost"
                     },
                     {
                        "$ref": "#/$defs/_Icephys"
                     },
                     {
                        "$ref": "#/$defs/_Isi"
                     },
                     {
                        "$ref": "#/$defs/_Mri"
                     },
                     {
                        "$ref": "#/$defs/_Merfish"
                     },
                     {
                        "$ref": "#/$defs/_Pophys"
                     },
                     {
                        "$ref": "#/$defs/_Slap"
                     },
                     {
                        "$ref": "#/$defs/_Spim"
                     },
                     {
                        "$ref": "#/$defs/_Stpt"
                     }
                  ]
               },
               "title": "Modalities",
               "type": "array"
            },
            "code": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/Code"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Acquisition code"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            },
            "active_devices": {
               "description": "Device names must match devices in the Instrument",
               "items": {
                  "type": "string"
               },
               "title": "Active devices",
               "type": "array"
            },
            "configurations": {
               "description": "Configurations are parameters controlling active devices during this stream",
               "items": {
                  "discriminator": {
                     "mapping": {
                        "Air puff config": "#/$defs/AirPuffConfig",
                        "Detector config": "#/$defs/DetectorConfig",
                        "Ephys assembly config": "#/$defs/EphysAssemblyConfig",
                        "Fiber assembly config": "#/$defs/FiberAssemblyConfig",
                        "Imaging config": "#/$defs/ImagingConfig",
                        "Laser config": "#/$defs/LaserConfig",
                        "Lick spout config": "#/$defs/LickSpoutConfig",
                        "Light emitting diode config": "#/$defs/LightEmittingDiodeConfig",
                        "MRI scan": "#/$defs/MRIScan",
                        "Manipulator config": "#/$defs/ManipulatorConfig",
                        "Patch cord config": "#/$defs/PatchCordConfig",
                        "Probe config": "#/$defs/ProbeConfig",
                        "Sample chamber config": "#/$defs/SampleChamberConfig",
                        "Slap plane": "#/$defs/SlapPlane"
                     },
                     "propertyName": "object_type"
                  },
                  "oneOf": [
                     {
                        "$ref": "#/$defs/LightEmittingDiodeConfig"
                     },
                     {
                        "$ref": "#/$defs/LaserConfig"
                     },
                     {
                        "$ref": "#/$defs/ManipulatorConfig"
                     },
                     {
                        "$ref": "#/$defs/DetectorConfig"
                     },
                     {
                        "$ref": "#/$defs/PatchCordConfig"
                     },
                     {
                        "$ref": "#/$defs/FiberAssemblyConfig"
                     },
                     {
                        "$ref": "#/$defs/MRIScan"
                     },
                     {
                        "$ref": "#/$defs/LickSpoutConfig"
                     },
                     {
                        "$ref": "#/$defs/AirPuffConfig"
                     },
                     {
                        "$ref": "#/$defs/ImagingConfig"
                     },
                     {
                        "$ref": "#/$defs/SlapPlane"
                     },
                     {
                        "$ref": "#/$defs/SampleChamberConfig"
                     },
                     {
                        "$ref": "#/$defs/ProbeConfig"
                     },
                     {
                        "$ref": "#/$defs/EphysAssemblyConfig"
                     }
                  ]
               },
               "title": "Device configurations",
               "type": "array"
            },
            "connections": {
               "default": [],
               "description": "Connections are links between devices that are specific to this acquisition (i.e. not already defined in the Instrument)",
               "items": {
                  "$ref": "#/$defs/Connection"
               },
               "title": "Connections",
               "type": "array"
            }
         },
         "required": [
            "stream_start_time",
            "stream_end_time",
            "modalities",
            "active_devices",
            "configurations"
         ],
         "title": "DataStream",
         "type": "object"
      },
      "Database": {
         "description": "Database platforms that can host data assets",
         "enum": [
            "Code Ocean",
            "DANDI"
         ],
         "title": "Database",
         "type": "string"
      },
      "DetectorConfig": {
         "additionalProperties": false,
         "description": "Configuration of detector settings",
         "properties": {
            "object_type": {
               "const": "Detector config",
               "default": "Detector config",
               "title": "Object Type",
               "type": "string"
            },
            "device_name": {
               "description": "Must match a device defined in the instrument.json",
               "title": "Device name",
               "type": "string"
            },
            "exposure_time": {
               "title": "Exposure time",
               "type": "number"
            },
            "exposure_time_unit": {
               "$ref": "#/$defs/TimeUnit",
               "default": "millisecond",
               "title": "Exposure time unit"
            },
            "trigger_type": {
               "$ref": "#/$defs/TriggerType",
               "title": "Trigger type"
            },
            "compression": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Code"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Compression algorithm used during acquisition",
               "title": "Compression"
            }
         },
         "required": [
            "device_name",
            "exposure_time",
            "trigger_type"
         ],
         "title": "DetectorConfig",
         "type": "object"
      },
      "DeviceConfig": {
         "additionalProperties": false,
         "description": "Parent class for all configurations",
         "properties": {
            "object_type": {
               "const": "Device config",
               "default": "Device config",
               "title": "Object Type",
               "type": "string"
            },
            "device_name": {
               "description": "Must match a device defined in the instrument.json",
               "title": "Device name",
               "type": "string"
            }
         },
         "required": [
            "device_name"
         ],
         "title": "DeviceConfig",
         "type": "object"
      },
      "Direction": {
         "description": "Local and anatomical directions",
         "enum": [
            "Left_to_right",
            "Right_to_left",
            "Anterior_to_posterior",
            "Posterior_to_anterior",
            "Inferior_to_superior",
            "Superior_to_inferior",
            "Front_to_back",
            "Back_to_front",
            "Up_to_down",
            "Down_to_up",
            "Other",
            "Positive",
            "Negative"
         ],
         "title": "Direction",
         "type": "string"
      },
      "EphysAssemblyConfig": {
         "additionalProperties": false,
         "description": "Group of configurations for an ephys assembly",
         "properties": {
            "object_type": {
               "const": "Ephys assembly config",
               "default": "Ephys assembly config",
               "title": "Object Type",
               "type": "string"
            },
            "device_name": {
               "description": "Must match a device defined in the instrument.json",
               "title": "Device name",
               "type": "string"
            },
            "manipulator": {
               "$ref": "#/$defs/ManipulatorConfig",
               "title": "Manipulator configuration"
            },
            "probes": {
               "items": {
                  "$ref": "#/$defs/ProbeConfig"
               },
               "title": "Probe configurations",
               "type": "array"
            },
            "modules": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/MISModuleConfig"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Configurations for conveniently tracking manipulator modules, e.g. on the New Scale dome.",
               "title": "Modules"
            }
         },
         "required": [
            "device_name",
            "manipulator",
            "probes"
         ],
         "title": "EphysAssemblyConfig",
         "type": "object"
      },
      "FiberAssemblyConfig": {
         "additionalProperties": false,
         "description": "Inserted fiber photometry probe recorded in a stream",
         "properties": {
            "object_type": {
               "const": "Fiber assembly config",
               "default": "Fiber assembly config",
               "title": "Object Type",
               "type": "string"
            },
            "device_name": {
               "description": "Must match a device defined in the instrument.json",
               "title": "Device name",
               "type": "string"
            },
            "manipulator": {
               "$ref": "#/$defs/ManipulatorConfig",
               "title": "Manipulator configuration"
            },
            "probes": {
               "items": {
                  "$ref": "#/$defs/ProbeConfig"
               },
               "title": "Probe configurations",
               "type": "array"
            },
            "patch_cords": {
               "default": [],
               "items": {
                  "$ref": "#/$defs/PatchCordConfig"
               },
               "title": "Fiber photometry devices",
               "type": "array"
            }
         },
         "required": [
            "device_name",
            "manipulator",
            "probes"
         ],
         "title": "FiberAssemblyConfig",
         "type": "object"
      },
      "FitType": {
         "description": "Type of fit for calibration data",
         "enum": [
            "linear_interpolation",
            "linear",
            "other"
         ],
         "title": "FitType",
         "type": "string"
      },
      "FrequencyUnit": {
         "description": "Enumeration of Frequency Measurements",
         "enum": [
            "kilohertz",
            "hertz",
            "millihertz"
         ],
         "title": "FrequencyUnit",
         "type": "string"
      },
      "GenericModel": {
         "additionalProperties": true,
         "description": "Base class for generic types that can be used in AIND schema",
         "properties": {},
         "title": "GenericModel",
         "type": "object"
      },
      "ImageSPIM": {
         "additionalProperties": false,
         "description": "Description of an N-D image acquired with SPIM",
         "properties": {
            "object_type": {
               "const": "Image spim",
               "default": "Image spim",
               "title": "Object Type",
               "type": "string"
            },
            "channel_name": {
               "title": "Channel name",
               "type": "string"
            },
            "dimensions_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "pixel",
               "title": "Dimensions unit"
            },
            "image_to_acquisition_transform": {
               "description": "Position, rotation, and scale of the image. Note that depth should be in the planes.",
               "items": {
                  "discriminator": {
                     "mapping": {
                        "Affine": "#/$defs/Affine",
                        "Rotation": "#/$defs/Rotation",
                        "Scale": "#/$defs/Scale",
                        "Translation": "#/$defs/Translation"
                     },
                     "propertyName": "object_type"
                  },
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Translation"
                     },
                     {
                        "$ref": "#/$defs/Rotation"
                     },
                     {
                        "$ref": "#/$defs/Scale"
                     },
                     {
                        "$ref": "#/$defs/Affine"
                     }
                  ]
               },
               "title": "Image to acquisition transform",
               "type": "array"
            },
            "dimensions": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Scale"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Dimensions"
            },
            "file_name": {
               "description": "Relative path to a file from the metadata root folder",
               "format": "uri-reference",
               "title": "File name",
               "type": "string"
            },
            "imaging_angle": {
               "default": 0,
               "description": "Angle of the detector relative to the image plane relative to perpendicular",
               "title": "Imaging angle",
               "type": "integer"
            },
            "imaging_angle_unit": {
               "$ref": "#/$defs/AngleUnit",
               "default": "degrees",
               "title": "Imaging angle unit"
            },
            "image_start_time": {
               "anyOf": [
                  {
                     "format": "date-time",
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Image acquisition start time"
            },
            "image_end_time": {
               "anyOf": [
                  {
                     "format": "date-time",
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Image acquisition end time"
            }
         },
         "required": [
            "channel_name",
            "image_to_acquisition_transform",
            "file_name"
         ],
         "title": "ImageSPIM",
         "type": "object"
      },
      "ImagingConfig": {
         "additionalProperties": false,
         "description": "Configuration of an imaging instrument",
         "properties": {
            "object_type": {
               "const": "Imaging config",
               "default": "Imaging config",
               "title": "Object Type",
               "type": "string"
            },
            "device_name": {
               "description": "Must match a device defined in the instrument.json",
               "title": "Device name",
               "type": "string"
            },
            "channels": {
               "items": {
                  "discriminator": {
                     "mapping": {
                        "Channel": "#/$defs/Channel",
                        "Slap channel": "#/$defs/SlapChannel"
                     },
                     "propertyName": "object_type"
                  },
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Channel"
                     },
                     {
                        "$ref": "#/$defs/SlapChannel"
                     }
                  ]
               },
               "title": "Channels",
               "type": "array"
            },
            "coordinate_system": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/CoordinateSystem"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Required for ImageSPIM objects and when the imaging coordinate system differs from the Acquisition.coordinate_system",
               "title": "Coordinate system"
            },
            "images": {
               "items": {
                  "discriminator": {
                     "mapping": {
                        "Image spim": "#/$defs/ImageSPIM",
                        "Planar image": "#/$defs/PlanarImage",
                        "Planar image stack": "#/$defs/PlanarImageStack"
                     },
                     "propertyName": "object_type"
                  },
                  "oneOf": [
                     {
                        "$ref": "#/$defs/PlanarImage"
                     },
                     {
                        "$ref": "#/$defs/PlanarImageStack"
                     },
                     {
                        "$ref": "#/$defs/ImageSPIM"
                     }
                  ]
               },
               "title": "Images",
               "type": "array"
            },
            "sampling_strategy": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/SamplingStrategy"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Sampling strategy"
            }
         },
         "required": [
            "device_name",
            "channels",
            "images"
         ],
         "title": "ImagingConfig",
         "type": "object"
      },
      "Immersion": {
         "additionalProperties": false,
         "description": "Configuration of immersion medium",
         "properties": {
            "object_type": {
               "const": "Immersion",
               "default": "Immersion",
               "title": "Object Type",
               "type": "string"
            },
            "medium": {
               "$ref": "#/$defs/ImmersionMedium",
               "title": "Immersion medium"
            },
            "refractive_index": {
               "title": "Index of refraction",
               "type": "number"
            }
         },
         "required": [
            "medium",
            "refractive_index"
         ],
         "title": "Immersion",
         "type": "object"
      },
      "ImmersionMedium": {
         "description": "Immersion medium name",
         "enum": [
            "air",
            "multi",
            "oil",
            "PBS",
            "water",
            "other",
            "easy index",
            "ethyl cinnimate",
            "aqueous clearing buffer"
         ],
         "title": "ImmersionMedium",
         "type": "string"
      },
      "LaserConfig": {
         "additionalProperties": false,
         "description": "Configuration of laser settings in an acquisition",
         "properties": {
            "object_type": {
               "const": "Laser config",
               "default": "Laser config",
               "title": "Object Type",
               "type": "string"
            },
            "device_name": {
               "description": "Must match a device defined in the instrument.json",
               "title": "Device name",
               "type": "string"
            },
            "wavelength": {
               "title": "Wavelength (nm)",
               "type": "integer"
            },
            "wavelength_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "nanometer",
               "title": "Wavelength unit"
            },
            "power": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Excitation power"
            },
            "power_unit": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/PowerUnit"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Excitation power unit"
            }
         },
         "required": [
            "device_name",
            "wavelength"
         ],
         "title": "LaserConfig",
         "type": "object"
      },
      "LickSpoutConfig": {
         "additionalProperties": false,
         "description": "Lick spout acquisition information",
         "properties": {
            "object_type": {
               "const": "Lick spout config",
               "default": "Lick spout config",
               "title": "Object Type",
               "type": "string"
            },
            "device_name": {
               "description": "Must match a device defined in the instrument.json",
               "title": "Device name",
               "type": "string"
            },
            "solution": {
               "$ref": "#/$defs/Liquid",
               "title": "Solution"
            },
            "solution_valence": {
               "$ref": "#/$defs/Valence"
            },
            "volume": {
               "title": "Volume",
               "type": "number"
            },
            "volume_unit": {
               "$ref": "#/$defs/VolumeUnit",
               "title": "Volume unit"
            },
            "relative_position": {
               "items": {
                  "$ref": "#/$defs/AnatomicalRelative"
               },
               "title": "Initial relative position",
               "type": "array"
            },
            "coordinate_system": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/CoordinateSystem"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Device coordinate system"
            },
            "transform": {
               "anyOf": [
                  {
                     "items": {
                        "discriminator": {
                           "mapping": {
                              "Affine": "#/$defs/Affine",
                              "Rotation": "#/$defs/Rotation",
                              "Scale": "#/$defs/Scale",
                              "Translation": "#/$defs/Translation"
                           },
                           "propertyName": "object_type"
                        },
                        "oneOf": [
                           {
                              "$ref": "#/$defs/Translation"
                           },
                           {
                              "$ref": "#/$defs/Rotation"
                           },
                           {
                              "$ref": "#/$defs/Scale"
                           },
                           {
                              "$ref": "#/$defs/Affine"
                           }
                        ]
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Entry coordinate, depth, and rotation in the Acquisition.coordinate_system",
               "title": "Device to acquisition transform"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "device_name",
            "solution",
            "solution_valence",
            "volume",
            "volume_unit",
            "relative_position"
         ],
         "title": "LickSpoutConfig",
         "type": "object"
      },
      "LightEmittingDiodeConfig": {
         "additionalProperties": false,
         "description": "Configuration of LED settings",
         "properties": {
            "object_type": {
               "const": "Light emitting diode config",
               "default": "Light emitting diode config",
               "title": "Object Type",
               "type": "string"
            },
            "device_name": {
               "description": "Must match a device defined in the instrument.json",
               "title": "Device name",
               "type": "string"
            },
            "power": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Excitation power"
            },
            "power_unit": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/PowerUnit"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Excitation power unit"
            }
         },
         "required": [
            "device_name"
         ],
         "title": "LightEmittingDiodeConfig",
         "type": "object"
      },
      "Liquid": {
         "description": "Solution names",
         "enum": [
            "Water",
            "Sucrose",
            "Quinine",
            "Citric acid",
            "Other"
         ],
         "title": "Liquid",
         "type": "string"
      },
      "MISModuleConfig": {
         "additionalProperties": false,
         "description": "Modular insertion system module configuration",
         "properties": {
            "object_type": {
               "const": "MIS module config",
               "default": "MIS module config",
               "title": "Object Type",
               "type": "string"
            },
            "arc_angle": {
               "title": "Arc Angle (deg)",
               "type": "number"
            },
            "module_angle": {
               "title": "Module Angle (deg)",
               "type": "number"
            },
            "rotation_angle": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Rotation Angle (deg)"
            },
            "angle_unit": {
               "$ref": "#/$defs/AngleUnit",
               "default": "degrees",
               "title": "Angle unit"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "arc_angle",
            "module_angle"
         ],
         "title": "MISModuleConfig",
         "type": "object"
      },
      "MRIScan": {
         "additionalProperties": false,
         "description": "Configuration of a 3D scan",
         "properties": {
            "object_type": {
               "const": "MRI scan",
               "default": "MRI scan",
               "title": "Object Type",
               "type": "string"
            },
            "device_name": {
               "description": "Must match a device defined in the instrument.json",
               "title": "Device name",
               "type": "string"
            },
            "scan_index": {
               "title": "Scan index",
               "type": "integer"
            },
            "scan_type": {
               "$ref": "#/$defs/ScanType",
               "title": "Scan type"
            },
            "primary_scan": {
               "description": "Indicates the primary scan used for downstream analysis",
               "title": "Primary scan",
               "type": "boolean"
            },
            "scan_sequence_type": {
               "$ref": "#/$defs/MriScanSequence",
               "title": "Scan sequence"
            },
            "rare_factor": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "RARE factor"
            },
            "echo_time": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Echo time"
            },
            "echo_time_unit": {
               "$ref": "#/$defs/TimeUnit",
               "title": "Echo time unit"
            },
            "effective_echo_time": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Effective echo time"
            },
            "repetition_time": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Repetition time"
            },
            "repetition_time_unit": {
               "$ref": "#/$defs/TimeUnit",
               "title": "Repetition time unit"
            },
            "scan_coordinate_system": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/CoordinateSystem"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Scanner coordinate system"
            },
            "scan_affine_transform": {
               "anyOf": [
                  {
                     "items": {
                        "discriminator": {
                           "mapping": {
                              "Affine": "#/$defs/Affine",
                              "Rotation": "#/$defs/Rotation",
                              "Scale": "#/$defs/Scale",
                              "Translation": "#/$defs/Translation"
                           },
                           "propertyName": "object_type"
                        },
                        "oneOf": [
                           {
                              "$ref": "#/$defs/Translation"
                           },
                           {
                              "$ref": "#/$defs/Rotation"
                           },
                           {
                              "$ref": "#/$defs/Scale"
                           },
                           {
                              "$ref": "#/$defs/Affine"
                           }
                        ]
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "NIFTI sform/qform, Bruker vc_transform, etc",
               "title": "MRI Scan affine transform"
            },
            "subject_position": {
               "$ref": "#/$defs/SubjectPosition",
               "title": "Subject position"
            },
            "resolution": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Scale"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Voxel resolution"
            },
            "resolution_unit": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/SizeUnit"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Voxel resolution unit"
            },
            "additional_scan_parameters": {
               "$ref": "#/$defs/GenericModel",
               "title": "Parameters"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "device_name",
            "scan_index",
            "scan_type",
            "primary_scan",
            "scan_sequence_type",
            "echo_time",
            "echo_time_unit",
            "repetition_time",
            "repetition_time_unit",
            "subject_position",
            "additional_scan_parameters"
         ],
         "title": "MRIScan",
         "type": "object"
      },
      "MagneticFieldUnit": {
         "description": "Magnetic field units",
         "enum": [
            "tesla",
            "millitesla",
            "microtesla"
         ],
         "title": "MagneticFieldUnit",
         "type": "string"
      },
      "Maintenance": {
         "additionalProperties": false,
         "description": "Generic maintenance class",
         "properties": {
            "object_type": {
               "const": "Maintenance",
               "default": "Maintenance",
               "title": "Object Type",
               "type": "string"
            },
            "device_name": {
               "description": "Must match a device defined in the instrument.json",
               "title": "Device name",
               "type": "string"
            },
            "maintenance_date": {
               "format": "date-time",
               "title": "Date and time of maintenance",
               "type": "string"
            },
            "description": {
               "description": "Description on maintenance procedure",
               "title": "Description",
               "type": "string"
            },
            "protocol_id": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Protocol ID"
            },
            "reagents": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/Reagent"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Reagents"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "device_name",
            "maintenance_date",
            "description"
         ],
         "title": "Maintenance",
         "type": "object"
      },
      "ManipulatorConfig": {
         "additionalProperties": false,
         "description": "Configuration of a manipulator",
         "properties": {
            "object_type": {
               "const": "Manipulator config",
               "default": "Manipulator config",
               "title": "Object Type",
               "type": "string"
            },
            "device_name": {
               "description": "Must match a device defined in the instrument.json",
               "title": "Device name",
               "type": "string"
            },
            "coordinate_system": {
               "$ref": "#/$defs/CoordinateSystem",
               "title": "Device coordinate system"
            },
            "local_axis_positions": {
               "$ref": "#/$defs/Translation",
               "title": "Local axis positions"
            }
         },
         "required": [
            "device_name",
            "coordinate_system",
            "local_axis_positions"
         ],
         "title": "ManipulatorConfig",
         "type": "object"
      },
      "MassUnit": {
         "description": "Enumeration of Mass Measurements",
         "enum": [
            "kilogram",
            "gram",
            "milligram",
            "microgram",
            "nanogram"
         ],
         "title": "MassUnit",
         "type": "string"
      },
      "MemoryUnit": {
         "description": "Computer memory units",
         "enum": [
            "Byte",
            "Kilobyte",
            "Megabyte",
            "Gigabyte",
            "Terabyte",
            "Petabyte",
            "Exabyte"
         ],
         "title": "MemoryUnit",
         "type": "string"
      },
      "MousePlatformConfig": {
         "additionalProperties": false,
         "description": "Configuration for mouse platforms",
         "properties": {
            "object_type": {
               "const": "Mouse platform config",
               "default": "Mouse platform config",
               "title": "Object Type",
               "type": "string"
            },
            "device_name": {
               "description": "Must match a device defined in the instrument.json",
               "title": "Device name",
               "type": "string"
            },
            "objects_in_arena": {
               "anyOf": [
                  {
                     "items": {
                        "type": "string"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Objects in area"
            },
            "active_control": {
               "default": false,
               "description": "True when movement of the mouse platform is dynamically controlled by the experimenter",
               "title": "Active control",
               "type": "boolean"
            }
         },
         "required": [
            "device_name"
         ],
         "title": "MousePlatformConfig",
         "type": "object"
      },
      "MriScanSequence": {
         "description": "MRI scan sequence",
         "enum": [
            "RARE",
            "Other"
         ],
         "title": "MriScanSequence",
         "type": "string"
      },
      "Origin": {
         "description": "Origin positions for coordinate systems",
         "enum": [
            "Origin",
            "Bregma",
            "Lambda",
            "Between_C1-C2",
            "Between_C2-C3",
            "Between_C3-C4",
            "Between_C4-C5",
            "Between_C6-C7",
            "Between_C7-C8",
            "Between_C8-T1",
            "Between_T1-T2",
            "Tip",
            "Front_center",
            "Arena_center",
            "Arena_front_left",
            "Arena_front_right",
            "Arena_back_left",
            "Arena_back_right"
         ],
         "title": "Origin",
         "type": "string"
      },
      "PIDName": {
         "additionalProperties": false,
         "description": "Model for associate a name with a persistent identifier (PID),\nthe registry for that PID, and abbreviation for that registry",
         "properties": {
            "name": {
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Abbreviation"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry identifier"
            }
         },
         "required": [
            "name"
         ],
         "title": "PIDName",
         "type": "object"
      },
      "PatchCordConfig": {
         "additionalProperties": false,
         "description": "Configuration of a patch cord and its output power to another device",
         "properties": {
            "object_type": {
               "const": "Patch cord config",
               "default": "Patch cord config",
               "title": "Object Type",
               "type": "string"
            },
            "device_name": {
               "description": "Must match a device defined in the instrument.json",
               "title": "Device name",
               "type": "string"
            },
            "channels": {
               "items": {
                  "$ref": "#/$defs/Channel"
               },
               "title": "Channels",
               "type": "array"
            }
         },
         "required": [
            "device_name",
            "channels"
         ],
         "title": "PatchCordConfig",
         "type": "object"
      },
      "PerformanceMetrics": {
         "additionalProperties": false,
         "description": "Summary of a StimulusEpoch",
         "properties": {
            "object_type": {
               "const": "Performance metrics",
               "default": "Performance metrics",
               "title": "Object Type",
               "type": "string"
            },
            "output_parameters": {
               "$ref": "#/$defs/GenericModel",
               "default": {},
               "title": "Additional metrics"
            },
            "reward_consumed_during_epoch": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Reward consumed during training (uL)"
            },
            "reward_consumed_unit": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/VolumeUnit"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Reward consumed unit"
            },
            "trials_total": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Total trials"
            },
            "trials_finished": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Finished trials"
            },
            "trials_rewarded": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Rewarded trials"
            }
         },
         "title": "PerformanceMetrics",
         "type": "object"
      },
      "PlanarImage": {
         "additionalProperties": false,
         "description": "Description of an N-D image acquired in a specific imaging plane",
         "properties": {
            "object_type": {
               "const": "Planar image",
               "default": "Planar image",
               "title": "Object Type",
               "type": "string"
            },
            "channel_name": {
               "title": "Channel name",
               "type": "string"
            },
            "dimensions_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "pixel",
               "title": "Dimensions unit"
            },
            "image_to_acquisition_transform": {
               "description": "Position, rotation, and scale of the image. Note that depth should be in the planes.",
               "items": {
                  "discriminator": {
                     "mapping": {
                        "Affine": "#/$defs/Affine",
                        "Rotation": "#/$defs/Rotation",
                        "Scale": "#/$defs/Scale",
                        "Translation": "#/$defs/Translation"
                     },
                     "propertyName": "object_type"
                  },
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Translation"
                     },
                     {
                        "$ref": "#/$defs/Rotation"
                     },
                     {
                        "$ref": "#/$defs/Scale"
                     },
                     {
                        "$ref": "#/$defs/Affine"
                     }
                  ]
               },
               "title": "Image to acquisition transform",
               "type": "array"
            },
            "dimensions": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Scale"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Dimensions"
            },
            "planes": {
               "items": {
                  "discriminator": {
                     "mapping": {
                        "Coupled plane": "#/$defs/CoupledPlane",
                        "Plane": "#/$defs/Plane",
                        "Slap plane": "#/$defs/SlapPlane"
                     },
                     "propertyName": "object_type"
                  },
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Plane"
                     },
                     {
                        "$ref": "#/$defs/CoupledPlane"
                     },
                     {
                        "$ref": "#/$defs/SlapPlane"
                     }
                  ]
               },
               "title": "Imaging planes",
               "type": "array"
            }
         },
         "required": [
            "channel_name",
            "image_to_acquisition_transform",
            "planes"
         ],
         "title": "PlanarImage",
         "type": "object"
      },
      "PlanarImageStack": {
         "additionalProperties": false,
         "description": "Description of a stack of images acquired in a specific imaging plane",
         "properties": {
            "object_type": {
               "const": "Planar image stack",
               "default": "Planar image stack",
               "title": "Object Type",
               "type": "string"
            },
            "channel_name": {
               "title": "Channel name",
               "type": "string"
            },
            "dimensions_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "pixel",
               "title": "Dimensions unit"
            },
            "image_to_acquisition_transform": {
               "description": "Position, rotation, and scale of the image. Note that depth should be in the planes.",
               "items": {
                  "discriminator": {
                     "mapping": {
                        "Affine": "#/$defs/Affine",
                        "Rotation": "#/$defs/Rotation",
                        "Scale": "#/$defs/Scale",
                        "Translation": "#/$defs/Translation"
                     },
                     "propertyName": "object_type"
                  },
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Translation"
                     },
                     {
                        "$ref": "#/$defs/Rotation"
                     },
                     {
                        "$ref": "#/$defs/Scale"
                     },
                     {
                        "$ref": "#/$defs/Affine"
                     }
                  ]
               },
               "title": "Image to acquisition transform",
               "type": "array"
            },
            "dimensions": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Scale"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Dimensions"
            },
            "planes": {
               "items": {
                  "discriminator": {
                     "mapping": {
                        "Coupled plane": "#/$defs/CoupledPlane",
                        "Plane": "#/$defs/Plane",
                        "Slap plane": "#/$defs/SlapPlane"
                     },
                     "propertyName": "object_type"
                  },
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Plane"
                     },
                     {
                        "$ref": "#/$defs/CoupledPlane"
                     },
                     {
                        "$ref": "#/$defs/SlapPlane"
                     }
                  ]
               },
               "title": "Imaging planes",
               "type": "array"
            },
            "power_function": {
               "$ref": "#/$defs/PowerFunction",
               "title": "Power function"
            },
            "depth_start": {
               "title": "Starting depth",
               "type": "number"
            },
            "depth_end": {
               "title": "Ending depth",
               "type": "number"
            },
            "depth_step": {
               "title": "Step size",
               "type": "number"
            },
            "depth_unit": {
               "$ref": "#/$defs/SizeUnit",
               "title": "Depth unit"
            }
         },
         "required": [
            "channel_name",
            "image_to_acquisition_transform",
            "planes",
            "power_function",
            "depth_start",
            "depth_end",
            "depth_step",
            "depth_unit"
         ],
         "title": "PlanarImageStack",
         "type": "object"
      },
      "Plane": {
         "additionalProperties": false,
         "description": "Configuration of an imaging plane",
         "properties": {
            "object_type": {
               "const": "Plane",
               "default": "Plane",
               "title": "Object Type",
               "type": "string"
            },
            "depth": {
               "title": "Depth",
               "type": "number"
            },
            "depth_unit": {
               "$ref": "#/$defs/SizeUnit",
               "title": "Depth unit"
            },
            "power": {
               "title": "Power",
               "type": "number"
            },
            "power_unit": {
               "$ref": "#/$defs/PowerUnit",
               "title": "Power unit"
            },
            "targeted_structure": {
               "$ref": "#/$defs/BrainStructureModel",
               "title": "Targeted structure"
            }
         },
         "required": [
            "depth",
            "depth_unit",
            "power",
            "power_unit",
            "targeted_structure"
         ],
         "title": "Plane",
         "type": "object"
      },
      "PowerCalibration": {
         "additionalProperties": false,
         "description": "Calibration of a device that outputs power based on input strength",
         "properties": {
            "object_type": {
               "const": "Power calibration",
               "default": "Power calibration",
               "title": "Object Type",
               "type": "string"
            },
            "device_name": {
               "description": "Must match a device defined in the instrument.json",
               "title": "Device name",
               "type": "string"
            },
            "calibration_date": {
               "format": "date-time",
               "title": "Date and time of calibration",
               "type": "string"
            },
            "description": {
               "const": "Power measured for various power or percentage input strengths",
               "default": "Power measured for various power or percentage input strengths",
               "title": "Description",
               "type": "string"
            },
            "input": {
               "description": "Power, voltage, or percentage input strength",
               "items": {
                  "type": "number"
               },
               "title": "Input",
               "type": "array"
            },
            "input_unit": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/PowerUnit"
                  },
                  {
                     "$ref": "#/$defs/VoltageUnit"
                  }
               ],
               "title": "Input unit"
            },
            "repeats": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "If each input was repeated multiple times, provide the number of repeats",
               "title": "Number of repeats"
            },
            "output": {
               "description": "Power output (provide the average if repeated)",
               "items": {
                  "type": "number"
               },
               "title": "Output",
               "type": "array"
            },
            "output_unit": {
               "$ref": "#/$defs/PowerUnit",
               "title": "Output unit"
            },
            "fit": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/CalibrationFit"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Fit equation for the calibration data used during data acquisition",
               "title": "Fit"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "device_name",
            "calibration_date",
            "input",
            "input_unit",
            "output",
            "output_unit"
         ],
         "title": "PowerCalibration",
         "type": "object"
      },
      "PowerFunction": {
         "description": "Power functions",
         "enum": [
            "Constant",
            "Linear",
            "Exponential",
            "Other"
         ],
         "title": "PowerFunction",
         "type": "string"
      },
      "PowerUnit": {
         "description": "Unit for power, set or measured",
         "enum": [
            "microwatt",
            "milliwatt",
            "percent"
         ],
         "title": "PowerUnit",
         "type": "string"
      },
      "PressureUnit": {
         "description": "Enumeration of Pressure Measurements",
         "enum": [
            "millipascal",
            "pascal",
            "kilopascal"
         ],
         "title": "PressureUnit",
         "type": "string"
      },
      "ProbeConfig": {
         "additionalProperties": false,
         "description": "Configuration for a device inserted into a brain",
         "properties": {
            "object_type": {
               "const": "Probe config",
               "default": "Probe config",
               "title": "Object Type",
               "type": "string"
            },
            "device_name": {
               "description": "Must match a device defined in the instrument.json",
               "title": "Device name",
               "type": "string"
            },
            "primary_targeted_structure": {
               "$ref": "#/$defs/BrainStructureModel",
               "title": "Targeted structure"
            },
            "other_targeted_structure": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/BrainStructureModel"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Other targeted structure"
            },
            "atlas_coordinate": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/AtlasCoordinate"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Target coordinate in Acquisition.atlas"
            },
            "coordinate_system": {
               "$ref": "#/$defs/CoordinateSystem",
               "description": "Device coordinate system, defines un-rotated probe's orientation relative to the Acquisition.coordinate_system",
               "title": "Device coordinate system"
            },
            "transform": {
               "description": "Entry coordinate, depth, and rotation in the Acquisition.coordinate_system",
               "items": {
                  "discriminator": {
                     "mapping": {
                        "Affine": "#/$defs/Affine",
                        "Rotation": "#/$defs/Rotation",
                        "Scale": "#/$defs/Scale",
                        "Translation": "#/$defs/Translation"
                     },
                     "propertyName": "object_type"
                  },
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Translation"
                     },
                     {
                        "$ref": "#/$defs/Rotation"
                     },
                     {
                        "$ref": "#/$defs/Scale"
                     },
                     {
                        "$ref": "#/$defs/Affine"
                     }
                  ]
               },
               "title": "Device to acquisition transform",
               "type": "array"
            },
            "dye": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Dye"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "device_name",
            "primary_targeted_structure",
            "coordinate_system",
            "transform"
         ],
         "title": "ProbeConfig",
         "type": "object"
      },
      "Reagent": {
         "additionalProperties": false,
         "description": "Description of reagent used in procedure",
         "properties": {
            "object_type": {
               "const": "Reagent",
               "default": "Reagent",
               "title": "Object Type",
               "type": "string"
            },
            "name": {
               "title": "Name",
               "type": "string"
            },
            "source": {
               "discriminator": {
                  "mapping": {
                     "AA Opto Electronic": "#/$defs/_Aa_Opto_Electronic",
                     "ASUS": "#/$defs/_Asus",
                     "Abcam": "#/$defs/_Abcam",
                     "Addgene": "#/$defs/_Addgene",
                     "Ailipu Technology Co": "#/$defs/_Ailipu_Technology_Co",
                     "Allen Institute": "#/$defs/_Allen_Institute",
                     "Allen Institute for Brain Science": "#/$defs/_Allen_Institute_For_Brain_Science",
                     "Allen Institute for Neural Dynamics": "#/$defs/_Allen_Institute_For_Neural_Dynamics",
                     "Allied": "#/$defs/_Allied",
                     "Applied Scientific Instrumentation": "#/$defs/_Applied_Scientific_Instrumentation",
                     "Arduino": "#/$defs/_Arduino",
                     "Arecont Vision Costar": "#/$defs/_Arecont_Vision_Costar",
                     "Basler": "#/$defs/_Basler",
                     "Baylor College of Medicine": "#/$defs/_Baylor_College_Of_Medicine",
                     "Boston University": "#/$defs/_Boston_University",
                     "Cajal Neuroscience": "#/$defs/_Cajal_Neuroscience",
                     "Cambridge Technology": "#/$defs/_Cambridge_Technology",
                     "Carl Zeiss": "#/$defs/_Carl_Zeiss",
                     "Champalimaud Foundation": "#/$defs/_Champalimaud_Foundation",
                     "Chan Zuckerberg Initiative": "#/$defs/_Chan_Zuckerberg_Initiative",
                     "Charles River Laboratories": "#/$defs/_Charles_River_Laboratories",
                     "Chroma": "#/$defs/_Chroma",
                     "Coherent Scientific": "#/$defs/_Coherent_Scientific",
                     "Columbia University": "#/$defs/_Columbia_University",
                     "Computar": "#/$defs/_Computar",
                     "Conoptics": "#/$defs/_Conoptics",
                     "Custom": "#/$defs/_Custom",
                     "DigiKey": "#/$defs/_Digikey",
                     "Dodotronic": "#/$defs/_Dodotronic",
                     "Doric": "#/$defs/_Doric",
                     "Ealing": "#/$defs/_Ealing",
                     "Edmund Optics": "#/$defs/_Edmund_Optics",
                     "Emory University": "#/$defs/_Emory_University",
                     "Euresys": "#/$defs/_Euresys",
                     "Fujinon": "#/$defs/_Fujinon",
                     "Hamamatsu": "#/$defs/_Hamamatsu",
                     "Hamilton": "#/$defs/_Hamilton",
                     "Huazhong University of Science and Technology": "#/$defs/_Huazhong_University_Of_Science_And_Technology",
                     "IR Robot Co": "#/$defs/_Ir_Robot_Co",
                     "ISL Products International": "#/$defs/_Isl_Products_International",
                     "Infinity Photo-Optical": "#/$defs/_Infinity_Photo_Optical",
                     "Integrated DNA Technologies": "#/$defs/_Integrated_Dna_Technologies",
                     "Interuniversity Microelectronics Center": "#/$defs/_Interuniversity_Microelectronics_Center",
                     "Invitrogen": "#/$defs/_Invitrogen",
                     "Item": "#/$defs/_Item",
                     "Jackson Laboratory": "#/$defs/_Jackson_Laboratory",
                     "Janelia Research Campus": "#/$defs/_Janelia_Research_Campus",
                     "Jenoptik": "#/$defs/_Jenoptik",
                     "Johns Hopkins University": "#/$defs/_Johns_Hopkins_University",
                     "Julabo": "#/$defs/_Julabo",
                     "Kowa": "#/$defs/_Kowa",
                     "LASOS Lasertechnik": "#/$defs/_Lasos_Lasertechnik",
                     "LG": "#/$defs/_Lg",
                     "Leica": "#/$defs/_Leica",
                     "LifeCanvas": "#/$defs/_Lifecanvas",
                     "Lumen Dynamics": "#/$defs/_Lumen_Dynamics",
                     "MBF Bioscience": "#/$defs/_Mbf_Bioscience",
                     "MIT Department of Brain and Cognitive Sciences": "#/$defs/_Mit_Department_Of_Brain_And_Cognitive_Sciences",
                     "MKS Newport": "#/$defs/_Mks_Newport",
                     "MPI": "#/$defs/_Mpi",
                     "Massachusetts Institute of Technology": "#/$defs/_Massachusetts_Institute_Of_Technology",
                     "McGovern Institute for Brain Research": "#/$defs/_Mcgovern_Institute_For_Brain_Research",
                     "Meadowlark Optics": "#/$defs/_Meadowlark_Optics",
                     "Michael J. Fox Foundation for Parkinson's Research": "#/$defs/_Michael_J_Fox_Foundation_For_Parkinson_S_Research",
                     "Midwest Optical Systems, Inc.": "#/$defs/_Midwest_Optical_Systems_Inc_",
                     "Mitutuyo": "#/$defs/_Mitutuyo",
                     "NResearch Inc": "#/$defs/_Nresearch_Inc",
                     "National Center for Complementary and Integrative Health": "#/$defs/_National_Center_For_Complementary_And_Integrative_Health",
                     "National Institute of Mental Health": "#/$defs/_National_Institute_Of_Mental_Health",
                     "National Institute of Neurological Disorders and Stroke": "#/$defs/_National_Institute_Of_Neurological_Disorders_And_Stroke",
                     "National Instruments": "#/$defs/_National_Instruments",
                     "Navitar": "#/$defs/_Navitar",
                     "NeuraLynx": "#/$defs/_Neuralynx",
                     "Neurophotometrics": "#/$defs/_Neurophotometrics",
                     "New Scale Technologies": "#/$defs/_New_Scale_Technologies",
                     "New York University": "#/$defs/_New_York_University",
                     "Nikon": "#/$defs/_Nikon",
                     "Olympus": "#/$defs/_Olympus",
                     "Open Ephys Production Site": "#/$defs/_Open_Ephys_Production_Site",
                     "Optotune": "#/$defs/_Optotune",
                     "Other": "#/$defs/_Other",
                     "Oxxius": "#/$defs/_Oxxius",
                     "Placid Industries": "#/$defs/_Placid_Industries",
                     "Prizmatix": "#/$defs/_Prizmatix",
                     "Quantifi": "#/$defs/_Quantifi",
                     "Raspberry Pi": "#/$defs/_Raspberry_Pi",
                     "SICGEN": "#/$defs/_Sicgen",
                     "Same Sky": "#/$defs/_Same_Sky",
                     "Schneider-Kreuznach": "#/$defs/_Schneider_Kreuznach",
                     "Second Order Effects": "#/$defs/_Second_Order_Effects",
                     "Semrock": "#/$defs/_Semrock",
                     "Sigma-Aldrich": "#/$defs/_Sigma_Aldrich",
                     "Simons Foundation": "#/$defs/_Simons_Foundation",
                     "Spectra-Physics": "#/$defs/_Spectra_Physics",
                     "Spinnaker": "#/$defs/_Spinnaker",
                     "Tamron": "#/$defs/_Tamron",
                     "Technical Manufacturing Corporation": "#/$defs/_Technical_Manufacturing_Corporation",
                     "Teledyne FLIR": "#/$defs/_Teledyne_Flir",
                     "Templeton World Charity Foundation": "#/$defs/_Templeton_World_Charity_Foundation",
                     "The Imaging Source": "#/$defs/_The_Imaging_Source",
                     "The Lee Company": "#/$defs/_The_Lee_Company",
                     "Thermo Fisher Scientific": "#/$defs/_Thermo_Fisher_Scientific",
                     "Thorlabs": "#/$defs/_Thorlabs",
                     "Transducer Techniques": "#/$defs/_Transducer_Techniques",
                     "Tymphany": "#/$defs/_Tymphany",
                     "University of California, San Diego": "#/$defs/_University_Of_California_San_Diego",
                     "University of Pennsylvania": "#/$defs/_University_Of_Pennsylvania",
                     "Vieworks": "#/$defs/_Vieworks",
                     "Vortran": "#/$defs/_Vortran",
                     "ams OSRAM": "#/$defs/_Ams_Osram"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/_Aa_Opto_Electronic"
                  },
                  {
                     "$ref": "#/$defs/_Asus"
                  },
                  {
                     "$ref": "#/$defs/_Abcam"
                  },
                  {
                     "$ref": "#/$defs/_Addgene"
                  },
                  {
                     "$ref": "#/$defs/_Ailipu_Technology_Co"
                  },
                  {
                     "$ref": "#/$defs/_Allen_Institute"
                  },
                  {
                     "$ref": "#/$defs/_Allen_Institute_For_Brain_Science"
                  },
                  {
                     "$ref": "#/$defs/_Allen_Institute_For_Neural_Dynamics"
                  },
                  {
                     "$ref": "#/$defs/_Allied"
                  },
                  {
                     "$ref": "#/$defs/_Applied_Scientific_Instrumentation"
                  },
                  {
                     "$ref": "#/$defs/_Arduino"
                  },
                  {
                     "$ref": "#/$defs/_Arecont_Vision_Costar"
                  },
                  {
                     "$ref": "#/$defs/_Basler"
                  },
                  {
                     "$ref": "#/$defs/_Baylor_College_Of_Medicine"
                  },
                  {
                     "$ref": "#/$defs/_Boston_University"
                  },
                  {
                     "$ref": "#/$defs/_Cajal_Neuroscience"
                  },
                  {
                     "$ref": "#/$defs/_Cambridge_Technology"
                  },
                  {
                     "$ref": "#/$defs/_Carl_Zeiss"
                  },
                  {
                     "$ref": "#/$defs/_Champalimaud_Foundation"
                  },
                  {
                     "$ref": "#/$defs/_Chan_Zuckerberg_Initiative"
                  },
                  {
                     "$ref": "#/$defs/_Charles_River_Laboratories"
                  },
                  {
                     "$ref": "#/$defs/_Chroma"
                  },
                  {
                     "$ref": "#/$defs/_Coherent_Scientific"
                  },
                  {
                     "$ref": "#/$defs/_Columbia_University"
                  },
                  {
                     "$ref": "#/$defs/_Computar"
                  },
                  {
                     "$ref": "#/$defs/_Conoptics"
                  },
                  {
                     "$ref": "#/$defs/_Custom"
                  },
                  {
                     "$ref": "#/$defs/_Digikey"
                  },
                  {
                     "$ref": "#/$defs/_Dodotronic"
                  },
                  {
                     "$ref": "#/$defs/_Doric"
                  },
                  {
                     "$ref": "#/$defs/_Ealing"
                  },
                  {
                     "$ref": "#/$defs/_Edmund_Optics"
                  },
                  {
                     "$ref": "#/$defs/_Emory_University"
                  },
                  {
                     "$ref": "#/$defs/_Euresys"
                  },
                  {
                     "$ref": "#/$defs/_Fujinon"
                  },
                  {
                     "$ref": "#/$defs/_Hamamatsu"
                  },
                  {
                     "$ref": "#/$defs/_Hamilton"
                  },
                  {
                     "$ref": "#/$defs/_Huazhong_University_Of_Science_And_Technology"
                  },
                  {
                     "$ref": "#/$defs/_Ir_Robot_Co"
                  },
                  {
                     "$ref": "#/$defs/_Isl_Products_International"
                  },
                  {
                     "$ref": "#/$defs/_Infinity_Photo_Optical"
                  },
                  {
                     "$ref": "#/$defs/_Integrated_Dna_Technologies"
                  },
                  {
                     "$ref": "#/$defs/_Interuniversity_Microelectronics_Center"
                  },
                  {
                     "$ref": "#/$defs/_Invitrogen"
                  },
                  {
                     "$ref": "#/$defs/_Item"
                  },
                  {
                     "$ref": "#/$defs/_Jackson_Laboratory"
                  },
                  {
                     "$ref": "#/$defs/_Janelia_Research_Campus"
                  },
                  {
                     "$ref": "#/$defs/_Jenoptik"
                  },
                  {
                     "$ref": "#/$defs/_Johns_Hopkins_University"
                  },
                  {
                     "$ref": "#/$defs/_Julabo"
                  },
                  {
                     "$ref": "#/$defs/_Kowa"
                  },
                  {
                     "$ref": "#/$defs/_Lasos_Lasertechnik"
                  },
                  {
                     "$ref": "#/$defs/_Lg"
                  },
                  {
                     "$ref": "#/$defs/_Leica"
                  },
                  {
                     "$ref": "#/$defs/_Lifecanvas"
                  },
                  {
                     "$ref": "#/$defs/_Lumen_Dynamics"
                  },
                  {
                     "$ref": "#/$defs/_Mbf_Bioscience"
                  },
                  {
                     "$ref": "#/$defs/_Mit_Department_Of_Brain_And_Cognitive_Sciences"
                  },
                  {
                     "$ref": "#/$defs/_Mks_Newport"
                  },
                  {
                     "$ref": "#/$defs/_Mpi"
                  },
                  {
                     "$ref": "#/$defs/_Massachusetts_Institute_Of_Technology"
                  },
                  {
                     "$ref": "#/$defs/_Mcgovern_Institute_For_Brain_Research"
                  },
                  {
                     "$ref": "#/$defs/_Meadowlark_Optics"
                  },
                  {
                     "$ref": "#/$defs/_Michael_J_Fox_Foundation_For_Parkinson_S_Research"
                  },
                  {
                     "$ref": "#/$defs/_Midwest_Optical_Systems_Inc_"
                  },
                  {
                     "$ref": "#/$defs/_Mitutuyo"
                  },
                  {
                     "$ref": "#/$defs/_Nresearch_Inc"
                  },
                  {
                     "$ref": "#/$defs/_National_Center_For_Complementary_And_Integrative_Health"
                  },
                  {
                     "$ref": "#/$defs/_National_Institute_Of_Mental_Health"
                  },
                  {
                     "$ref": "#/$defs/_National_Institute_Of_Neurological_Disorders_And_Stroke"
                  },
                  {
                     "$ref": "#/$defs/_National_Instruments"
                  },
                  {
                     "$ref": "#/$defs/_Navitar"
                  },
                  {
                     "$ref": "#/$defs/_Neuralynx"
                  },
                  {
                     "$ref": "#/$defs/_Neurophotometrics"
                  },
                  {
                     "$ref": "#/$defs/_New_Scale_Technologies"
                  },
                  {
                     "$ref": "#/$defs/_New_York_University"
                  },
                  {
                     "$ref": "#/$defs/_Nikon"
                  },
                  {
                     "$ref": "#/$defs/_Olympus"
                  },
                  {
                     "$ref": "#/$defs/_Open_Ephys_Production_Site"
                  },
                  {
                     "$ref": "#/$defs/_Optotune"
                  },
                  {
                     "$ref": "#/$defs/_Other"
                  },
                  {
                     "$ref": "#/$defs/_Oxxius"
                  },
                  {
                     "$ref": "#/$defs/_Placid_Industries"
                  },
                  {
                     "$ref": "#/$defs/_Prizmatix"
                  },
                  {
                     "$ref": "#/$defs/_Quantifi"
                  },
                  {
                     "$ref": "#/$defs/_Raspberry_Pi"
                  },
                  {
                     "$ref": "#/$defs/_Sicgen"
                  },
                  {
                     "$ref": "#/$defs/_Same_Sky"
                  },
                  {
                     "$ref": "#/$defs/_Schneider_Kreuznach"
                  },
                  {
                     "$ref": "#/$defs/_Second_Order_Effects"
                  },
                  {
                     "$ref": "#/$defs/_Semrock"
                  },
                  {
                     "$ref": "#/$defs/_Sigma_Aldrich"
                  },
                  {
                     "$ref": "#/$defs/_Simons_Foundation"
                  },
                  {
                     "$ref": "#/$defs/_Spectra_Physics"
                  },
                  {
                     "$ref": "#/$defs/_Spinnaker"
                  },
                  {
                     "$ref": "#/$defs/_Tamron"
                  },
                  {
                     "$ref": "#/$defs/_Technical_Manufacturing_Corporation"
                  },
                  {
                     "$ref": "#/$defs/_Teledyne_Flir"
                  },
                  {
                     "$ref": "#/$defs/_Templeton_World_Charity_Foundation"
                  },
                  {
                     "$ref": "#/$defs/_The_Imaging_Source"
                  },
                  {
                     "$ref": "#/$defs/_The_Lee_Company"
                  },
                  {
                     "$ref": "#/$defs/_Thermo_Fisher_Scientific"
                  },
                  {
                     "$ref": "#/$defs/_Thorlabs"
                  },
                  {
                     "$ref": "#/$defs/_Transducer_Techniques"
                  },
                  {
                     "$ref": "#/$defs/_Tymphany"
                  },
                  {
                     "$ref": "#/$defs/_University_Of_California_San_Diego"
                  },
                  {
                     "$ref": "#/$defs/_University_Of_Pennsylvania"
                  },
                  {
                     "$ref": "#/$defs/_Vieworks"
                  },
                  {
                     "$ref": "#/$defs/_Vortran"
                  },
                  {
                     "$ref": "#/$defs/_Ams_Osram"
                  }
               ],
               "title": "Source"
            },
            "rrid": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/PIDName"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Research Resource ID"
            },
            "lot_number": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Lot number"
            },
            "expiration_date": {
               "anyOf": [
                  {
                     "format": "date",
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Lot expiration date"
            }
         },
         "required": [
            "name",
            "source"
         ],
         "title": "Reagent",
         "type": "object"
      },
      "Registry": {
         "description": "Registries",
         "enum": [
            "Addgene (ADDGENE)",
            "Edinburgh Mouse Atlas Project (EMAPA)",
            "Mouse Genome Informatics (MGI)",
            "National Center for Biotechnology Information (NCBI)",
            "Open Researcher and Contributor ID (ORCID)",
            "Research Organization Registry (ROR)",
            "Research Resource Identifiers (RRID)",
            "Universal Protein Resource (UNIPROT)"
         ],
         "title": "Registry",
         "type": "string"
      },
      "Rotation": {
         "additionalProperties": false,
         "description": "Rotation\n\nRotations are applied as Euler angles in order X/Y/Z\n\nAngles follow right-hand rule, with positive angles rotating counter-clockwise.",
         "properties": {
            "object_type": {
               "const": "Rotation",
               "default": "Rotation",
               "title": "Object Type",
               "type": "string"
            },
            "angles": {
               "description": "Right-hand rule, positive angles rotate CCW",
               "items": {
                  "type": "number"
               },
               "title": "Angles and axes in 3D space",
               "type": "array"
            },
            "angles_unit": {
               "$ref": "#/$defs/AngleUnit",
               "default": "degrees",
               "title": "Angle unit"
            }
         },
         "required": [
            "angles"
         ],
         "title": "Rotation",
         "type": "object"
      },
      "SampleChamberConfig": {
         "additionalProperties": false,
         "description": "Configuration of a sample chamber",
         "properties": {
            "object_type": {
               "const": "Sample chamber config",
               "default": "Sample chamber config",
               "title": "Object Type",
               "type": "string"
            },
            "device_name": {
               "description": "Must match a device defined in the instrument.json",
               "title": "Device name",
               "type": "string"
            },
            "chamber_immersion": {
               "$ref": "#/$defs/Immersion",
               "title": "Acquisition chamber immersion data"
            },
            "sample_immersion": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Immersion"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Acquisition sample immersion data"
            }
         },
         "required": [
            "device_name",
            "chamber_immersion"
         ],
         "title": "SampleChamberConfig",
         "type": "object"
      },
      "SamplingStrategy": {
         "additionalProperties": false,
         "description": "Description of an image sampling strategy",
         "properties": {
            "object_type": {
               "const": "Sampling strategy",
               "default": "Sampling strategy",
               "title": "Object Type",
               "type": "string"
            },
            "frame_rate": {
               "title": "Frame rate",
               "type": "number"
            },
            "frame_rate_unit": {
               "$ref": "#/$defs/FrequencyUnit",
               "default": "hertz",
               "title": "Frame rate unit"
            }
         },
         "required": [
            "frame_rate"
         ],
         "title": "SamplingStrategy",
         "type": "object"
      },
      "Scale": {
         "additionalProperties": false,
         "description": "Scale",
         "properties": {
            "object_type": {
               "const": "Scale",
               "default": "Scale",
               "title": "Object Type",
               "type": "string"
            },
            "scale": {
               "items": {
                  "type": "number"
               },
               "title": "Scale parameters",
               "type": "array"
            }
         },
         "required": [
            "scale"
         ],
         "title": "Scale",
         "type": "object"
      },
      "ScanType": {
         "description": "Type of scan",
         "enum": [
            "Set Up",
            "3D Scan"
         ],
         "title": "ScanType",
         "type": "string"
      },
      "SizeUnit": {
         "description": "Enumeration of Length Measurements",
         "enum": [
            "meter",
            "centimeter",
            "millimeter",
            "micrometer",
            "nanometer",
            "inch",
            "pixel"
         ],
         "title": "SizeUnit",
         "type": "string"
      },
      "SlapAcquisitionType": {
         "description": "Type of slap acquisition",
         "enum": [
            "Parent",
            "Branch"
         ],
         "title": "SlapAcquisitionType",
         "type": "string"
      },
      "SlapChannel": {
         "additionalProperties": false,
         "description": "Configuration of a channel for Slap",
         "properties": {
            "object_type": {
               "const": "Slap channel",
               "default": "Slap channel",
               "title": "Object Type",
               "type": "string"
            },
            "channel_name": {
               "title": "Channel",
               "type": "string"
            },
            "intended_measurement": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "What signal is this channel measuring",
               "title": "Intended measurement"
            },
            "detector": {
               "$ref": "#/$defs/DetectorConfig",
               "title": "Detector configuration"
            },
            "additional_device_names": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/DeviceConfig"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Mirrors, dichroics, etc",
               "title": "Additional device names"
            },
            "light_sources": {
               "default": [],
               "items": {
                  "discriminator": {
                     "mapping": {
                        "Laser config": "#/$defs/LaserConfig",
                        "Light emitting diode config": "#/$defs/LightEmittingDiodeConfig"
                     },
                     "propertyName": "object_type"
                  },
                  "oneOf": [
                     {
                        "$ref": "#/$defs/LaserConfig"
                     },
                     {
                        "$ref": "#/$defs/LightEmittingDiodeConfig"
                     }
                  ]
               },
               "title": "Light source configurations",
               "type": "array"
            },
            "variable_power": {
               "anyOf": [
                  {
                     "type": "boolean"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": false,
               "description": "Set to true when the power varies across Planes -- put the power in the Plane.power field",
               "title": "Variable power"
            },
            "excitation_filters": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/DeviceConfig"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Excitation filters"
            },
            "emission_filters": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/DeviceConfig"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Emission filters"
            },
            "emission_wavelength": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Emission wavelength"
            },
            "emission_wavelength_unit": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/SizeUnit"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Emission wavelength unit"
            },
            "dilation": {
               "title": "Dilation",
               "type": "integer"
            },
            "dilation_unit": {
               "$ref": "#/$defs/SizeUnit",
               "title": "Dilation unit"
            },
            "description": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Description"
            }
         },
         "required": [
            "channel_name",
            "detector",
            "dilation",
            "dilation_unit"
         ],
         "title": "SlapChannel",
         "type": "object"
      },
      "SlapPlane": {
         "additionalProperties": false,
         "description": "Configuration of an imagine plane on a Slap microscope",
         "properties": {
            "object_type": {
               "const": "Slap plane",
               "default": "Slap plane",
               "title": "Object Type",
               "type": "string"
            },
            "depth": {
               "title": "Depth",
               "type": "number"
            },
            "depth_unit": {
               "$ref": "#/$defs/SizeUnit",
               "title": "Depth unit"
            },
            "power": {
               "title": "Power",
               "type": "number"
            },
            "power_unit": {
               "$ref": "#/$defs/PowerUnit",
               "title": "Power unit"
            },
            "targeted_structure": {
               "$ref": "#/$defs/BrainStructureModel",
               "title": "Targeted structure"
            },
            "dmd_dilation_x": {
               "title": "DMD Dilation X (pixels)",
               "type": "integer"
            },
            "dmd_dilation_y": {
               "title": "DMD Dilation Y (pixels)",
               "type": "integer"
            },
            "dilation_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "pixel",
               "title": "Dilation unit"
            },
            "slap_acquisition_type": {
               "$ref": "#/$defs/SlapAcquisitionType",
               "title": "Slap experiment type"
            },
            "target_neuron": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Target neuron"
            },
            "target_branch": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Target branch"
            },
            "path_to_array_of_frame_rates": {
               "description": "Relative path from metadata json to file",
               "format": "uri-reference",
               "title": "Array of frame rates",
               "type": "string"
            }
         },
         "required": [
            "depth",
            "depth_unit",
            "power",
            "power_unit",
            "targeted_structure",
            "dmd_dilation_x",
            "dmd_dilation_y",
            "slap_acquisition_type",
            "path_to_array_of_frame_rates"
         ],
         "title": "SlapPlane",
         "type": "object"
      },
      "Software": {
         "additionalProperties": false,
         "description": "Software package identifier",
         "properties": {
            "object_type": {
               "const": "Software",
               "default": "Software",
               "title": "Object Type",
               "type": "string"
            },
            "name": {
               "description": "Name of the software package",
               "title": "Software name",
               "type": "string"
            },
            "version": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Version of the software package",
               "title": "Software version"
            }
         },
         "required": [
            "name"
         ],
         "title": "Software",
         "type": "object"
      },
      "SoundIntensityUnit": {
         "description": "Sound intensity units",
         "enum": [
            "decibels"
         ],
         "title": "SoundIntensityUnit",
         "type": "string"
      },
      "SpeakerConfig": {
         "additionalProperties": false,
         "description": "Configuration of auditory speaker configuration",
         "properties": {
            "object_type": {
               "const": "Speaker config",
               "default": "Speaker config",
               "title": "Object Type",
               "type": "string"
            },
            "device_name": {
               "description": "Must match a device defined in the instrument.json",
               "title": "Device name",
               "type": "string"
            },
            "volume": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Volume (dB)"
            },
            "volume_unit": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/SoundIntensityUnit"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Volume unit"
            }
         },
         "required": [
            "device_name"
         ],
         "title": "SpeakerConfig",
         "type": "object"
      },
      "SpeedUnit": {
         "description": "Enumeration of Speed Measurements",
         "enum": [
            "rotations per minute"
         ],
         "title": "SpeedUnit",
         "type": "string"
      },
      "StimulusEpoch": {
         "additionalProperties": false,
         "description": "All stimuli being presented to the subject. starting and stopping at approximately the\nsame time. Not all acquisitions have StimulusEpochs.",
         "properties": {
            "object_type": {
               "const": "Stimulus epoch",
               "default": "Stimulus epoch",
               "title": "Object Type",
               "type": "string"
            },
            "stimulus_start_time": {
               "description": "When a specific stimulus begins. This might be the same as the acquisition start time.",
               "format": "date-time",
               "title": "Stimulus start time",
               "type": "string"
            },
            "stimulus_end_time": {
               "description": "When a specific stimulus ends. This might be the same as the acquisition end time.",
               "format": "date-time",
               "title": "Stimulus end time",
               "type": "string"
            },
            "stimulus_name": {
               "title": "Stimulus name",
               "type": "string"
            },
            "code": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Code"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Custom code/script used to control the behavior/stimulus. Use the Code.parameters field to store stimulus properties",
               "title": "Code or script"
            },
            "stimulus_modalities": {
               "items": {
                  "$ref": "#/$defs/StimulusModality"
               },
               "title": "Stimulus modalities",
               "type": "array"
            },
            "performance_metrics": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/PerformanceMetrics"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Performance metrics"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            },
            "active_devices": {
               "default": [],
               "description": "Device names must match devices in the Instrument",
               "items": {
                  "type": "string"
               },
               "title": "Active devices",
               "type": "array"
            },
            "configurations": {
               "default": [],
               "items": {
                  "discriminator": {
                     "mapping": {
                        "Laser config": "#/$defs/LaserConfig",
                        "Light emitting diode config": "#/$defs/LightEmittingDiodeConfig",
                        "Mouse platform config": "#/$defs/MousePlatformConfig",
                        "Speaker config": "#/$defs/SpeakerConfig"
                     },
                     "propertyName": "object_type"
                  },
                  "oneOf": [
                     {
                        "$ref": "#/$defs/SpeakerConfig"
                     },
                     {
                        "$ref": "#/$defs/LightEmittingDiodeConfig"
                     },
                     {
                        "$ref": "#/$defs/LaserConfig"
                     },
                     {
                        "$ref": "#/$defs/MousePlatformConfig"
                     }
                  ]
               },
               "title": "Device configurations",
               "type": "array"
            },
            "training_protocol_name": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Name of the training protocol used during the acquisition, must match a protocol in the Procedures",
               "title": "Training protocol name"
            },
            "curriculum_status": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Status within the training protocol curriculum",
               "title": "Curriculum status"
            }
         },
         "required": [
            "stimulus_start_time",
            "stimulus_end_time",
            "stimulus_name",
            "stimulus_modalities"
         ],
         "title": "StimulusEpoch",
         "type": "object"
      },
      "StimulusModality": {
         "description": "Stimulus modalities",
         "enum": [
            "Auditory",
            "Free moving",
            "No stimulus",
            "Olfactory",
            "Optogenetics",
            "Virtual reality",
            "Visual",
            "Wheel friction"
         ],
         "title": "StimulusModality",
         "type": "string"
      },
      "SubjectPosition": {
         "description": "Subject position",
         "enum": [
            "Prone",
            "Supine"
         ],
         "title": "SubjectPosition",
         "type": "string"
      },
      "TemperatureUnit": {
         "description": "Temperature units",
         "enum": [
            "Celsius",
            "Kelvin"
         ],
         "title": "TemperatureUnit",
         "type": "string"
      },
      "TimeUnit": {
         "description": "Enumeration of Time Measurements",
         "enum": [
            "hour",
            "minute",
            "second",
            "millisecond",
            "microsecond",
            "nanosecond"
         ],
         "title": "TimeUnit",
         "type": "string"
      },
      "Translation": {
         "additionalProperties": false,
         "description": "Translation",
         "properties": {
            "object_type": {
               "const": "Translation",
               "default": "Translation",
               "title": "Object Type",
               "type": "string"
            },
            "translation": {
               "items": {
                  "type": "number"
               },
               "title": "Translation parameters",
               "type": "array"
            }
         },
         "required": [
            "translation"
         ],
         "title": "Translation",
         "type": "object"
      },
      "TriggerType": {
         "description": "Types of detector triggers",
         "enum": [
            "Internal",
            "External"
         ],
         "title": "TriggerType",
         "type": "string"
      },
      "UnitlessUnit": {
         "description": "Unitless options",
         "enum": [
            "percent",
            "fraction of cycle"
         ],
         "title": "UnitlessUnit",
         "type": "string"
      },
      "Valence": {
         "description": "Valence of a stimulus",
         "enum": [
            "Positive",
            "Negative",
            "Neutral",
            "Unknown"
         ],
         "title": "Valence",
         "type": "string"
      },
      "VoltageUnit": {
         "description": "Voltage units",
         "enum": [
            "Volts"
         ],
         "title": "VoltageUnit",
         "type": "string"
      },
      "VolumeCalibration": {
         "additionalProperties": false,
         "description": "Calibration of a liquid delivery device based on solenoid/valve opening times",
         "properties": {
            "object_type": {
               "const": "Volume calibration",
               "default": "Volume calibration",
               "title": "Object Type",
               "type": "string"
            },
            "device_name": {
               "description": "Must match a device defined in the instrument.json",
               "title": "Device name",
               "type": "string"
            },
            "calibration_date": {
               "format": "date-time",
               "title": "Date and time of calibration",
               "type": "string"
            },
            "description": {
               "const": "Volume measured for various solenoid opening times",
               "default": "Volume measured for various solenoid opening times",
               "title": "Description",
               "type": "string"
            },
            "input": {
               "description": "Length of time solenoid/valve is open",
               "items": {
                  "type": "number"
               },
               "title": "Input times",
               "type": "array"
            },
            "input_unit": {
               "$ref": "#/$defs/TimeUnit",
               "title": "Input unit"
            },
            "repeats": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "If each input was repeated multiple times, provide the number of repeats",
               "title": "Number of repeats"
            },
            "output": {
               "description": "Volume output (provide the average if repeated)",
               "items": {
                  "type": "number"
               },
               "title": "Output",
               "type": "array"
            },
            "output_unit": {
               "$ref": "#/$defs/VolumeUnit",
               "title": "Output unit"
            },
            "fit": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/CalibrationFit"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Fit equation for the calibration data used during data acquisition",
               "title": "Fit"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "device_name",
            "calibration_date",
            "input",
            "input_unit",
            "output",
            "output_unit"
         ],
         "title": "VolumeCalibration",
         "type": "object"
      },
      "VolumeUnit": {
         "description": "Enumeration of Volume Measurements",
         "enum": [
            "liter",
            "milliliter",
            "microliter",
            "nanoliter"
         ],
         "title": "VolumeUnit",
         "type": "string"
      },
      "_Aa_Opto_Electronic": {
         "description": "Model AA Opto Electronic",
         "properties": {
            "name": {
               "const": "AA Opto Electronic",
               "default": "AA Opto Electronic",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Aa_Opto_Electronic",
         "type": "object"
      },
      "_Abcam": {
         "description": "Model Abcam",
         "properties": {
            "name": {
               "const": "Abcam",
               "default": "Abcam",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "02e1wjw63",
               "title": "Registry Identifier"
            }
         },
         "title": "_Abcam",
         "type": "object"
      },
      "_Addgene": {
         "description": "Model Addgene",
         "properties": {
            "name": {
               "const": "Addgene",
               "default": "Addgene",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "01nn1pw54",
               "title": "Registry Identifier"
            }
         },
         "title": "_Addgene",
         "type": "object"
      },
      "_Ailipu_Technology_Co": {
         "description": "Model Ailipu Technology Co",
         "properties": {
            "name": {
               "const": "Ailipu Technology Co",
               "default": "Ailipu Technology Co",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "Ailipu",
               "default": "Ailipu",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Ailipu_Technology_Co",
         "type": "object"
      },
      "_Allen_Institute": {
         "description": "Model Allen Institute",
         "properties": {
            "name": {
               "const": "Allen Institute",
               "default": "Allen Institute",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "AI",
               "default": "AI",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "03cpe7c52",
               "title": "Registry Identifier"
            }
         },
         "title": "_Allen_Institute",
         "type": "object"
      },
      "_Allen_Institute_For_Brain_Science": {
         "description": "Model Allen Institute for Brain Science",
         "properties": {
            "name": {
               "const": "Allen Institute for Brain Science",
               "default": "Allen Institute for Brain Science",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "AIBS",
               "default": "AIBS",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "00dcv1019",
               "title": "Registry Identifier"
            }
         },
         "title": "_Allen_Institute_For_Brain_Science",
         "type": "object"
      },
      "_Allen_Institute_For_Neural_Dynamics": {
         "description": "Model Allen Institute for Neural Dynamics",
         "properties": {
            "name": {
               "const": "Allen Institute for Neural Dynamics",
               "default": "Allen Institute for Neural Dynamics",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "AIND",
               "default": "AIND",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "04szwah67",
               "title": "Registry Identifier"
            }
         },
         "title": "_Allen_Institute_For_Neural_Dynamics",
         "type": "object"
      },
      "_Allied": {
         "description": "Model Allied",
         "properties": {
            "name": {
               "const": "Allied",
               "default": "Allied",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Allied",
         "type": "object"
      },
      "_Ams_Osram": {
         "description": "Model ams OSRAM",
         "properties": {
            "name": {
               "const": "ams OSRAM",
               "default": "ams OSRAM",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "045d0h266",
               "title": "Registry Identifier"
            }
         },
         "title": "_Ams_Osram",
         "type": "object"
      },
      "_Applied_Scientific_Instrumentation": {
         "description": "Model Applied Scientific Instrumentation",
         "properties": {
            "name": {
               "const": "Applied Scientific Instrumentation",
               "default": "Applied Scientific Instrumentation",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "ASI",
               "default": "ASI",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Applied_Scientific_Instrumentation",
         "type": "object"
      },
      "_Arduino": {
         "description": "Model Arduino",
         "properties": {
            "name": {
               "const": "Arduino",
               "default": "Arduino",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Arduino",
         "type": "object"
      },
      "_Arecont_Vision_Costar": {
         "description": "Model Arecont Vision Costar",
         "properties": {
            "name": {
               "const": "Arecont Vision Costar",
               "default": "Arecont Vision Costar",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Arecont_Vision_Costar",
         "type": "object"
      },
      "_Asus": {
         "description": "Model ASUS",
         "properties": {
            "name": {
               "const": "ASUS",
               "default": "ASUS",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "00bxkz165",
               "title": "Registry Identifier"
            }
         },
         "title": "_Asus",
         "type": "object"
      },
      "_Basler": {
         "description": "Model Basler",
         "properties": {
            "name": {
               "const": "Basler",
               "default": "Basler",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Basler",
         "type": "object"
      },
      "_Baylor_College_Of_Medicine": {
         "description": "Model Baylor College of Medicine",
         "properties": {
            "name": {
               "const": "Baylor College of Medicine",
               "default": "Baylor College of Medicine",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "BCM",
               "default": "BCM",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "02pttbw34",
               "title": "Registry Identifier"
            }
         },
         "title": "_Baylor_College_Of_Medicine",
         "type": "object"
      },
      "_Behavior": {
         "additionalProperties": false,
         "description": "Model behavior",
         "properties": {
            "name": {
               "const": "Behavior",
               "default": "Behavior",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "behavior",
               "default": "behavior",
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Behavior",
         "type": "object"
      },
      "_Behavior_Videos": {
         "additionalProperties": false,
         "description": "Model behavior-videos",
         "properties": {
            "name": {
               "const": "Behavior videos",
               "default": "Behavior videos",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "behavior-videos",
               "default": "behavior-videos",
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Behavior_Videos",
         "type": "object"
      },
      "_Boston_University": {
         "description": "Model Boston University",
         "properties": {
            "name": {
               "const": "Boston University",
               "default": "Boston University",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "BU",
               "default": "BU",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "05qwgg493",
               "title": "Registry Identifier"
            }
         },
         "title": "_Boston_University",
         "type": "object"
      },
      "_Brightfield": {
         "additionalProperties": false,
         "description": "Model brightfield",
         "properties": {
            "name": {
               "const": "Brightfield microscopy",
               "default": "Brightfield microscopy",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "brightfield",
               "default": "brightfield",
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Brightfield",
         "type": "object"
      },
      "_Cajal_Neuroscience": {
         "description": "Model Cajal Neuroscience",
         "properties": {
            "name": {
               "const": "Cajal Neuroscience",
               "default": "Cajal Neuroscience",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "Cajal",
               "default": "Cajal",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "05pdc0q70",
               "title": "Registry Identifier"
            }
         },
         "title": "_Cajal_Neuroscience",
         "type": "object"
      },
      "_Cambridge_Technology": {
         "description": "Model Cambridge Technology",
         "properties": {
            "name": {
               "const": "Cambridge Technology",
               "default": "Cambridge Technology",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Cambridge_Technology",
         "type": "object"
      },
      "_Carl_Zeiss": {
         "description": "Model Carl Zeiss",
         "properties": {
            "name": {
               "const": "Carl Zeiss",
               "default": "Carl Zeiss",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "01xk5xs43",
               "title": "Registry Identifier"
            }
         },
         "title": "_Carl_Zeiss",
         "type": "object"
      },
      "_Champalimaud_Foundation": {
         "description": "Model Champalimaud Foundation",
         "properties": {
            "name": {
               "const": "Champalimaud Foundation",
               "default": "Champalimaud Foundation",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "Champalimaud",
               "default": "Champalimaud",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "03g001n57",
               "title": "Registry Identifier"
            }
         },
         "title": "_Champalimaud_Foundation",
         "type": "object"
      },
      "_Chan_Zuckerberg_Initiative": {
         "description": "Model Chan Zuckerberg Initiative",
         "properties": {
            "name": {
               "const": "Chan Zuckerberg Initiative",
               "default": "Chan Zuckerberg Initiative",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "CZI",
               "default": "CZI",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "02qenvm24",
               "title": "Registry Identifier"
            }
         },
         "title": "_Chan_Zuckerberg_Initiative",
         "type": "object"
      },
      "_Charles_River_Laboratories": {
         "description": "Model Charles River Laboratories",
         "properties": {
            "name": {
               "const": "Charles River Laboratories",
               "default": "Charles River Laboratories",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "CRL",
               "default": "CRL",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "03ndmsg87",
               "title": "Registry Identifier"
            }
         },
         "title": "_Charles_River_Laboratories",
         "type": "object"
      },
      "_Chroma": {
         "description": "Model Chroma",
         "properties": {
            "name": {
               "const": "Chroma",
               "default": "Chroma",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Chroma",
         "type": "object"
      },
      "_Coherent_Scientific": {
         "description": "Model Coherent Scientific",
         "properties": {
            "name": {
               "const": "Coherent Scientific",
               "default": "Coherent Scientific",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "031tysd23",
               "title": "Registry Identifier"
            }
         },
         "title": "_Coherent_Scientific",
         "type": "object"
      },
      "_Columbia_University": {
         "description": "Model Columbia University",
         "properties": {
            "name": {
               "const": "Columbia University",
               "default": "Columbia University",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "Columbia",
               "default": "Columbia",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "00hj8s172",
               "title": "Registry Identifier"
            }
         },
         "title": "_Columbia_University",
         "type": "object"
      },
      "_Computar": {
         "description": "Model Computar",
         "properties": {
            "name": {
               "const": "Computar",
               "default": "Computar",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Computar",
         "type": "object"
      },
      "_Confocal": {
         "additionalProperties": false,
         "description": "Model confocal",
         "properties": {
            "name": {
               "const": "Confocal microscopy",
               "default": "Confocal microscopy",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "confocal",
               "default": "confocal",
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Confocal",
         "type": "object"
      },
      "_Conoptics": {
         "description": "Model Conoptics",
         "properties": {
            "name": {
               "const": "Conoptics",
               "default": "Conoptics",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Conoptics",
         "type": "object"
      },
      "_Custom": {
         "description": "Model Custom",
         "properties": {
            "name": {
               "const": "Custom",
               "default": "Custom",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Custom",
         "type": "object"
      },
      "_Digikey": {
         "description": "Model DigiKey",
         "properties": {
            "name": {
               "const": "DigiKey",
               "default": "DigiKey",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Digikey",
         "type": "object"
      },
      "_Dodotronic": {
         "description": "Model Dodotronic",
         "properties": {
            "name": {
               "const": "Dodotronic",
               "default": "Dodotronic",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Dodotronic",
         "type": "object"
      },
      "_Doric": {
         "description": "Model Doric",
         "properties": {
            "name": {
               "const": "Doric",
               "default": "Doric",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "059n53q30",
               "title": "Registry Identifier"
            }
         },
         "title": "_Doric",
         "type": "object"
      },
      "_Ealing": {
         "description": "Model Ealing",
         "properties": {
            "name": {
               "const": "Ealing",
               "default": "Ealing",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Ealing",
         "type": "object"
      },
      "_Ecephys": {
         "additionalProperties": false,
         "description": "Model ecephys",
         "properties": {
            "name": {
               "const": "Extracellular electrophysiology",
               "default": "Extracellular electrophysiology",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "ecephys",
               "default": "ecephys",
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Ecephys",
         "type": "object"
      },
      "_Edmund_Optics": {
         "description": "Model Edmund Optics",
         "properties": {
            "name": {
               "const": "Edmund Optics",
               "default": "Edmund Optics",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "01j1gwp17",
               "title": "Registry Identifier"
            }
         },
         "title": "_Edmund_Optics",
         "type": "object"
      },
      "_Em": {
         "additionalProperties": false,
         "description": "Model EM",
         "properties": {
            "name": {
               "const": "Electron microscopy",
               "default": "Electron microscopy",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "EM",
               "default": "EM",
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Em",
         "type": "object"
      },
      "_Emg": {
         "additionalProperties": false,
         "description": "Model EMG",
         "properties": {
            "name": {
               "const": "Electromyography",
               "default": "Electromyography",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "EMG",
               "default": "EMG",
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Emg",
         "type": "object"
      },
      "_Emory_University": {
         "description": "Model Emory University",
         "properties": {
            "name": {
               "const": "Emory University",
               "default": "Emory University",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "Emory",
               "default": "Emory",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "03czfpz43",
               "title": "Registry Identifier"
            }
         },
         "title": "_Emory_University",
         "type": "object"
      },
      "_Euresys": {
         "description": "Model Euresys",
         "properties": {
            "name": {
               "const": "Euresys",
               "default": "Euresys",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Euresys",
         "type": "object"
      },
      "_Fib": {
         "additionalProperties": false,
         "description": "Model fib",
         "properties": {
            "name": {
               "const": "Fiber photometry",
               "default": "Fiber photometry",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "fib",
               "default": "fib",
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Fib",
         "type": "object"
      },
      "_Fmost": {
         "additionalProperties": false,
         "description": "Model fMOST",
         "properties": {
            "name": {
               "const": "Fluorescence micro-optical sectioning tomography",
               "default": "Fluorescence micro-optical sectioning tomography",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "fMOST",
               "default": "fMOST",
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Fmost",
         "type": "object"
      },
      "_Fujinon": {
         "description": "Model Fujinon",
         "properties": {
            "name": {
               "const": "Fujinon",
               "default": "Fujinon",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Fujinon",
         "type": "object"
      },
      "_Hamamatsu": {
         "description": "Model Hamamatsu",
         "properties": {
            "name": {
               "const": "Hamamatsu",
               "default": "Hamamatsu",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "03natb733",
               "title": "Registry Identifier"
            }
         },
         "title": "_Hamamatsu",
         "type": "object"
      },
      "_Hamilton": {
         "description": "Model Hamilton",
         "properties": {
            "name": {
               "const": "Hamilton",
               "default": "Hamilton",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Hamilton",
         "type": "object"
      },
      "_Huazhong_University_Of_Science_And_Technology": {
         "description": "Model Huazhong University of Science and Technology",
         "properties": {
            "name": {
               "const": "Huazhong University of Science and Technology",
               "default": "Huazhong University of Science and Technology",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "HUST",
               "default": "HUST",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "00p991c53",
               "title": "Registry Identifier"
            }
         },
         "title": "_Huazhong_University_Of_Science_And_Technology",
         "type": "object"
      },
      "_Icephys": {
         "additionalProperties": false,
         "description": "Model icephys",
         "properties": {
            "name": {
               "const": "Intracellular electrophysiology",
               "default": "Intracellular electrophysiology",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "icephys",
               "default": "icephys",
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Icephys",
         "type": "object"
      },
      "_Infinity_Photo_Optical": {
         "description": "Model Infinity Photo-Optical",
         "properties": {
            "name": {
               "const": "Infinity Photo-Optical",
               "default": "Infinity Photo-Optical",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Infinity_Photo_Optical",
         "type": "object"
      },
      "_Integrated_Dna_Technologies": {
         "description": "Model Integrated DNA Technologies",
         "properties": {
            "name": {
               "const": "Integrated DNA Technologies",
               "default": "Integrated DNA Technologies",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "IDT",
               "default": "IDT",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "009jvpf03",
               "title": "Registry Identifier"
            }
         },
         "title": "_Integrated_Dna_Technologies",
         "type": "object"
      },
      "_Interuniversity_Microelectronics_Center": {
         "description": "Model Interuniversity Microelectronics Center",
         "properties": {
            "name": {
               "const": "Interuniversity Microelectronics Center",
               "default": "Interuniversity Microelectronics Center",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "IMEC",
               "default": "IMEC",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "02kcbn207",
               "title": "Registry Identifier"
            }
         },
         "title": "_Interuniversity_Microelectronics_Center",
         "type": "object"
      },
      "_Invitrogen": {
         "description": "Model Invitrogen",
         "properties": {
            "name": {
               "const": "Invitrogen",
               "default": "Invitrogen",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "03x1ewr52",
               "title": "Registry Identifier"
            }
         },
         "title": "_Invitrogen",
         "type": "object"
      },
      "_Ir_Robot_Co": {
         "description": "Model IR Robot Co",
         "properties": {
            "name": {
               "const": "IR Robot Co",
               "default": "IR Robot Co",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Ir_Robot_Co",
         "type": "object"
      },
      "_Isi": {
         "additionalProperties": false,
         "description": "Model ISI",
         "properties": {
            "name": {
               "const": "Intrinsic signal imaging",
               "default": "Intrinsic signal imaging",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "ISI",
               "default": "ISI",
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Isi",
         "type": "object"
      },
      "_Isl_Products_International": {
         "description": "Model ISL Products International",
         "properties": {
            "name": {
               "const": "ISL Products International",
               "default": "ISL Products International",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "ISL",
               "default": "ISL",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Isl_Products_International",
         "type": "object"
      },
      "_Item": {
         "description": "Model Item",
         "properties": {
            "name": {
               "const": "Item",
               "default": "Item",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Item",
         "type": "object"
      },
      "_Jackson_Laboratory": {
         "description": "Model Jackson Laboratory",
         "properties": {
            "name": {
               "const": "Jackson Laboratory",
               "default": "Jackson Laboratory",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "JAX",
               "default": "JAX",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "021sy4w91",
               "title": "Registry Identifier"
            }
         },
         "title": "_Jackson_Laboratory",
         "type": "object"
      },
      "_Janelia_Research_Campus": {
         "description": "Model Janelia Research Campus",
         "properties": {
            "name": {
               "const": "Janelia Research Campus",
               "default": "Janelia Research Campus",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "Janelia",
               "default": "Janelia",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "013sk6x84",
               "title": "Registry Identifier"
            }
         },
         "title": "_Janelia_Research_Campus",
         "type": "object"
      },
      "_Jenoptik": {
         "description": "Model Jenoptik",
         "properties": {
            "name": {
               "const": "Jenoptik",
               "default": "Jenoptik",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "05g7t5c49",
               "title": "Registry Identifier"
            }
         },
         "title": "_Jenoptik",
         "type": "object"
      },
      "_Johns_Hopkins_University": {
         "description": "Model Johns Hopkins University",
         "properties": {
            "name": {
               "const": "Johns Hopkins University",
               "default": "Johns Hopkins University",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "JHU",
               "default": "JHU",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "00za53h95",
               "title": "Registry Identifier"
            }
         },
         "title": "_Johns_Hopkins_University",
         "type": "object"
      },
      "_Julabo": {
         "description": "Model Julabo",
         "properties": {
            "name": {
               "const": "Julabo",
               "default": "Julabo",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Julabo",
         "type": "object"
      },
      "_Kowa": {
         "description": "Model Kowa",
         "properties": {
            "name": {
               "const": "Kowa",
               "default": "Kowa",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "03zbwg482",
               "title": "Registry Identifier"
            }
         },
         "title": "_Kowa",
         "type": "object"
      },
      "_Lasos_Lasertechnik": {
         "description": "Model LASOS Lasertechnik",
         "properties": {
            "name": {
               "const": "LASOS Lasertechnik",
               "default": "LASOS Lasertechnik",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "LASOS",
               "default": "LASOS",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Lasos_Lasertechnik",
         "type": "object"
      },
      "_Leica": {
         "description": "Model Leica",
         "properties": {
            "name": {
               "const": "Leica",
               "default": "Leica",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Leica",
         "type": "object"
      },
      "_Lg": {
         "description": "Model LG",
         "properties": {
            "name": {
               "const": "LG",
               "default": "LG",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "02b948n83",
               "title": "Registry Identifier"
            }
         },
         "title": "_Lg",
         "type": "object"
      },
      "_Lifecanvas": {
         "description": "Model LifeCanvas",
         "properties": {
            "name": {
               "const": "LifeCanvas",
               "default": "LifeCanvas",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Lifecanvas",
         "type": "object"
      },
      "_Lumen_Dynamics": {
         "description": "Model Lumen Dynamics",
         "properties": {
            "name": {
               "const": "Lumen Dynamics",
               "default": "Lumen Dynamics",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Lumen_Dynamics",
         "type": "object"
      },
      "_Massachusetts_Institute_Of_Technology": {
         "description": "Model Massachusetts Institute of Technology",
         "properties": {
            "name": {
               "const": "Massachusetts Institute of Technology",
               "default": "Massachusetts Institute of Technology",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "MIT",
               "default": "MIT",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "042nb2s44",
               "title": "Registry Identifier"
            }
         },
         "title": "_Massachusetts_Institute_Of_Technology",
         "type": "object"
      },
      "_Mbf_Bioscience": {
         "description": "Model MBF Bioscience",
         "properties": {
            "name": {
               "const": "MBF Bioscience",
               "default": "MBF Bioscience",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "MBF",
               "default": "MBF",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "02zynam48",
               "title": "Registry Identifier"
            }
         },
         "title": "_Mbf_Bioscience",
         "type": "object"
      },
      "_Mcgovern_Institute_For_Brain_Research": {
         "description": "Model McGovern Institute for Brain Research",
         "properties": {
            "name": {
               "const": "McGovern Institute for Brain Research",
               "default": "McGovern Institute for Brain Research",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "MIBR",
               "default": "MIBR",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "05ymca674",
               "title": "Registry Identifier"
            }
         },
         "title": "_Mcgovern_Institute_For_Brain_Research",
         "type": "object"
      },
      "_Meadowlark_Optics": {
         "description": "Model Meadowlark Optics",
         "properties": {
            "name": {
               "const": "Meadowlark Optics",
               "default": "Meadowlark Optics",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "00n8qbq54",
               "title": "Registry Identifier"
            }
         },
         "title": "_Meadowlark_Optics",
         "type": "object"
      },
      "_Merfish": {
         "additionalProperties": false,
         "description": "Model merfish",
         "properties": {
            "name": {
               "const": "Multiplexed error-robust fluorescence in situ hybridization",
               "default": "Multiplexed error-robust fluorescence in situ hybridization",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "merfish",
               "default": "merfish",
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Merfish",
         "type": "object"
      },
      "_Michael_J_Fox_Foundation_For_Parkinson_S_Research": {
         "description": "Model Michael J. Fox Foundation for Parkinson's Research",
         "properties": {
            "name": {
               "const": "Michael J. Fox Foundation for Parkinson's Research",
               "default": "Michael J. Fox Foundation for Parkinson's Research",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "MJFF",
               "default": "MJFF",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "03arq3225",
               "title": "Registry Identifier"
            }
         },
         "title": "_Michael_J_Fox_Foundation_For_Parkinson_S_Research",
         "type": "object"
      },
      "_Midwest_Optical_Systems_Inc_": {
         "description": "Model Midwest Optical Systems, Inc.",
         "properties": {
            "name": {
               "const": "Midwest Optical Systems, Inc.",
               "default": "Midwest Optical Systems, Inc.",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "MidOpt",
               "default": "MidOpt",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Midwest_Optical_Systems_Inc_",
         "type": "object"
      },
      "_Mit_Department_Of_Brain_And_Cognitive_Sciences": {
         "description": "Model MIT Department of Brain and Cognitive Sciences",
         "properties": {
            "name": {
               "const": "MIT Department of Brain and Cognitive Sciences",
               "default": "MIT Department of Brain and Cognitive Sciences",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "MIT-BCS",
               "default": "MIT-BCS",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Mit_Department_Of_Brain_And_Cognitive_Sciences",
         "type": "object"
      },
      "_Mitutuyo": {
         "description": "Model Mitutuyo",
         "properties": {
            "name": {
               "const": "Mitutuyo",
               "default": "Mitutuyo",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Mitutuyo",
         "type": "object"
      },
      "_Mks_Newport": {
         "description": "Model MKS Newport",
         "properties": {
            "name": {
               "const": "MKS Newport",
               "default": "MKS Newport",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "00k17f049",
               "title": "Registry Identifier"
            }
         },
         "title": "_Mks_Newport",
         "type": "object"
      },
      "_Mpi": {
         "description": "Model MPI",
         "properties": {
            "name": {
               "const": "MPI",
               "default": "MPI",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "MPI",
               "default": "MPI",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Mpi",
         "type": "object"
      },
      "_Mri": {
         "additionalProperties": false,
         "description": "Model MRI",
         "properties": {
            "name": {
               "const": "Magnetic resonance imaging",
               "default": "Magnetic resonance imaging",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "MRI",
               "default": "MRI",
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Mri",
         "type": "object"
      },
      "_National_Center_For_Complementary_And_Integrative_Health": {
         "description": "Model National Center for Complementary and Integrative Health",
         "properties": {
            "name": {
               "const": "National Center for Complementary and Integrative Health",
               "default": "National Center for Complementary and Integrative Health",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "NCCIH",
               "default": "NCCIH",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "00190t495",
               "title": "Registry Identifier"
            }
         },
         "title": "_National_Center_For_Complementary_And_Integrative_Health",
         "type": "object"
      },
      "_National_Institute_Of_Mental_Health": {
         "description": "Model National Institute of Mental Health",
         "properties": {
            "name": {
               "const": "National Institute of Mental Health",
               "default": "National Institute of Mental Health",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "NIMH",
               "default": "NIMH",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "04xeg9z08",
               "title": "Registry Identifier"
            }
         },
         "title": "_National_Institute_Of_Mental_Health",
         "type": "object"
      },
      "_National_Institute_Of_Neurological_Disorders_And_Stroke": {
         "description": "Model National Institute of Neurological Disorders and Stroke",
         "properties": {
            "name": {
               "const": "National Institute of Neurological Disorders and Stroke",
               "default": "National Institute of Neurological Disorders and Stroke",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "NINDS",
               "default": "NINDS",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "01s5ya894",
               "title": "Registry Identifier"
            }
         },
         "title": "_National_Institute_Of_Neurological_Disorders_And_Stroke",
         "type": "object"
      },
      "_National_Instruments": {
         "description": "Model National Instruments",
         "properties": {
            "name": {
               "const": "National Instruments",
               "default": "National Instruments",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "026exqw73",
               "title": "Registry Identifier"
            }
         },
         "title": "_National_Instruments",
         "type": "object"
      },
      "_Navitar": {
         "description": "Model Navitar",
         "properties": {
            "name": {
               "const": "Navitar",
               "default": "Navitar",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Navitar",
         "type": "object"
      },
      "_Neuralynx": {
         "description": "Model NeuraLynx",
         "properties": {
            "name": {
               "const": "NeuraLynx",
               "default": "NeuraLynx",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Neuralynx",
         "type": "object"
      },
      "_Neurophotometrics": {
         "description": "Model Neurophotometrics",
         "properties": {
            "name": {
               "const": "Neurophotometrics",
               "default": "Neurophotometrics",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Neurophotometrics",
         "type": "object"
      },
      "_New_Scale_Technologies": {
         "description": "Model New Scale Technologies",
         "properties": {
            "name": {
               "const": "New Scale Technologies",
               "default": "New Scale Technologies",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_New_Scale_Technologies",
         "type": "object"
      },
      "_New_York_University": {
         "description": "Model New York University",
         "properties": {
            "name": {
               "const": "New York University",
               "default": "New York University",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "NYU",
               "default": "NYU",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "0190ak572",
               "title": "Registry Identifier"
            }
         },
         "title": "_New_York_University",
         "type": "object"
      },
      "_Nikon": {
         "description": "Model Nikon",
         "properties": {
            "name": {
               "const": "Nikon",
               "default": "Nikon",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "0280y9h11",
               "title": "Registry Identifier"
            }
         },
         "title": "_Nikon",
         "type": "object"
      },
      "_Nresearch_Inc": {
         "description": "Model NResearch Inc",
         "properties": {
            "name": {
               "const": "NResearch Inc",
               "default": "NResearch Inc",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Nresearch_Inc",
         "type": "object"
      },
      "_Olympus": {
         "description": "Model Olympus",
         "properties": {
            "name": {
               "const": "Olympus",
               "default": "Olympus",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "02vcdte90",
               "title": "Registry Identifier"
            }
         },
         "title": "_Olympus",
         "type": "object"
      },
      "_Open_Ephys_Production_Site": {
         "description": "Model Open Ephys Production Site",
         "properties": {
            "name": {
               "const": "Open Ephys Production Site",
               "default": "Open Ephys Production Site",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "OEPS",
               "default": "OEPS",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "007rkz355",
               "title": "Registry Identifier"
            }
         },
         "title": "_Open_Ephys_Production_Site",
         "type": "object"
      },
      "_Optotune": {
         "description": "Model Optotune",
         "properties": {
            "name": {
               "const": "Optotune",
               "default": "Optotune",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Optotune",
         "type": "object"
      },
      "_Other": {
         "description": "Model Other",
         "properties": {
            "name": {
               "const": "Other",
               "default": "Other",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Other",
         "type": "object"
      },
      "_Oxxius": {
         "description": "Model Oxxius",
         "properties": {
            "name": {
               "const": "Oxxius",
               "default": "Oxxius",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Oxxius",
         "type": "object"
      },
      "_Placid_Industries": {
         "description": "Model Placid Industries",
         "properties": {
            "name": {
               "const": "Placid Industries",
               "default": "Placid Industries",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Placid_Industries",
         "type": "object"
      },
      "_Pophys": {
         "additionalProperties": false,
         "description": "Model pophys",
         "properties": {
            "name": {
               "const": "Planar optical physiology",
               "default": "Planar optical physiology",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "pophys",
               "default": "pophys",
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Pophys",
         "type": "object"
      },
      "_Prizmatix": {
         "description": "Model Prizmatix",
         "properties": {
            "name": {
               "const": "Prizmatix",
               "default": "Prizmatix",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Prizmatix",
         "type": "object"
      },
      "_Quantifi": {
         "description": "Model Quantifi",
         "properties": {
            "name": {
               "const": "Quantifi",
               "default": "Quantifi",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Quantifi",
         "type": "object"
      },
      "_Raspberry_Pi": {
         "description": "Model Raspberry Pi",
         "properties": {
            "name": {
               "const": "Raspberry Pi",
               "default": "Raspberry Pi",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Raspberry_Pi",
         "type": "object"
      },
      "_Same_Sky": {
         "description": "Model Same Sky",
         "properties": {
            "name": {
               "const": "Same Sky",
               "default": "Same Sky",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Same_Sky",
         "type": "object"
      },
      "_Schneider_Kreuznach": {
         "description": "Model Schneider-Kreuznach",
         "properties": {
            "name": {
               "const": "Schneider-Kreuznach",
               "default": "Schneider-Kreuznach",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Schneider_Kreuznach",
         "type": "object"
      },
      "_Second_Order_Effects": {
         "description": "Model Second Order Effects",
         "properties": {
            "name": {
               "const": "Second Order Effects",
               "default": "Second Order Effects",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Second_Order_Effects",
         "type": "object"
      },
      "_Semrock": {
         "description": "Model Semrock",
         "properties": {
            "name": {
               "const": "Semrock",
               "default": "Semrock",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Semrock",
         "type": "object"
      },
      "_Sicgen": {
         "description": "Model SICGEN",
         "properties": {
            "name": {
               "const": "SICGEN",
               "default": "SICGEN",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Sicgen",
         "type": "object"
      },
      "_Sigma_Aldrich": {
         "description": "Model Sigma-Aldrich",
         "properties": {
            "name": {
               "const": "Sigma-Aldrich",
               "default": "Sigma-Aldrich",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Sigma_Aldrich",
         "type": "object"
      },
      "_Simons_Foundation": {
         "description": "Model Simons Foundation",
         "properties": {
            "name": {
               "const": "Simons Foundation",
               "default": "Simons Foundation",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "01cmst727",
               "title": "Registry Identifier"
            }
         },
         "title": "_Simons_Foundation",
         "type": "object"
      },
      "_Slap": {
         "additionalProperties": false,
         "description": "Model slap",
         "properties": {
            "name": {
               "const": "Scanned line projection imaging",
               "default": "Scanned line projection imaging",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "slap",
               "default": "slap",
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Slap",
         "type": "object"
      },
      "_Spectra_Physics": {
         "description": "Model Spectra-Physics",
         "properties": {
            "name": {
               "const": "Spectra-Physics",
               "default": "Spectra-Physics",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "02ad9kp97",
               "title": "Registry Identifier"
            }
         },
         "title": "_Spectra_Physics",
         "type": "object"
      },
      "_Spim": {
         "additionalProperties": false,
         "description": "Model SPIM",
         "properties": {
            "name": {
               "const": "Selective plane illumination microscopy",
               "default": "Selective plane illumination microscopy",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "SPIM",
               "default": "SPIM",
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Spim",
         "type": "object"
      },
      "_Spinnaker": {
         "description": "Model Spinnaker",
         "properties": {
            "name": {
               "const": "Spinnaker",
               "default": "Spinnaker",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Spinnaker",
         "type": "object"
      },
      "_Stpt": {
         "additionalProperties": false,
         "description": "Model STPT",
         "properties": {
            "name": {
               "const": "Serial two-photon tomogrophy",
               "default": "Serial two-photon tomogrophy",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "STPT",
               "default": "STPT",
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Stpt",
         "type": "object"
      },
      "_Tamron": {
         "description": "Model Tamron",
         "properties": {
            "name": {
               "const": "Tamron",
               "default": "Tamron",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Tamron",
         "type": "object"
      },
      "_Technical_Manufacturing_Corporation": {
         "description": "Model Technical Manufacturing Corporation",
         "properties": {
            "name": {
               "const": "Technical Manufacturing Corporation",
               "default": "Technical Manufacturing Corporation",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "TMC",
               "default": "TMC",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Technical_Manufacturing_Corporation",
         "type": "object"
      },
      "_Teledyne_Flir": {
         "description": "Model Teledyne FLIR",
         "properties": {
            "name": {
               "const": "Teledyne FLIR",
               "default": "Teledyne FLIR",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "FLIR",
               "default": "FLIR",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "01j1gwp17",
               "title": "Registry Identifier"
            }
         },
         "title": "_Teledyne_Flir",
         "type": "object"
      },
      "_Templeton_World_Charity_Foundation": {
         "description": "Model Templeton World Charity Foundation",
         "properties": {
            "name": {
               "const": "Templeton World Charity Foundation",
               "default": "Templeton World Charity Foundation",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "TWCF",
               "default": "TWCF",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "00x0z1472",
               "title": "Registry Identifier"
            }
         },
         "title": "_Templeton_World_Charity_Foundation",
         "type": "object"
      },
      "_The_Imaging_Source": {
         "description": "Model The Imaging Source",
         "properties": {
            "name": {
               "const": "The Imaging Source",
               "default": "The Imaging Source",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_The_Imaging_Source",
         "type": "object"
      },
      "_The_Lee_Company": {
         "description": "Model The Lee Company",
         "properties": {
            "name": {
               "const": "The Lee Company",
               "default": "The Lee Company",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_The_Lee_Company",
         "type": "object"
      },
      "_Thermo_Fisher_Scientific": {
         "description": "Model Thermo Fisher Scientific",
         "properties": {
            "name": {
               "const": "Thermo Fisher Scientific",
               "default": "Thermo Fisher Scientific",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "03x1ewr52",
               "title": "Registry Identifier"
            }
         },
         "title": "_Thermo_Fisher_Scientific",
         "type": "object"
      },
      "_Thorlabs": {
         "description": "Model Thorlabs",
         "properties": {
            "name": {
               "const": "Thorlabs",
               "default": "Thorlabs",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "04gsnvb07",
               "title": "Registry Identifier"
            }
         },
         "title": "_Thorlabs",
         "type": "object"
      },
      "_Transducer_Techniques": {
         "description": "Model Transducer Techniques",
         "properties": {
            "name": {
               "const": "Transducer Techniques",
               "default": "Transducer Techniques",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Transducer_Techniques",
         "type": "object"
      },
      "_Tymphany": {
         "description": "Model Tymphany",
         "properties": {
            "name": {
               "const": "Tymphany",
               "default": "Tymphany",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Tymphany",
         "type": "object"
      },
      "_University_Of_California_San_Diego": {
         "description": "Model University of California, San Diego",
         "properties": {
            "name": {
               "const": "University of California, San Diego",
               "default": "University of California, San Diego",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "UCSD",
               "default": "UCSD",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "0168r3w48",
               "title": "Registry Identifier"
            }
         },
         "title": "_University_Of_California_San_Diego",
         "type": "object"
      },
      "_University_Of_Pennsylvania": {
         "description": "Model University of Pennsylvania",
         "properties": {
            "name": {
               "const": "University of Pennsylvania",
               "default": "University of Pennsylvania",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "UPENN",
               "default": "UPENN",
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "Research Organization Registry (ROR)"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": "00b30xv10",
               "title": "Registry Identifier"
            }
         },
         "title": "_University_Of_Pennsylvania",
         "type": "object"
      },
      "_Vieworks": {
         "description": "Model Vieworks",
         "properties": {
            "name": {
               "const": "Vieworks",
               "default": "Vieworks",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Vieworks",
         "type": "object"
      },
      "_Vortran": {
         "description": "Model Vortran",
         "properties": {
            "name": {
               "const": "Vortran",
               "default": "Vortran",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Registry"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry Identifier"
            }
         },
         "title": "_Vortran",
         "type": "object"
      }
   },
   "additionalProperties": false,
   "description": "Description of data acquisition metadata including streams, stimuli, and experimental setup.\n\nThe acquisition metadata is split into two parallel pieces: the DataStream and the StimulusEpoch.\nAt any given moment in time the active DataStream(s) represents all modalities of data being acquired,\nwhile the StimulusEpoch represents all stimuli being presented.",
   "properties": {
      "object_type": {
         "const": "Acquisition",
         "default": "Acquisition",
         "title": "Object Type",
         "type": "string"
      },
      "describedBy": {
         "const": "https://raw.githubusercontent.com/AllenNeuralDynamics/aind-data-schema/main/src/aind_data_schema/core/acquisition.py",
         "default": "https://raw.githubusercontent.com/AllenNeuralDynamics/aind-data-schema/main/src/aind_data_schema/core/acquisition.py",
         "title": "Describedby",
         "type": "string"
      },
      "schema_version": {
         "const": "2.0.36",
         "default": "2.0.36",
         "title": "Schema Version",
         "type": "string"
      },
      "subject_id": {
         "description": "Unique identifier for the subject",
         "title": "Subject ID",
         "type": "string"
      },
      "specimen_id": {
         "anyOf": [
            {
               "type": "string"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "description": "Specimen ID is required for in vitro imaging modalities",
         "title": "Specimen ID"
      },
      "acquisition_start_time": {
         "format": "date-time",
         "title": "Acquisition start time",
         "type": "string"
      },
      "acquisition_end_time": {
         "format": "date-time",
         "title": "Acquisition end time",
         "type": "string"
      },
      "experimenters": {
         "default": [],
         "items": {
            "type": "string"
         },
         "title": "experimenter(s)",
         "type": "array"
      },
      "protocol_id": {
         "anyOf": [
            {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "description": "DOI for protocols.io",
         "title": "Protocol ID"
      },
      "ethics_review_id": {
         "anyOf": [
            {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "title": "Ethics review ID"
      },
      "instrument_id": {
         "description": "Should match the Instrument.instrument_id",
         "title": "Instrument ID",
         "type": "string"
      },
      "acquisition_type": {
         "description": "Descriptive string detailing the type of acquisition, should be consistent across similar acquisitions for the same experiment.",
         "title": "Acquisition type",
         "type": "string"
      },
      "notes": {
         "anyOf": [
            {
               "type": "string"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "title": "Notes"
      },
      "coordinate_system": {
         "anyOf": [
            {
               "$ref": "#/$defs/CoordinateSystem"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "description": "Origin and axis definitions for determining the configured position of devices during acquisition. Required when coordinates are provided within the Acquisition",
         "title": "Coordinate system"
      },
      "calibrations": {
         "default": [],
         "description": "List of calibration measurements taken prior to acquisition.",
         "items": {
            "discriminator": {
               "mapping": {
                  "Calibration": "#/$defs/Calibration",
                  "Power calibration": "#/$defs/PowerCalibration",
                  "Volume calibration": "#/$defs/VolumeCalibration"
               },
               "propertyName": "object_type"
            },
            "oneOf": [
               {
                  "$ref": "#/$defs/Calibration"
               },
               {
                  "$ref": "#/$defs/VolumeCalibration"
               },
               {
                  "$ref": "#/$defs/PowerCalibration"
               }
            ]
         },
         "title": "Calibrations",
         "type": "array"
      },
      "maintenance": {
         "default": [],
         "description": "List of maintenance on instrument prior to acquisition.",
         "items": {
            "$ref": "#/$defs/Maintenance"
         },
         "title": "Maintenance",
         "type": "array"
      },
      "data_streams": {
         "description": "A data stream is a collection of devices that are acquiring data simultaneously. Each acquisition can include multiple streams. Streams should be split when configurations are changed.",
         "items": {
            "$ref": "#/$defs/DataStream"
         },
         "title": "Data streams",
         "type": "array"
      },
      "stimulus_epochs": {
         "default": [],
         "description": "A stimulus epoch captures all stimuli being presented during an acquisition. Epochs should be split when the purpose of the stimulus changes.",
         "items": {
            "$ref": "#/$defs/StimulusEpoch"
         },
         "title": "Stimulus",
         "type": "array"
      },
      "subject_details": {
         "anyOf": [
            {
               "$ref": "#/$defs/AcquisitionSubjectDetails"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "title": "Subject details"
      }
   },
   "required": [
      "subject_id",
      "acquisition_start_time",
      "acquisition_end_time",
      "instrument_id",
      "acquisition_type",
      "data_streams"
   ],
   "title": "Acquisition",
   "type": "object"
}