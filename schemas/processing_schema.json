{
   "$defs": {
      "Code": {
         "additionalProperties": false,
         "description": "Code or script identifier",
         "properties": {
            "object_type": {
               "const": "Code",
               "default": "Code",
               "title": "Object Type",
               "type": "string"
            },
            "url": {
               "description": "URL to code repository",
               "title": "Code URL",
               "type": "string"
            },
            "name": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Name"
            },
            "version": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Code version"
            },
            "container": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Container"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Container"
            },
            "run_script": {
               "anyOf": [
                  {
                     "format": "path",
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Path to run script",
               "title": "Run script"
            },
            "language": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Programming language used",
               "title": "Programming language"
            },
            "language_version": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Programming language version"
            },
            "input_data": {
               "anyOf": [
                  {
                     "items": {
                        "discriminator": {
                           "mapping": {
                              "Combined data": "#/$defs/CombinedData",
                              "Data asset": "#/$defs/DataAsset"
                           },
                           "propertyName": "object_type"
                        },
                        "oneOf": [
                           {
                              "$ref": "#/$defs/DataAsset"
                           },
                           {
                              "$ref": "#/$defs/CombinedData"
                           }
                        ]
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Input data used in the code or script",
               "title": "Input data"
            },
            "parameters": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/GenericModel"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Parameters used in the code or script",
               "title": "Parameters"
            },
            "core_dependency": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Software"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "For code with a core software package dependency, e.g. Bonsai",
               "title": "Core dependency"
            }
         },
         "required": [
            "url"
         ],
         "title": "Code",
         "type": "object"
      },
      "CombinedData": {
         "additionalProperties": false,
         "description": "Description of a group of data assets",
         "properties": {
            "object_type": {
               "const": "Combined data",
               "default": "Combined data",
               "title": "Object Type",
               "type": "string"
            },
            "assets": {
               "items": {
                  "$ref": "#/$defs/DataAsset"
               },
               "minItems": 1,
               "title": "Data assets",
               "type": "array"
            },
            "name": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Name"
            },
            "database_identifier": {
               "anyOf": [
                  {
                     "additionalProperties": {
                        "items": {
                           "type": "string"
                        },
                        "type": "array"
                     },
                     "propertyNames": {
                        "$ref": "#/$defs/Database"
                     },
                     "type": "object"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "ID or link to the Combined Data asset, if materialized.",
               "title": "Database identifier"
            },
            "description": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Intention or approach used to select group of assets",
               "title": "Description"
            }
         },
         "required": [
            "assets"
         ],
         "title": "CombinedData",
         "type": "object"
      },
      "Container": {
         "additionalProperties": false,
         "description": "Code container identifier, e.g. Docker",
         "properties": {
            "object_type": {
               "const": "Container",
               "default": "Container",
               "title": "Object Type",
               "type": "string"
            },
            "container_type": {
               "description": "Type of container, e.g. Docker, Singularity",
               "title": "Type",
               "type": "string"
            },
            "tag": {
               "description": "Tag of the container, e.g. version number",
               "title": "Tag",
               "type": "string"
            },
            "uri": {
               "description": "URI of the container, e.g. Docker Hub URL",
               "title": "URI",
               "type": "string"
            }
         },
         "required": [
            "container_type",
            "tag",
            "uri"
         ],
         "title": "Container",
         "type": "object"
      },
      "DataAsset": {
         "additionalProperties": false,
         "description": "Description of a single data asset",
         "properties": {
            "object_type": {
               "const": "Data asset",
               "default": "Data asset",
               "title": "Object Type",
               "type": "string"
            },
            "url": {
               "description": "URL pointing to the data asset",
               "title": "Asset location",
               "type": "string"
            }
         },
         "required": [
            "url"
         ],
         "title": "DataAsset",
         "type": "object"
      },
      "DataProcess": {
         "additionalProperties": false,
         "description": "Description of a single processing step",
         "properties": {
            "object_type": {
               "const": "Data process",
               "default": "Data process",
               "title": "Object Type",
               "type": "string"
            },
            "process_type": {
               "$ref": "#/$defs/ProcessName",
               "title": "Process type"
            },
            "name": {
               "default": "",
               "description": [
                  "Unique name of the processing step.",
                  " If not provided, the type will be used as the name."
               ],
               "title": "Name",
               "type": "string"
            },
            "stage": {
               "$ref": "#/$defs/ProcessStage",
               "title": "Processing stage"
            },
            "code": {
               "$ref": "#/$defs/Code",
               "description": "Code used for processing"
            },
            "experimenters": {
               "description": "People responsible for processing",
               "items": {
                  "$ref": "#/$defs/Person"
               },
               "title": "Experimenters",
               "type": "array"
            },
            "pipeline_name": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Pipeline names must exist in Processing.pipelines",
               "title": "Pipeline name"
            },
            "start_date_time": {
               "format": "date-time",
               "title": "Start date time",
               "type": "string"
            },
            "end_date_time": {
               "format": "date-time",
               "title": "End date time",
               "type": "string"
            },
            "output_path": {
               "anyOf": [
                  {
                     "description": "Relative path to a file from the metadata root folder",
                     "format": "uri-reference",
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Path to processing outputs, if stored.",
               "title": "Output path"
            },
            "output_parameters": {
               "$ref": "#/$defs/GenericModel",
               "default": {},
               "description": "Output parameters",
               "title": "Outputs"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            },
            "resources": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/ResourceUsage"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Process resource usage"
            }
         },
         "required": [
            "process_type",
            "stage",
            "code",
            "experimenters",
            "start_date_time",
            "end_date_time"
         ],
         "title": "DataProcess",
         "type": "object"
      },
      "Database": {
         "description": "Database platforms that can host data assets",
         "enum": [
            "Code Ocean",
            "DANDI"
         ],
         "title": "Database",
         "type": "string"
      },
      "GenericModel": {
         "additionalProperties": true,
         "description": "Base class for generic types that can be used in AIND schema",
         "properties": {},
         "title": "GenericModel",
         "type": "object"
      },
      "MemoryUnit": {
         "description": "Computer memory units",
         "enum": [
            "Byte",
            "Kilobyte",
            "Megabyte",
            "Gigabyte",
            "Terabyte",
            "Petabyte",
            "Exabyte"
         ],
         "title": "MemoryUnit",
         "type": "string"
      },
      "Person": {
         "additionalProperties": false,
         "description": "Person identifier",
         "properties": {
            "object_type": {
               "const": "Person",
               "default": "Person",
               "title": "Object Type",
               "type": "string"
            },
            "name": {
               "description": "First and last name OR anonymous ID",
               "title": "Person's name",
               "type": "string"
            },
            "registry": {
               "$ref": "#/$defs/_Orcid",
               "title": "Registry"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "ORCID ID"
            }
         },
         "required": [
            "name"
         ],
         "title": "Person",
         "type": "object"
      },
      "ProcessName": {
         "description": "Process names",
         "enum": [
            "Analysis",
            "Compression",
            "Denoising",
            "Ephys curation",
            "Ephys postprocessing",
            "Ephys preprocessing",
            "Ephys visualization",
            "Fiducial segmentation",
            "File format conversion",
            "Fluorescence event detection",
            "Image atlas alignment",
            "Image background subtraction",
            "Image cell classification",
            "Image cell quantification",
            "Image cell segmentation",
            "Image cross-image alignment",
            "Image destriping",
            "Image flat-field correction",
            "Image importing",
            "Image mip visualization",
            "Image radial correction",
            "Image spot detection",
            "Image spot spectral unmixing",
            "Image thresholding",
            "Image tile alignment",
            "Image tile fusing",
            "Image tile projection",
            "Model evaluation",
            "Model training",
            "Neuropil subtraction",
            "Other",
            "Pipeline",
            "Simulation",
            "Skull stripping",
            "Spatial timeseries demixing",
            "Spike sorting",
            "Video ROI classification",
            "Video ROI cross session matching",
            "Video ROI segmentation",
            "Video ROI timeseries extraction",
            "Video motion correction",
            "Video plane decrosstalk",
            "dF/F estimation"
         ],
         "title": "ProcessName",
         "type": "string"
      },
      "ProcessStage": {
         "description": "Stages of processing",
         "enum": [
            "Processing",
            "Analysis"
         ],
         "title": "ProcessStage",
         "type": "string"
      },
      "ResourceTimestamped": {
         "additionalProperties": false,
         "description": "Description of resource usage at a moment in time",
         "properties": {
            "object_type": {
               "const": "Resource timestamped",
               "default": "Resource timestamped",
               "title": "Object Type",
               "type": "string"
            },
            "timestamp": {
               "format": "date-time",
               "title": "Timestamp",
               "type": "string"
            },
            "usage": {
               "title": "Usage",
               "type": "number"
            }
         },
         "required": [
            "timestamp",
            "usage"
         ],
         "title": "ResourceTimestamped",
         "type": "object"
      },
      "ResourceUsage": {
         "additionalProperties": false,
         "description": "Description of resources used by a process",
         "properties": {
            "object_type": {
               "const": "Resource usage",
               "default": "Resource usage",
               "title": "Object Type",
               "type": "string"
            },
            "os": {
               "title": "Operating system",
               "type": "string"
            },
            "architecture": {
               "title": "Architecture",
               "type": "string"
            },
            "cpu": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "CPU name"
            },
            "cpu_cores": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "CPU cores"
            },
            "gpu": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "GPU name"
            },
            "system_memory": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "System memory"
            },
            "system_memory_unit": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/MemoryUnit"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "System memory unit"
            },
            "ram": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "System RAM"
            },
            "ram_unit": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/MemoryUnit"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Ram unit"
            },
            "cpu_usage": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/ResourceTimestamped"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "CPU usage"
            },
            "gpu_usage": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/ResourceTimestamped"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "GPU usage"
            },
            "ram_usage": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/ResourceTimestamped"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "RAM usage"
            },
            "usage_unit": {
               "default": "percent",
               "title": "Usage unit",
               "type": "string"
            }
         },
         "required": [
            "os",
            "architecture"
         ],
         "title": "ResourceUsage",
         "type": "object"
      },
      "Software": {
         "additionalProperties": false,
         "description": "Software package identifier",
         "properties": {
            "object_type": {
               "const": "Software",
               "default": "Software",
               "title": "Object Type",
               "type": "string"
            },
            "name": {
               "description": "Name of the software package",
               "title": "Software name",
               "type": "string"
            },
            "version": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Version of the software package",
               "title": "Software version"
            }
         },
         "required": [
            "name"
         ],
         "title": "Software",
         "type": "object"
      },
      "_Orcid": {
         "additionalProperties": false,
         "description": "Model ORCID",
         "properties": {
            "name": {
               "const": "Open Researcher and Contributor ID",
               "default": "Open Researcher and Contributor ID",
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "ORCID",
               "default": "ORCID",
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "_Orcid",
         "type": "object"
      }
   },
   "additionalProperties": false,
   "description": "Description of all processes run on data",
   "properties": {
      "object_type": {
         "const": "Processing",
         "default": "Processing",
         "title": "Object Type",
         "type": "string"
      },
      "describedBy": {
         "const": "https://raw.githubusercontent.com/AllenNeuralDynamics/aind-data-schema/main/src/aind_data_schema/core/processing.py",
         "default": "https://raw.githubusercontent.com/AllenNeuralDynamics/aind-data-schema/main/src/aind_data_schema/core/processing.py",
         "title": "Describedby",
         "type": "string"
      },
      "schema_version": {
         "const": "2.0.78",
         "default": "2.0.78",
         "title": "Schema Version",
         "type": "string"
      },
      "data_processes": {
         "items": {
            "$ref": "#/$defs/DataProcess"
         },
         "title": "Data processing",
         "type": "array"
      },
      "pipelines": {
         "anyOf": [
            {
               "items": {
                  "$ref": "#/$defs/Code"
               },
               "type": "array"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "description": "For processing done with pipelines, list the repositories here. Pipelines must use the name field ,and be referenced in the pipeline_name field of a DataProcess.",
         "title": "Pipelines"
      },
      "notes": {
         "anyOf": [
            {
               "type": "string"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "title": "Notes"
      },
      "dependency_graph": {
         "additionalProperties": {
            "items": {
               "type": "string"
            },
            "type": "array"
         },
         "description": "Directed graph of processing step dependencies. Each key is a process name, and the value is a list of process names that are inputs to that process.",
         "title": "Dependency graph",
         "type": "object"
      }
   },
   "required": [
      "data_processes",
      "dependency_graph"
   ],
   "title": "Processing",
   "type": "object"
}