{
   "$defs": {
      "AA_OPTO_ELECTRONIC": {
         "properties": {
            "name": {
               "const": "AA Opto Electronic",
               "default": "AA Opto Electronic",
               "enum": [
                  "AA Opto Electronic"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "AA_OPTO_ELECTRONIC",
         "type": "object"
      },
      "ABCAM": {
         "properties": {
            "name": {
               "const": "Abcam",
               "default": "Abcam",
               "enum": [
                  "Abcam"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "02e1wjw63",
               "default": "02e1wjw63",
               "enum": [
                  "02e1wjw63"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "ABCAM",
         "type": "object"
      },
      "ADDGENE": {
         "properties": {
            "name": {
               "const": "Addgene",
               "default": "Addgene",
               "enum": [
                  "Addgene"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "01nn1pw54",
               "default": "01nn1pw54",
               "enum": [
                  "01nn1pw54"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "ADDGENE",
         "type": "object"
      },
      "AI": {
         "properties": {
            "name": {
               "const": "Allen Institute",
               "default": "Allen Institute",
               "enum": [
                  "Allen Institute"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "AI",
               "default": "AI",
               "enum": [
                  "AI"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "03cpe7c52",
               "default": "03cpe7c52",
               "enum": [
                  "03cpe7c52"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "AI",
         "type": "object"
      },
      "AIBS": {
         "properties": {
            "name": {
               "const": "Allen Institute for Brain Science",
               "default": "Allen Institute for Brain Science",
               "enum": [
                  "Allen Institute for Brain Science"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "AIBS",
               "default": "AIBS",
               "enum": [
                  "AIBS"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "00dcv1019",
               "default": "00dcv1019",
               "enum": [
                  "00dcv1019"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "AIBS",
         "type": "object"
      },
      "AILIPU": {
         "properties": {
            "name": {
               "const": "Ailipu Technology Co",
               "default": "Ailipu Technology Co",
               "enum": [
                  "Ailipu Technology Co"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "Ailipu",
               "default": "Ailipu",
               "enum": [
                  "Ailipu"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "AILIPU",
         "type": "object"
      },
      "AIND": {
         "properties": {
            "name": {
               "const": "Allen Institute for Neural Dynamics",
               "default": "Allen Institute for Neural Dynamics",
               "enum": [
                  "Allen Institute for Neural Dynamics"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "AIND",
               "default": "AIND",
               "enum": [
                  "AIND"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "04szwah67",
               "default": "04szwah67",
               "enum": [
                  "04szwah67"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "AIND",
         "type": "object"
      },
      "ALLIED": {
         "properties": {
            "name": {
               "const": "Allied",
               "default": "Allied",
               "enum": [
                  "Allied"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "ALLIED",
         "type": "object"
      },
      "AMS_OSRAM": {
         "properties": {
            "name": {
               "const": "ams OSRAM",
               "default": "ams OSRAM",
               "enum": [
                  "ams OSRAM"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "045d0h266",
               "default": "045d0h266",
               "enum": [
                  "045d0h266"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "AMS_OSRAM",
         "type": "object"
      },
      "ARECONT_VISION_COSTAR": {
         "properties": {
            "name": {
               "const": "Arecont Vision Costar",
               "default": "Arecont Vision Costar",
               "enum": [
                  "Arecont Vision Costar"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "ARECONT_VISION_COSTAR",
         "type": "object"
      },
      "ASI": {
         "properties": {
            "name": {
               "const": "Applied Scientific Instrumentation",
               "default": "Applied Scientific Instrumentation",
               "enum": [
                  "Applied Scientific Instrumentation"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "ASI",
               "default": "ASI",
               "enum": [
                  "ASI"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "ASI",
         "type": "object"
      },
      "ASUS": {
         "properties": {
            "name": {
               "const": "ASUS",
               "default": "ASUS",
               "enum": [
                  "ASUS"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "00bxkz165",
               "default": "00bxkz165",
               "enum": [
                  "00bxkz165"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "ASUS",
         "type": "object"
      },
      "Affine3dTransform": {
         "additionalProperties": false,
         "description": "Values to be vector-added to a 3D position. Often needed to specify a Tile's origin.",
         "properties": {
            "type": {
               "const": "affine",
               "default": "affine",
               "enum": [
                  "affine"
               ],
               "title": "Type",
               "type": "string"
            },
            "affine_transform": {
               "items": {
                  "anyOf": [
                     {
                        "type": "number"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "maxItems": 12,
               "minItems": 12,
               "title": "Affine transform matrix values (top 3x4 matrix)",
               "type": "array"
            }
         },
         "required": [
            "affine_transform"
         ],
         "title": "Affine3dTransform",
         "type": "object"
      },
      "AindGeneric": {
         "additionalProperties": true,
         "description": "Base class for generic types that can be used in AIND schema",
         "properties": {},
         "title": "AindGeneric",
         "type": "object"
      },
      "Anaesthetic": {
         "additionalProperties": false,
         "description": "Description of an anaesthetic",
         "properties": {
            "type": {
               "title": "Type",
               "type": "string"
            },
            "duration": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Duration"
            },
            "duration_unit": {
               "$ref": "#/$defs/TimeUnit",
               "default": "minute",
               "title": "Duration unit"
            },
            "level": {
               "anyOf": [
                  {
                     "maximum": 5.0,
                     "minimum": 1.0,
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Level (percent)"
            }
         },
         "required": [
            "type",
            "duration"
         ],
         "title": "Anaesthetic",
         "type": "object"
      },
      "AngleUnit": {
         "description": "Enumeration of Angle Measurements",
         "enum": [
            "radians",
            "degrees"
         ],
         "title": "AngleUnit",
         "type": "string"
      },
      "AuditoryStimulation": {
         "additionalProperties": false,
         "description": "Description of an auditory stimulus",
         "properties": {
            "stimulus_type": {
               "const": "Auditory Stimulation",
               "default": "Auditory Stimulation",
               "enum": [
                  "Auditory Stimulation"
               ],
               "title": "Stimulus Type",
               "type": "string"
            },
            "sitmulus_name": {
               "title": "Stimulus name",
               "type": "string"
            },
            "sample_frequency": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Sample frequency"
            },
            "amplitude_modulation_frequency": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Amplitude modulation frequency"
            },
            "frequency_unit": {
               "$ref": "#/$defs/FrequencyUnit",
               "default": "hertz",
               "title": "Tone frequency unit"
            },
            "bandpass_low_frequency": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Bandpass low frequency"
            },
            "bandpass_high_frequency": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Bandpass high frequency"
            },
            "bandpass_filter_type": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/FilterType"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Bandpass filter type"
            },
            "bandpass_order": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Bandpass order"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "sitmulus_name",
            "sample_frequency"
         ],
         "title": "AuditoryStimulation",
         "type": "object"
      },
      "Axis": {
         "additionalProperties": false,
         "description": "Description of an axis",
         "properties": {
            "name": {
               "$ref": "#/$defs/AxisName",
               "title": "Axis"
            },
            "direction": {
               "title": "Direction as the value of axis increases.",
               "type": "string"
            }
         },
         "required": [
            "name",
            "direction"
         ],
         "title": "Axis",
         "type": "object"
      },
      "AxisName": {
         "description": "Image axis name",
         "enum": [
            "X",
            "Y",
            "Z"
         ],
         "title": "AxisName",
         "type": "string"
      },
      "BASLER": {
         "properties": {
            "name": {
               "const": "Basler",
               "default": "Basler",
               "enum": [
                  "Basler"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "BASLER",
         "type": "object"
      },
      "BEHAVIOR": {
         "additionalProperties": false,
         "properties": {
            "name": {
               "const": "Behavior",
               "default": "Behavior",
               "enum": [
                  "Behavior"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "behavior",
               "default": "behavior",
               "enum": [
                  "behavior"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "BEHAVIOR",
         "type": "object"
      },
      "BEHAVIOR_VIDEOS": {
         "additionalProperties": false,
         "properties": {
            "name": {
               "const": "Behavior videos",
               "default": "Behavior videos",
               "enum": [
                  "Behavior videos"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "behavior-videos",
               "default": "behavior-videos",
               "enum": [
                  "behavior-videos"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "BEHAVIOR_VIDEOS",
         "type": "object"
      },
      "BaseName": {
         "additionalProperties": false,
         "description": "A simple model associating a name with an abbreviation",
         "properties": {
            "name": {
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Abbreviation"
            }
         },
         "required": [
            "name"
         ],
         "title": "BaseName",
         "type": "object"
      },
      "CAMBRIDGE_TECHNOLOGY": {
         "properties": {
            "name": {
               "const": "Cambridge Technology",
               "default": "Cambridge Technology",
               "enum": [
                  "Cambridge Technology"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "CAMBRIDGE_TECHNOLOGY",
         "type": "object"
      },
      "CARL_ZEISS": {
         "properties": {
            "name": {
               "const": "Carl Zeiss",
               "default": "Carl Zeiss",
               "enum": [
                  "Carl Zeiss"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "01xk5xs43",
               "default": "01xk5xs43",
               "enum": [
                  "01xk5xs43"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "CARL_ZEISS",
         "type": "object"
      },
      "CHAMPALIMAUD": {
         "properties": {
            "name": {
               "const": "Champalimaud Foundation",
               "default": "Champalimaud Foundation",
               "enum": [
                  "Champalimaud Foundation"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "Champalimaud",
               "default": "Champalimaud",
               "enum": [
                  "Champalimaud"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "03g001n57",
               "default": "03g001n57",
               "enum": [
                  "03g001n57"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "CHAMPALIMAUD",
         "type": "object"
      },
      "CHROMA": {
         "properties": {
            "name": {
               "const": "Chroma",
               "default": "Chroma",
               "enum": [
                  "Chroma"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "CHROMA",
         "type": "object"
      },
      "COHERENT_SCIENTIFIC": {
         "properties": {
            "name": {
               "const": "Coherent Scientific",
               "default": "Coherent Scientific",
               "enum": [
                  "Coherent Scientific"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "031tysd23",
               "default": "031tysd23",
               "enum": [
                  "031tysd23"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "COHERENT_SCIENTIFIC",
         "type": "object"
      },
      "COLUMBIA": {
         "properties": {
            "name": {
               "const": "Columbia University",
               "default": "Columbia University",
               "enum": [
                  "Columbia University"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "Columbia",
               "default": "Columbia",
               "enum": [
                  "Columbia"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "00hj8s172",
               "default": "00hj8s172",
               "enum": [
                  "00hj8s172"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "COLUMBIA",
         "type": "object"
      },
      "COMPUTAR": {
         "properties": {
            "name": {
               "const": "Computar",
               "default": "Computar",
               "enum": [
                  "Computar"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "COMPUTAR",
         "type": "object"
      },
      "CONFOCAL": {
         "additionalProperties": false,
         "properties": {
            "name": {
               "const": "Confocal microscopy",
               "default": "Confocal microscopy",
               "enum": [
                  "Confocal microscopy"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "confocal",
               "default": "confocal",
               "enum": [
                  "confocal"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "CONFOCAL",
         "type": "object"
      },
      "CONOPTICS": {
         "properties": {
            "name": {
               "const": "Conoptics",
               "default": "Conoptics",
               "enum": [
                  "Conoptics"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "CONOPTICS",
         "type": "object"
      },
      "CUSTOM": {
         "properties": {
            "name": {
               "const": "Custom",
               "default": "Custom",
               "enum": [
                  "Custom"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "CUSTOM",
         "type": "object"
      },
      "CZI": {
         "properties": {
            "name": {
               "const": "Chan Zuckerberg Initiative",
               "default": "Chan Zuckerberg Initiative",
               "enum": [
                  "Chan Zuckerberg Initiative"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "CZI",
               "default": "CZI",
               "enum": [
                  "CZI"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "02qenvm24",
               "default": "02qenvm24",
               "enum": [
                  "02qenvm24"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "CZI",
         "type": "object"
      },
      "Calibration": {
         "additionalProperties": false,
         "description": "Generic calibration class",
         "properties": {
            "calibration_date": {
               "format": "date-time",
               "title": "Date and time of calibration",
               "type": "string"
            },
            "device_name": {
               "description": "Must match a device name in rig/instrument",
               "title": "Device name",
               "type": "string"
            },
            "description": {
               "description": "Brief description of what is being calibrated",
               "title": "Description",
               "type": "string"
            },
            "input": {
               "$ref": "#/$defs/AindGeneric",
               "default": {},
               "description": "Calibration input",
               "title": "inputs"
            },
            "output": {
               "$ref": "#/$defs/AindGeneric",
               "default": {},
               "description": "Calibration output",
               "title": "outputs"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "calibration_date",
            "device_name",
            "description"
         ],
         "title": "Calibration",
         "type": "object"
      },
      "CcfCoords": {
         "additionalProperties": false,
         "description": "Coordinates in CCF template space",
         "properties": {
            "ml": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "ML"
            },
            "ap": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "AP"
            },
            "dv": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "DV"
            },
            "unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "micrometer",
               "title": "Coordinate unit"
            },
            "ccf_version": {
               "$ref": "#/$defs/CcfVersion",
               "default": "CCFv3",
               "title": "CCF version"
            }
         },
         "required": [
            "ml",
            "ap",
            "dv"
         ],
         "title": "CcfCoords",
         "type": "object"
      },
      "CcfVersion": {
         "const": "CCFv3",
         "description": "CCF version",
         "enum": [
            "CCFv3"
         ],
         "title": "CcfVersion",
         "type": "string"
      },
      "ConcentrationUnit": {
         "description": "Concentraion units",
         "enum": [
            "molar",
            "micromolar",
            "nanomolar",
            "% m/m",
            "% v/v"
         ],
         "title": "ConcentrationUnit",
         "type": "string"
      },
      "Coordinates3d": {
         "additionalProperties": false,
         "description": "Coordinates in a 3D grid",
         "properties": {
            "x": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Position X"
            },
            "y": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Position Y"
            },
            "z": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Position Z"
            },
            "unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "micrometer",
               "title": "Position unit"
            }
         },
         "required": [
            "x",
            "y",
            "z"
         ],
         "title": "Coordinates3d",
         "type": "object"
      },
      "DODOTRONIC": {
         "properties": {
            "name": {
               "const": "Dodotronic",
               "default": "Dodotronic",
               "enum": [
                  "Dodotronic"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "DODOTRONIC",
         "type": "object"
      },
      "DORIC": {
         "properties": {
            "name": {
               "const": "Doric",
               "default": "Doric",
               "enum": [
                  "Doric"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "059n53q30",
               "default": "059n53q30",
               "enum": [
                  "059n53q30"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "DORIC",
         "type": "object"
      },
      "DetectorConfig": {
         "additionalProperties": false,
         "description": "Description of detector settings",
         "properties": {
            "name": {
               "title": "Name",
               "type": "string"
            },
            "exposure_time": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Exposure time (ms)"
            },
            "exposure_time_unit": {
               "$ref": "#/$defs/TimeUnit",
               "default": "millisecond",
               "title": "Exposure time unit"
            },
            "trigger_type": {
               "$ref": "#/$defs/TriggerType",
               "title": "Trigger type"
            }
         },
         "required": [
            "name",
            "exposure_time",
            "trigger_type"
         ],
         "title": "DetectorConfig",
         "type": "object"
      },
      "DomeModule": {
         "additionalProperties": false,
         "description": "Movable module that is mounted on the ephys dome insertion system",
         "properties": {
            "assembly_name": {
               "title": "Assembly name",
               "type": "string"
            },
            "arc_angle": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Arc Angle (deg)"
            },
            "module_angle": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Module Angle (deg)"
            },
            "angle_unit": {
               "$ref": "#/$defs/AngleUnit",
               "default": "degrees",
               "title": "Angle unit"
            },
            "rotation_angle": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Rotation Angle (deg)"
            },
            "coordinate_transform": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Path to coordinate transform",
               "title": "Transform from local manipulator axes to rig"
            },
            "calibration_date": {
               "anyOf": [
                  {
                     "format": "date-time",
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Date on which coordinate transform was last calibrated"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "assembly_name",
            "arc_angle",
            "module_angle"
         ],
         "title": "DomeModule",
         "type": "object"
      },
      "EALING": {
         "properties": {
            "name": {
               "const": "Ealing",
               "default": "Ealing",
               "enum": [
                  "Ealing"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "EALING",
         "type": "object"
      },
      "ECEPHYS": {
         "additionalProperties": false,
         "properties": {
            "name": {
               "const": "Extracellular electrophysiology",
               "default": "Extracellular electrophysiology",
               "enum": [
                  "Extracellular electrophysiology"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "ecephys",
               "default": "ecephys",
               "enum": [
                  "ecephys"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "ECEPHYS",
         "type": "object"
      },
      "EDMUND_OPTICS": {
         "properties": {
            "name": {
               "const": "Edmund Optics",
               "default": "Edmund Optics",
               "enum": [
                  "Edmund Optics"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "01j1gwp17",
               "default": "01j1gwp17",
               "enum": [
                  "01j1gwp17"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "EDMUND_OPTICS",
         "type": "object"
      },
      "EMG": {
         "additionalProperties": false,
         "properties": {
            "name": {
               "const": "Electromyography",
               "default": "Electromyography",
               "enum": [
                  "Electromyography"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "EMG",
               "default": "EMG",
               "enum": [
                  "EMG"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "EMG",
         "type": "object"
      },
      "EMORY": {
         "properties": {
            "name": {
               "const": "Emory University",
               "default": "Emory University",
               "enum": [
                  "Emory University"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "Emory",
               "default": "Emory",
               "enum": [
                  "Emory"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "03czfpz43",
               "default": "03czfpz43",
               "enum": [
                  "03czfpz43"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "EMORY",
         "type": "object"
      },
      "EURESYS": {
         "properties": {
            "name": {
               "const": "Euresys",
               "default": "Euresys",
               "enum": [
                  "Euresys"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "EURESYS",
         "type": "object"
      },
      "FIB": {
         "additionalProperties": false,
         "properties": {
            "name": {
               "const": "Fiber photometry",
               "default": "Fiber photometry",
               "enum": [
                  "Fiber photometry"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "fib",
               "default": "fib",
               "enum": [
                  "fib"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "FIB",
         "type": "object"
      },
      "FLIR": {
         "properties": {
            "name": {
               "const": "Teledyne FLIR",
               "default": "Teledyne FLIR",
               "enum": [
                  "Teledyne FLIR"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "FLIR",
               "default": "FLIR",
               "enum": [
                  "FLIR"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "01j1gwp17",
               "default": "01j1gwp17",
               "enum": [
                  "01j1gwp17"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "FLIR",
         "type": "object"
      },
      "FMOST": {
         "additionalProperties": false,
         "properties": {
            "name": {
               "const": "Fluorescence micro-optical sectioning tomography",
               "default": "Fluorescence micro-optical sectioning tomography",
               "enum": [
                  "Fluorescence micro-optical sectioning tomography"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "fMOST",
               "default": "fMOST",
               "enum": [
                  "fMOST"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "FMOST",
         "type": "object"
      },
      "FUJINON": {
         "properties": {
            "name": {
               "const": "Fujinon",
               "default": "Fujinon",
               "enum": [
                  "Fujinon"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "FUJINON",
         "type": "object"
      },
      "FiberConnectionConfig": {
         "additionalProperties": false,
         "description": "Description for a fiber photometry configuration",
         "properties": {
            "patch_cord_name": {
               "title": "Patch cord name (must match rig)",
               "type": "string"
            },
            "patch_cord_output_power": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Output power (uW)"
            },
            "output_power_unit": {
               "$ref": "#/$defs/PowerUnit",
               "default": "microwatt",
               "title": "Output power unit"
            },
            "fiber_name": {
               "title": "Fiber name (must match procedure)",
               "type": "string"
            }
         },
         "required": [
            "patch_cord_name",
            "patch_cord_output_power",
            "fiber_name"
         ],
         "title": "FiberConnectionConfig",
         "type": "object"
      },
      "FiberModule": {
         "additionalProperties": false,
         "description": "Inserted fiber photometry probe recorded in a stream",
         "properties": {
            "assembly_name": {
               "title": "Assembly name",
               "type": "string"
            },
            "arc_angle": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Arc Angle (deg)"
            },
            "module_angle": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Module Angle (deg)"
            },
            "angle_unit": {
               "$ref": "#/$defs/AngleUnit",
               "default": "degrees",
               "title": "Angle unit"
            },
            "rotation_angle": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Rotation Angle (deg)"
            },
            "coordinate_transform": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Path to coordinate transform",
               "title": "Transform from local manipulator axes to rig"
            },
            "calibration_date": {
               "anyOf": [
                  {
                     "format": "date-time",
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Date on which coordinate transform was last calibrated"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            },
            "primary_targeted_structure": {
               "title": "Targeted structure",
               "type": "string"
            },
            "other_targeted_structure": {
               "anyOf": [
                  {
                     "items": {
                        "type": "string"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Other targeted structure"
            },
            "targeted_ccf_coordinates": {
               "default": [],
               "items": {
                  "$ref": "#/$defs/CcfCoords"
               },
               "title": "Targeted CCF coordinates",
               "type": "array"
            },
            "manipulator_coordinates": {
               "$ref": "#/$defs/Coordinates3d",
               "title": "Manipulator coordinates"
            },
            "anatomical_coordinates": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Coordinates3d"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Anatomical coordinates"
            },
            "anatomical_reference": {
               "anyOf": [
                  {
                     "enum": [
                        "Bregma",
                        "Lambda"
                     ],
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Anatomical coordinate reference"
            },
            "surface_z": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Surface z"
            },
            "surface_z_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "micrometer",
               "title": "Surface z unit"
            },
            "dye": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Dye"
            },
            "implant_hole_number": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Implant hole number"
            },
            "fiber_connections": {
               "default": [],
               "items": {
                  "$ref": "#/$defs/FiberConnectionConfig"
               },
               "title": "Fiber photometry devices",
               "type": "array"
            }
         },
         "required": [
            "assembly_name",
            "arc_angle",
            "module_angle",
            "primary_targeted_structure",
            "manipulator_coordinates"
         ],
         "title": "FiberModule",
         "type": "object"
      },
      "FieldOfView": {
         "additionalProperties": false,
         "description": "Description of an imaging field of view",
         "properties": {
            "index": {
               "title": "Index",
               "type": "integer"
            },
            "imaging_depth": {
               "title": "Imaging depth (um)",
               "type": "integer"
            },
            "imaging_depth_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "micrometer",
               "title": "Imaging depth unit"
            },
            "targeted_structure": {
               "title": "Targeted structure",
               "type": "string"
            },
            "fov_coordinate_ml": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "FOV coordinate ML"
            },
            "fov_coordinate_ap": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "FOV coordinate AP"
            },
            "fov_coordinate_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "micrometer",
               "title": "FOV coordinate unit"
            },
            "fov_reference": {
               "description": "Reference for ML/AP coordinates",
               "title": "FOV reference",
               "type": "string"
            },
            "fov_width": {
               "title": "FOV width (pixels)",
               "type": "integer"
            },
            "fov_height": {
               "title": "FOV height (pixels)",
               "type": "integer"
            },
            "fov_size_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "pixel",
               "title": "FOV size unit"
            },
            "magnification": {
               "title": "Magnification",
               "type": "string"
            },
            "fov_scale_factor": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "FOV scale factor (um/pixel)"
            },
            "fov_scale_factor_unit": {
               "default": "um/pixel",
               "title": "FOV scale factor unit",
               "type": "string"
            },
            "frame_rate": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Frame rate (Hz)"
            },
            "frame_rate_unit": {
               "$ref": "#/$defs/FrequencyUnit",
               "default": "hertz",
               "title": "Frame rate unit"
            },
            "coupled_fov_index": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Coupled planes for multiscope",
               "title": "Coupled FOV"
            },
            "power": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "For coupled planes, this power is shared by both planes",
               "title": "Power"
            },
            "power_unit": {
               "$ref": "#/$defs/PowerUnit",
               "default": "percent",
               "title": "Power unit"
            },
            "power_ratio": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Power ratio for coupled planes"
            },
            "scanfield_z": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Z stage position of the fastz actuator for a given targeted depth"
            },
            "scanfield_z_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "micrometer",
               "title": "Z stage position unit"
            },
            "scanimage_roi_index": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "ScanImage ROI index"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "index",
            "imaging_depth",
            "targeted_structure",
            "fov_coordinate_ml",
            "fov_coordinate_ap",
            "fov_reference",
            "fov_width",
            "fov_height",
            "magnification",
            "fov_scale_factor"
         ],
         "title": "FieldOfView",
         "type": "object"
      },
      "FilterType": {
         "description": "Types of bandpass filters for auditory stim",
         "enum": [
            "Butterworth",
            "Other"
         ],
         "title": "FilterType",
         "type": "string"
      },
      "FrequencyUnit": {
         "description": "Enumeration of Frequency Measurements",
         "enum": [
            "kilohertz",
            "hertz",
            "millihertz"
         ],
         "title": "FrequencyUnit",
         "type": "string"
      },
      "HAMAMATSU": {
         "properties": {
            "name": {
               "const": "Hamamatsu",
               "default": "Hamamatsu",
               "enum": [
                  "Hamamatsu"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "03natb733",
               "default": "03natb733",
               "enum": [
                  "03natb733"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "HAMAMATSU",
         "type": "object"
      },
      "HAMILTON": {
         "properties": {
            "name": {
               "const": "Hamilton",
               "default": "Hamilton",
               "enum": [
                  "Hamilton"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "HAMILTON",
         "type": "object"
      },
      "HUST": {
         "properties": {
            "name": {
               "const": "Huazhong University of Science and Technology",
               "default": "Huazhong University of Science and Technology",
               "enum": [
                  "Huazhong University of Science and Technology"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "HUST",
               "default": "HUST",
               "enum": [
                  "HUST"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "00p991c53",
               "default": "00p991c53",
               "enum": [
                  "00p991c53"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "HUST",
         "type": "object"
      },
      "ICEPHYS": {
         "additionalProperties": false,
         "properties": {
            "name": {
               "const": "Intracellular electrophysiology",
               "default": "Intracellular electrophysiology",
               "enum": [
                  "Intracellular electrophysiology"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "icephys",
               "default": "icephys",
               "enum": [
                  "icephys"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "ICEPHYS",
         "type": "object"
      },
      "IDT": {
         "properties": {
            "name": {
               "const": "Integrated DNA Technologies",
               "default": "Integrated DNA Technologies",
               "enum": [
                  "Integrated DNA Technologies"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "IDT",
               "default": "IDT",
               "enum": [
                  "IDT"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "009jvpf03",
               "default": "009jvpf03",
               "enum": [
                  "009jvpf03"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "IDT",
         "type": "object"
      },
      "IMEC": {
         "properties": {
            "name": {
               "const": "Interuniversity Microelectronics Center",
               "default": "Interuniversity Microelectronics Center",
               "enum": [
                  "Interuniversity Microelectronics Center"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "IMEC",
               "default": "IMEC",
               "enum": [
                  "IMEC"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "02kcbn207",
               "default": "02kcbn207",
               "enum": [
                  "02kcbn207"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "IMEC",
         "type": "object"
      },
      "INFINITY_PHOTO_OPTICAL": {
         "properties": {
            "name": {
               "const": "Infinity Photo-Optical",
               "default": "Infinity Photo-Optical",
               "enum": [
                  "Infinity Photo-Optical"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "INFINITY_PHOTO_OPTICAL",
         "type": "object"
      },
      "INVITROGEN": {
         "properties": {
            "name": {
               "const": "Invitrogen",
               "default": "Invitrogen",
               "enum": [
                  "Invitrogen"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "03x1ewr52",
               "default": "03x1ewr52",
               "enum": [
                  "03x1ewr52"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "INVITROGEN",
         "type": "object"
      },
      "IR_ROBOT_CO": {
         "properties": {
            "name": {
               "const": "IR Robot Co",
               "default": "IR Robot Co",
               "enum": [
                  "IR Robot Co"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "IR_ROBOT_CO",
         "type": "object"
      },
      "ISI": {
         "additionalProperties": false,
         "properties": {
            "name": {
               "const": "Intrinsic signal imaging",
               "default": "Intrinsic signal imaging",
               "enum": [
                  "Intrinsic signal imaging"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "ISI",
               "default": "ISI",
               "enum": [
                  "ISI"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "ISI",
         "type": "object"
      },
      "ISL": {
         "properties": {
            "name": {
               "const": "ISL Products International",
               "default": "ISL Products International",
               "enum": [
                  "ISL Products International"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "ISL",
               "default": "ISL",
               "enum": [
                  "ISL"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "ISL",
         "type": "object"
      },
      "JANELIA": {
         "properties": {
            "name": {
               "const": "Janelia Research Campus",
               "default": "Janelia Research Campus",
               "enum": [
                  "Janelia Research Campus"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "Janelia",
               "default": "Janelia",
               "enum": [
                  "Janelia"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "013sk6x84",
               "default": "013sk6x84",
               "enum": [
                  "013sk6x84"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "JANELIA",
         "type": "object"
      },
      "JAX": {
         "properties": {
            "name": {
               "const": "Jackson Laboratory",
               "default": "Jackson Laboratory",
               "enum": [
                  "Jackson Laboratory"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "JAX",
               "default": "JAX",
               "enum": [
                  "JAX"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "021sy4w91",
               "default": "021sy4w91",
               "enum": [
                  "021sy4w91"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "JAX",
         "type": "object"
      },
      "JULABO": {
         "properties": {
            "name": {
               "const": "Julabo",
               "default": "Julabo",
               "enum": [
                  "Julabo"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "JULABO",
         "type": "object"
      },
      "LEICA": {
         "properties": {
            "name": {
               "const": "Leica",
               "default": "Leica",
               "enum": [
                  "Leica"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "LEICA",
         "type": "object"
      },
      "LG": {
         "properties": {
            "name": {
               "const": "LG",
               "default": "LG",
               "enum": [
                  "LG"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "02b948n83",
               "default": "02b948n83",
               "enum": [
                  "02b948n83"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "LG",
         "type": "object"
      },
      "LIFECANVAS": {
         "properties": {
            "name": {
               "const": "LifeCanvas",
               "default": "LifeCanvas",
               "enum": [
                  "LifeCanvas"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "LIFECANVAS",
         "type": "object"
      },
      "LUMEN_DYNAMICS": {
         "properties": {
            "name": {
               "const": "Lumen Dynamics",
               "default": "Lumen Dynamics",
               "enum": [
                  "Lumen Dynamics"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "LUMEN_DYNAMICS",
         "type": "object"
      },
      "LaserConfig": {
         "additionalProperties": false,
         "description": "Description of laser settings in a session",
         "properties": {
            "device_type": {
               "const": "Laser",
               "default": "Laser",
               "enum": [
                  "Laser"
               ],
               "title": "Device Type",
               "type": "string"
            },
            "name": {
               "description": "Must match rig json",
               "title": "Name",
               "type": "string"
            },
            "wavelength": {
               "title": "Wavelength (nm)",
               "type": "integer"
            },
            "wavelength_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "nanometer",
               "title": "Wavelength unit"
            },
            "excitation_power": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Excitation power (mW)"
            },
            "excitation_power_unit": {
               "$ref": "#/$defs/PowerUnit",
               "default": "milliwatt",
               "title": "Excitation power unit"
            }
         },
         "required": [
            "name",
            "wavelength"
         ],
         "title": "LaserConfig",
         "type": "object"
      },
      "LightEmittingDiodeConfig": {
         "additionalProperties": false,
         "description": "Description of LED settings",
         "properties": {
            "device_type": {
               "const": "Light emitting diode",
               "default": "Light emitting diode",
               "enum": [
                  "Light emitting diode"
               ],
               "title": "Device Type",
               "type": "string"
            },
            "name": {
               "title": "Name",
               "type": "string"
            },
            "excitation_power": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Excitation power (mW)"
            },
            "excitation_power_unit": {
               "$ref": "#/$defs/PowerUnit",
               "default": "milliwatt",
               "title": "Excitation power unit"
            }
         },
         "required": [
            "name"
         ],
         "title": "LightEmittingDiodeConfig",
         "type": "object"
      },
      "MBF": {
         "properties": {
            "name": {
               "const": "MBF Bioscience",
               "default": "MBF Bioscience",
               "enum": [
                  "MBF Bioscience"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "MBF",
               "default": "MBF",
               "enum": [
                  "MBF"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "02zynam48",
               "default": "02zynam48",
               "enum": [
                  "02zynam48"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "MBF",
         "type": "object"
      },
      "MEADOWLARK_OPTICS": {
         "properties": {
            "name": {
               "const": "Meadowlark Optics",
               "default": "Meadowlark Optics",
               "enum": [
                  "Meadowlark Optics"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "00n8qbq54",
               "default": "00n8qbq54",
               "enum": [
                  "00n8qbq54"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "MEADOWLARK_OPTICS",
         "type": "object"
      },
      "MERFISH": {
         "additionalProperties": false,
         "properties": {
            "name": {
               "const": "Multiplexed error-robust fluorescence in situ hybridization",
               "default": "Multiplexed error-robust fluorescence in situ hybridization",
               "enum": [
                  "Multiplexed error-robust fluorescence in situ hybridization"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "merfish",
               "default": "merfish",
               "enum": [
                  "merfish"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "MERFISH",
         "type": "object"
      },
      "MIDOPT": {
         "properties": {
            "name": {
               "const": "Midwest Optical Systems, Inc.",
               "default": "Midwest Optical Systems, Inc.",
               "enum": [
                  "Midwest Optical Systems, Inc."
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "MidOpt",
               "default": "MidOpt",
               "enum": [
                  "MidOpt"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "MIDOPT",
         "type": "object"
      },
      "MITUTUYO": {
         "properties": {
            "name": {
               "const": "Mitutuyo",
               "default": "Mitutuyo",
               "enum": [
                  "Mitutuyo"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "MITUTUYO",
         "type": "object"
      },
      "MJFF": {
         "properties": {
            "name": {
               "const": "Michael J. Fox Foundation for Parkinson's Research",
               "default": "Michael J. Fox Foundation for Parkinson's Research",
               "enum": [
                  "Michael J. Fox Foundation for Parkinson's Research"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "MJFF",
               "default": "MJFF",
               "enum": [
                  "MJFF"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "03arq3225",
               "default": "03arq3225",
               "enum": [
                  "03arq3225"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "MJFF",
         "type": "object"
      },
      "MKS_NEWPORT": {
         "properties": {
            "name": {
               "const": "MKS Newport",
               "default": "MKS Newport",
               "enum": [
                  "MKS Newport"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "00k17f049",
               "default": "00k17f049",
               "enum": [
                  "00k17f049"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "MKS_NEWPORT",
         "type": "object"
      },
      "MPI": {
         "properties": {
            "name": {
               "const": "MPI",
               "default": "MPI",
               "enum": [
                  "MPI"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "MPI",
               "default": "MPI",
               "enum": [
                  "MPI"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "MPI",
         "type": "object"
      },
      "MRI": {
         "additionalProperties": false,
         "properties": {
            "name": {
               "const": "Magnetic resonance imaging",
               "default": "Magnetic resonance imaging",
               "enum": [
                  "Magnetic resonance imaging"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "MRI",
               "default": "MRI",
               "enum": [
                  "MRI"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "MRI",
         "type": "object"
      },
      "MRIScan": {
         "additionalProperties": false,
         "description": "Description of a 3D scan",
         "properties": {
            "scan_index": {
               "title": "Scan index",
               "type": "integer"
            },
            "scan_type": {
               "$ref": "#/$defs/ScanType",
               "title": "Scan type"
            },
            "primary_scan": {
               "description": "Indicates the primary scan used for downstream analysis",
               "title": "Primary scan",
               "type": "boolean"
            },
            "mri_scanner": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Scanner"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "MRI scanner"
            },
            "scan_sequence_type": {
               "$ref": "#/$defs/MriScanSequence",
               "title": "Scan sequence"
            },
            "rare_factor": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "RARE factor"
            },
            "echo_time": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Echo time (ms)"
            },
            "effective_echo_time": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Effective echo time (ms)"
            },
            "echo_time_unit": {
               "$ref": "#/$defs/TimeUnit",
               "default": "millisecond",
               "title": "Echo time unit"
            },
            "repetition_time": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Repetition time (ms)"
            },
            "repetition_time_unit": {
               "$ref": "#/$defs/TimeUnit",
               "default": "millisecond",
               "title": "Repetition time unit"
            },
            "vc_orientation": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Rotation3dTransform"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Scan orientation"
            },
            "vc_position": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Translation3dTransform"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Scan position"
            },
            "subject_position": {
               "$ref": "#/$defs/SubjectPosition",
               "title": "Subject position"
            },
            "voxel_sizes": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Scale3dTransform"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Resolution",
               "title": "Voxel sizes"
            },
            "processing_steps": {
               "default": [],
               "items": {
                  "enum": [
                     "Fiducial segmentation",
                     "Image atlas alignment",
                     "Skull stripping"
                  ],
                  "type": "string"
               },
               "title": "Processing Steps",
               "type": "array"
            },
            "additional_scan_parameters": {
               "$ref": "#/$defs/AindGeneric",
               "title": "Parameters"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "scan_index",
            "scan_type",
            "primary_scan",
            "scan_sequence_type",
            "echo_time",
            "repetition_time",
            "subject_position",
            "additional_scan_parameters"
         ],
         "title": "MRIScan",
         "type": "object"
      },
      "MagneticStrength": {
         "description": "Strength of magnet",
         "enum": [
            7,
            14
         ],
         "title": "MagneticStrength",
         "type": "integer"
      },
      "Maintenance": {
         "additionalProperties": false,
         "description": "Generic maintenance class",
         "properties": {
            "maintenance_date": {
               "format": "date-time",
               "title": "Date and time of maintenance",
               "type": "string"
            },
            "device_name": {
               "description": "Must match a device name in rig/instrument",
               "title": "Device name",
               "type": "string"
            },
            "description": {
               "description": "Description on maintenance procedure",
               "title": "Description",
               "type": "string"
            },
            "protocol_id": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Protocol ID"
            },
            "reagents": {
               "default": [],
               "items": {
                  "$ref": "#/$defs/Reagent"
               },
               "title": "Reagents",
               "type": "array"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "maintenance_date",
            "device_name",
            "description"
         ],
         "title": "Maintenance",
         "type": "object"
      },
      "ManipulatorModule": {
         "additionalProperties": false,
         "description": "A dome module connected to a 3-axis manipulator",
         "properties": {
            "assembly_name": {
               "title": "Assembly name",
               "type": "string"
            },
            "arc_angle": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Arc Angle (deg)"
            },
            "module_angle": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Module Angle (deg)"
            },
            "angle_unit": {
               "$ref": "#/$defs/AngleUnit",
               "default": "degrees",
               "title": "Angle unit"
            },
            "rotation_angle": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Rotation Angle (deg)"
            },
            "coordinate_transform": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Path to coordinate transform",
               "title": "Transform from local manipulator axes to rig"
            },
            "calibration_date": {
               "anyOf": [
                  {
                     "format": "date-time",
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Date on which coordinate transform was last calibrated"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            },
            "primary_targeted_structure": {
               "title": "Targeted structure",
               "type": "string"
            },
            "other_targeted_structure": {
               "anyOf": [
                  {
                     "items": {
                        "type": "string"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Other targeted structure"
            },
            "targeted_ccf_coordinates": {
               "default": [],
               "items": {
                  "$ref": "#/$defs/CcfCoords"
               },
               "title": "Targeted CCF coordinates",
               "type": "array"
            },
            "manipulator_coordinates": {
               "$ref": "#/$defs/Coordinates3d",
               "title": "Manipulator coordinates"
            },
            "anatomical_coordinates": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Coordinates3d"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Anatomical coordinates"
            },
            "anatomical_reference": {
               "anyOf": [
                  {
                     "enum": [
                        "Bregma",
                        "Lambda"
                     ],
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Anatomical coordinate reference"
            },
            "surface_z": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Surface z"
            },
            "surface_z_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "micrometer",
               "title": "Surface z unit"
            },
            "dye": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Dye"
            },
            "implant_hole_number": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Implant hole number"
            }
         },
         "required": [
            "assembly_name",
            "arc_angle",
            "module_angle",
            "primary_targeted_structure",
            "manipulator_coordinates"
         ],
         "title": "ManipulatorModule",
         "type": "object"
      },
      "MassUnit": {
         "description": "Enumeration of Mass Measurements",
         "enum": [
            "kilogram",
            "gram",
            "milligram",
            "microgram",
            "nanogram"
         ],
         "title": "MassUnit",
         "type": "string"
      },
      "MriScanSequence": {
         "description": "MRI scan sequence",
         "enum": [
            "RARE",
            "Other"
         ],
         "title": "MriScanSequence",
         "type": "string"
      },
      "NATIONAL_INSTRUMENTS": {
         "properties": {
            "name": {
               "const": "National Instruments",
               "default": "National Instruments",
               "enum": [
                  "National Instruments"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "026exqw73",
               "default": "026exqw73",
               "enum": [
                  "026exqw73"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "NATIONAL_INSTRUMENTS",
         "type": "object"
      },
      "NAVITAR": {
         "properties": {
            "name": {
               "const": "Navitar",
               "default": "Navitar",
               "enum": [
                  "Navitar"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "NAVITAR",
         "type": "object"
      },
      "NCCIH": {
         "properties": {
            "name": {
               "const": "National Center for Complementary and Integrative Health",
               "default": "National Center for Complementary and Integrative Health",
               "enum": [
                  "National Center for Complementary and Integrative Health"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "NCCIH",
               "default": "NCCIH",
               "enum": [
                  "NCCIH"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "00190t495",
               "default": "00190t495",
               "enum": [
                  "00190t495"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "NCCIH",
         "type": "object"
      },
      "NEUROPHOTOMETRICS": {
         "properties": {
            "name": {
               "const": "Neurophotometrics",
               "default": "Neurophotometrics",
               "enum": [
                  "Neurophotometrics"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "NEUROPHOTOMETRICS",
         "type": "object"
      },
      "NEW_SCALE_TECHNOLOGIES": {
         "properties": {
            "name": {
               "const": "New Scale Technologies",
               "default": "New Scale Technologies",
               "enum": [
                  "New Scale Technologies"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "NEW_SCALE_TECHNOLOGIES",
         "type": "object"
      },
      "NIKON": {
         "properties": {
            "name": {
               "const": "Nikon",
               "default": "Nikon",
               "enum": [
                  "Nikon"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "0280y9h11",
               "default": "0280y9h11",
               "enum": [
                  "0280y9h11"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "NIKON",
         "type": "object"
      },
      "NIMH": {
         "properties": {
            "name": {
               "const": "National Institute of Mental Health",
               "default": "National Institute of Mental Health",
               "enum": [
                  "National Institute of Mental Health"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "NIMH",
               "default": "NIMH",
               "enum": [
                  "NIMH"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "04xeg9z08",
               "default": "04xeg9z08",
               "enum": [
                  "04xeg9z08"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "NIMH",
         "type": "object"
      },
      "NINDS": {
         "properties": {
            "name": {
               "const": "National Institute of Neurological Disorders and Stroke",
               "default": "National Institute of Neurological Disorders and Stroke",
               "enum": [
                  "National Institute of Neurological Disorders and Stroke"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "NINDS",
               "default": "NINDS",
               "enum": [
                  "NINDS"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "01s5ya894",
               "default": "01s5ya894",
               "enum": [
                  "01s5ya894"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "NINDS",
         "type": "object"
      },
      "NRESEARCH_INC": {
         "properties": {
            "name": {
               "const": "NResearch Inc",
               "default": "NResearch Inc",
               "enum": [
                  "NResearch Inc"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "NRESEARCH_INC",
         "type": "object"
      },
      "NYU": {
         "properties": {
            "name": {
               "const": "New York University",
               "default": "New York University",
               "enum": [
                  "New York University"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "NYU",
               "default": "NYU",
               "enum": [
                  "NYU"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "0190ak572",
               "default": "0190ak572",
               "enum": [
                  "0190ak572"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "NYU",
         "type": "object"
      },
      "OEPS": {
         "properties": {
            "name": {
               "const": "Open Ephys Production Site",
               "default": "Open Ephys Production Site",
               "enum": [
                  "Open Ephys Production Site"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "OEPS",
               "default": "OEPS",
               "enum": [
                  "OEPS"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "007rkz355",
               "default": "007rkz355",
               "enum": [
                  "007rkz355"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "OEPS",
         "type": "object"
      },
      "OLYMPUS": {
         "properties": {
            "name": {
               "const": "Olympus",
               "default": "Olympus",
               "enum": [
                  "Olympus"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "02vcdte90",
               "default": "02vcdte90",
               "enum": [
                  "02vcdte90"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "OLYMPUS",
         "type": "object"
      },
      "OPTOTUNE": {
         "properties": {
            "name": {
               "const": "Optotune",
               "default": "Optotune",
               "enum": [
                  "Optotune"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "OPTOTUNE",
         "type": "object"
      },
      "OTHER": {
         "properties": {
            "name": {
               "const": "Other",
               "default": "Other",
               "enum": [
                  "Other"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "OTHER",
         "type": "object"
      },
      "OXXIUS": {
         "properties": {
            "name": {
               "const": "Oxxius",
               "default": "Oxxius",
               "enum": [
                  "Oxxius"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "OXXIUS",
         "type": "object"
      },
      "OlfactometerChannelConfig": {
         "additionalProperties": false,
         "description": "Description of olfactometer channel configurations",
         "properties": {
            "channel_index": {
               "title": "Channel index",
               "type": "integer"
            },
            "odorant": {
               "title": "Odorant",
               "type": "string"
            },
            "odorant_dilution": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Odorant dilution"
            },
            "odorant_dilution_unit": {
               "$ref": "#/$defs/ConcentrationUnit",
               "default": "% v/v",
               "title": "Dilution unit"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "channel_index",
            "odorant",
            "odorant_dilution"
         ],
         "title": "OlfactometerChannelConfig",
         "type": "object"
      },
      "OlfactoryStimulation": {
         "additionalProperties": false,
         "description": "Description of a olfactory stimulus",
         "properties": {
            "stimulus_type": {
               "const": "Olfactory Stimulation",
               "default": "Olfactory Stimulation",
               "enum": [
                  "Olfactory Stimulation"
               ],
               "title": "Stimulus Type",
               "type": "string"
            },
            "stimulus_name": {
               "title": "Stimulus name",
               "type": "string"
            },
            "channels": {
               "items": {
                  "$ref": "#/$defs/OlfactometerChannelConfig"
               },
               "title": "Channels",
               "type": "array"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "stimulus_name",
            "channels"
         ],
         "title": "OlfactoryStimulation",
         "type": "object"
      },
      "OptoStimulation": {
         "additionalProperties": false,
         "description": "Description of opto stimulation parameters",
         "properties": {
            "stimulus_type": {
               "const": "Opto Stimulation",
               "default": "Opto Stimulation",
               "enum": [
                  "Opto Stimulation"
               ],
               "title": "Stimulus Type",
               "type": "string"
            },
            "stimulus_name": {
               "title": "Stimulus name",
               "type": "string"
            },
            "pulse_shape": {
               "$ref": "#/$defs/PulseShape",
               "title": "Pulse shape"
            },
            "pulse_frequency": {
               "items": {
                  "anyOf": [
                     {
                        "type": "number"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "title": "Pulse frequency (Hz)",
               "type": "array"
            },
            "pulse_frequency_unit": {
               "$ref": "#/$defs/FrequencyUnit",
               "default": "hertz",
               "title": "Pulse frequency unit"
            },
            "number_pulse_trains": {
               "items": {
                  "type": "integer"
               },
               "title": "Number of pulse trains",
               "type": "array"
            },
            "pulse_width": {
               "items": {
                  "type": "integer"
               },
               "title": "Pulse width (ms)",
               "type": "array"
            },
            "pulse_width_unit": {
               "$ref": "#/$defs/TimeUnit",
               "default": "millisecond",
               "title": "Pulse width unit"
            },
            "pulse_train_duration": {
               "items": {
                  "anyOf": [
                     {
                        "type": "number"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "title": "Pulse train duration (s)",
               "type": "array"
            },
            "pulse_train_duration_unit": {
               "$ref": "#/$defs/TimeUnit",
               "default": "second",
               "title": "Pulse train duration unit"
            },
            "fixed_pulse_train_interval": {
               "title": "Fixed pulse train interval",
               "type": "boolean"
            },
            "pulse_train_interval": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Time between pulse trains",
               "title": "Pulse train interval (s)"
            },
            "pulse_train_interval_unit": {
               "$ref": "#/$defs/TimeUnit",
               "default": "second",
               "title": "Pulse train interval unit"
            },
            "baseline_duration": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "description": "Duration of baseline recording prior to first pulse train",
               "title": "Baseline duration (s)"
            },
            "baseline_duration_unit": {
               "$ref": "#/$defs/TimeUnit",
               "default": "second",
               "title": "Baseline duration unit"
            },
            "other_parameters": {
               "$ref": "#/$defs/AindGeneric",
               "default": {},
               "title": "Other parameters"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "stimulus_name",
            "pulse_shape",
            "pulse_frequency",
            "number_pulse_trains",
            "pulse_width",
            "pulse_train_duration",
            "fixed_pulse_train_interval",
            "baseline_duration"
         ],
         "title": "OptoStimulation",
         "type": "object"
      },
      "PIDName": {
         "additionalProperties": false,
         "description": "Model for associate a name with a persistent identifier (PID),\nthe registry for that PID, and abbreviation for that registry",
         "properties": {
            "name": {
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Abbreviation"
            },
            "registry": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/BaseName"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry"
            },
            "registry_identifier": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Registry identifier"
            }
         },
         "required": [
            "name"
         ],
         "title": "PIDName",
         "type": "object"
      },
      "POPHYS": {
         "additionalProperties": false,
         "properties": {
            "name": {
               "const": "Planar optical physiology",
               "default": "Planar optical physiology",
               "enum": [
                  "Planar optical physiology"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "pophys",
               "default": "pophys",
               "enum": [
                  "pophys"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "POPHYS",
         "type": "object"
      },
      "PRIZMATIX": {
         "properties": {
            "name": {
               "const": "Prizmatix",
               "default": "Prizmatix",
               "enum": [
                  "Prizmatix"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "PRIZMATIX",
         "type": "object"
      },
      "PhotoStimulation": {
         "additionalProperties": false,
         "description": "Description of a photostimulation session",
         "properties": {
            "stimulus_type": {
               "const": "Photo Stimulation",
               "default": "Photo Stimulation",
               "enum": [
                  "Photo Stimulation"
               ],
               "title": "Stimulus Type",
               "type": "string"
            },
            "stimulus_name": {
               "title": "Stimulus name",
               "type": "string"
            },
            "number_groups": {
               "title": "Number of groups",
               "type": "integer"
            },
            "groups": {
               "items": {
                  "$ref": "#/$defs/PhotoStimulationGroup"
               },
               "title": "Groups",
               "type": "array"
            },
            "inter_trial_interval": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Inter trial interval (s)"
            },
            "inter_trial_interval_unit": {
               "$ref": "#/$defs/TimeUnit",
               "default": "second",
               "title": "Inter trial interval unit"
            },
            "other_parameters": {
               "$ref": "#/$defs/AindGeneric",
               "default": {},
               "title": "Other parameters"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "stimulus_name",
            "number_groups",
            "groups",
            "inter_trial_interval"
         ],
         "title": "PhotoStimulation",
         "type": "object"
      },
      "PhotoStimulationGroup": {
         "additionalProperties": false,
         "description": "Description of a photostimulation group",
         "properties": {
            "group_index": {
               "title": "Group index",
               "type": "integer"
            },
            "number_of_neurons": {
               "title": "Number of neurons",
               "type": "integer"
            },
            "stimulation_laser_power": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Stimulation laser power (mW)"
            },
            "stimulation_laser_power_unit": {
               "$ref": "#/$defs/PowerUnit",
               "default": "milliwatt",
               "title": "Stimulation laser power unit"
            },
            "number_trials": {
               "title": "Number of trials",
               "type": "integer"
            },
            "number_spirals": {
               "title": "Number of spirals",
               "type": "integer"
            },
            "spiral_duration": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Spiral duration (s)"
            },
            "spiral_duration_unit": {
               "$ref": "#/$defs/TimeUnit",
               "default": "second",
               "title": "Spiral duration unit"
            },
            "inter_spiral_interval": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Inter trial interval (s)"
            },
            "inter_spiral_interval_unit": {
               "$ref": "#/$defs/TimeUnit",
               "default": "second",
               "title": "Inter trial interval unit"
            },
            "other_parameters": {
               "$ref": "#/$defs/AindGeneric",
               "default": {},
               "title": "Other parameters"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "group_index",
            "number_of_neurons",
            "stimulation_laser_power",
            "number_trials",
            "number_spirals",
            "spiral_duration",
            "inter_spiral_interval"
         ],
         "title": "PhotoStimulationGroup",
         "type": "object"
      },
      "PowerUnit": {
         "description": "Unit for power, set or measured",
         "enum": [
            "microwatt",
            "milliwatt",
            "percent"
         ],
         "title": "PowerUnit",
         "type": "string"
      },
      "PulseShape": {
         "description": "Types of Opto stim pulse shapes",
         "enum": [
            "Square",
            "Ramp",
            "Sinusoidal"
         ],
         "title": "PulseShape",
         "type": "string"
      },
      "QUANTIFI": {
         "properties": {
            "name": {
               "const": "Quantifi",
               "default": "Quantifi",
               "enum": [
                  "Quantifi"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "QUANTIFI",
         "type": "object"
      },
      "RASPBERRY_PI": {
         "properties": {
            "name": {
               "const": "Raspberry Pi",
               "default": "Raspberry Pi",
               "enum": [
                  "Raspberry Pi"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "RASPBERRY_PI",
         "type": "object"
      },
      "ROR": {
         "additionalProperties": false,
         "properties": {
            "name": {
               "const": "Research Organization Registry",
               "default": "Research Organization Registry",
               "enum": [
                  "Research Organization Registry"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "ROR",
               "default": "ROR",
               "enum": [
                  "ROR"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "ROR",
         "type": "object"
      },
      "Reagent": {
         "additionalProperties": false,
         "description": "Description of reagent used in procedure",
         "properties": {
            "name": {
               "title": "Name",
               "type": "string"
            },
            "source": {
               "discriminator": {
                  "mapping": {
                     "AA Opto Electronic": "#/$defs/AA_OPTO_ELECTRONIC",
                     "ASUS": "#/$defs/ASUS",
                     "Abcam": "#/$defs/ABCAM",
                     "Addgene": "#/$defs/ADDGENE",
                     "Ailipu Technology Co": "#/$defs/AILIPU",
                     "Allen Institute": "#/$defs/AI",
                     "Allen Institute for Brain Science": "#/$defs/AIBS",
                     "Allen Institute for Neural Dynamics": "#/$defs/AIND",
                     "Allied": "#/$defs/ALLIED",
                     "Applied Scientific Instrumentation": "#/$defs/ASI",
                     "Arecont Vision Costar": "#/$defs/ARECONT_VISION_COSTAR",
                     "Basler": "#/$defs/BASLER",
                     "Cambridge Technology": "#/$defs/CAMBRIDGE_TECHNOLOGY",
                     "Carl Zeiss": "#/$defs/CARL_ZEISS",
                     "Champalimaud Foundation": "#/$defs/CHAMPALIMAUD",
                     "Chan Zuckerberg Initiative": "#/$defs/CZI",
                     "Chroma": "#/$defs/CHROMA",
                     "Coherent Scientific": "#/$defs/COHERENT_SCIENTIFIC",
                     "Columbia University": "#/$defs/COLUMBIA",
                     "Computar": "#/$defs/COMPUTAR",
                     "Conoptics": "#/$defs/CONOPTICS",
                     "Custom": "#/$defs/CUSTOM",
                     "Dodotronic": "#/$defs/DODOTRONIC",
                     "Doric": "#/$defs/DORIC",
                     "Ealing": "#/$defs/EALING",
                     "Edmund Optics": "#/$defs/EDMUND_OPTICS",
                     "Emory University": "#/$defs/EMORY",
                     "Euresys": "#/$defs/EURESYS",
                     "Fujinon": "#/$defs/FUJINON",
                     "Hamamatsu": "#/$defs/HAMAMATSU",
                     "Hamilton": "#/$defs/HAMILTON",
                     "Huazhong University of Science and Technology": "#/$defs/HUST",
                     "IR Robot Co": "#/$defs/IR_ROBOT_CO",
                     "ISL Products International": "#/$defs/ISL",
                     "Infinity Photo-Optical": "#/$defs/INFINITY_PHOTO_OPTICAL",
                     "Integrated DNA Technologies": "#/$defs/IDT",
                     "Interuniversity Microelectronics Center": "#/$defs/IMEC",
                     "Invitrogen": "#/$defs/INVITROGEN",
                     "Jackson Laboratory": "#/$defs/JAX",
                     "Janelia Research Campus": "#/$defs/JANELIA",
                     "Julabo": "#/$defs/JULABO",
                     "LG": "#/$defs/LG",
                     "Leica": "#/$defs/LEICA",
                     "LifeCanvas": "#/$defs/LIFECANVAS",
                     "Lumen Dynamics": "#/$defs/LUMEN_DYNAMICS",
                     "MBF Bioscience": "#/$defs/MBF",
                     "MKS Newport": "#/$defs/MKS_NEWPORT",
                     "MPI": "#/$defs/MPI",
                     "Meadowlark Optics": "#/$defs/MEADOWLARK_OPTICS",
                     "Michael J. Fox Foundation for Parkinson's Research": "#/$defs/MJFF",
                     "Midwest Optical Systems, Inc.": "#/$defs/MIDOPT",
                     "Mitutuyo": "#/$defs/MITUTUYO",
                     "NResearch Inc": "#/$defs/NRESEARCH_INC",
                     "National Center for Complementary and Integrative Health": "#/$defs/NCCIH",
                     "National Institute of Mental Health": "#/$defs/NIMH",
                     "National Institute of Neurological Disorders and Stroke": "#/$defs/NINDS",
                     "National Instruments": "#/$defs/NATIONAL_INSTRUMENTS",
                     "Navitar": "#/$defs/NAVITAR",
                     "Neurophotometrics": "#/$defs/NEUROPHOTOMETRICS",
                     "New Scale Technologies": "#/$defs/NEW_SCALE_TECHNOLOGIES",
                     "New York University": "#/$defs/NYU",
                     "Nikon": "#/$defs/NIKON",
                     "Olympus": "#/$defs/OLYMPUS",
                     "Open Ephys Production Site": "#/$defs/OEPS",
                     "Optotune": "#/$defs/OPTOTUNE",
                     "Other": "#/$defs/OTHER",
                     "Oxxius": "#/$defs/OXXIUS",
                     "Prizmatix": "#/$defs/PRIZMATIX",
                     "Quantifi": "#/$defs/QUANTIFI",
                     "Raspberry Pi": "#/$defs/RASPBERRY_PI",
                     "SICGEN": "#/$defs/SICGEN",
                     "Schneider-Kreuznach": "#/$defs/SCHNEIDER_KREUZNACH",
                     "Second Order Effects": "#/$defs/SECOND_ORDER_EFFECTS",
                     "Semrock": "#/$defs/SEMROCK",
                     "Sigma-Aldrich": "#/$defs/SIGMA_ALDRICH",
                     "Simons Foundation": "#/$defs/SIMONS_FOUNDATION",
                     "Spinnaker": "#/$defs/SPINNAKER",
                     "Tamron": "#/$defs/TAMRON",
                     "Technical Manufacturing Corporation": "#/$defs/TMC",
                     "Teledyne FLIR": "#/$defs/FLIR",
                     "Templeton World Charity Foundation": "#/$defs/TWCF",
                     "The Imaging Source": "#/$defs/THE_IMAGING_SOURCE",
                     "The Lee Company": "#/$defs/THE_LEE_COMPANY",
                     "Thermo Fisher Scientific": "#/$defs/THERMO_FISHER_SCIENTIFIC",
                     "Thorlabs": "#/$defs/THORLABS",
                     "Tymphany": "#/$defs/TYMPHANY",
                     "Vieworks": "#/$defs/VIEWORKS",
                     "Vortran": "#/$defs/VORTRAN",
                     "ams OSRAM": "#/$defs/AMS_OSRAM"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/AA_OPTO_ELECTRONIC"
                  },
                  {
                     "$ref": "#/$defs/ASUS"
                  },
                  {
                     "$ref": "#/$defs/ABCAM"
                  },
                  {
                     "$ref": "#/$defs/ADDGENE"
                  },
                  {
                     "$ref": "#/$defs/AILIPU"
                  },
                  {
                     "$ref": "#/$defs/AI"
                  },
                  {
                     "$ref": "#/$defs/AIBS"
                  },
                  {
                     "$ref": "#/$defs/AIND"
                  },
                  {
                     "$ref": "#/$defs/ALLIED"
                  },
                  {
                     "$ref": "#/$defs/ASI"
                  },
                  {
                     "$ref": "#/$defs/ARECONT_VISION_COSTAR"
                  },
                  {
                     "$ref": "#/$defs/BASLER"
                  },
                  {
                     "$ref": "#/$defs/CAMBRIDGE_TECHNOLOGY"
                  },
                  {
                     "$ref": "#/$defs/CARL_ZEISS"
                  },
                  {
                     "$ref": "#/$defs/CHAMPALIMAUD"
                  },
                  {
                     "$ref": "#/$defs/CZI"
                  },
                  {
                     "$ref": "#/$defs/CHROMA"
                  },
                  {
                     "$ref": "#/$defs/COHERENT_SCIENTIFIC"
                  },
                  {
                     "$ref": "#/$defs/COLUMBIA"
                  },
                  {
                     "$ref": "#/$defs/COMPUTAR"
                  },
                  {
                     "$ref": "#/$defs/CONOPTICS"
                  },
                  {
                     "$ref": "#/$defs/CUSTOM"
                  },
                  {
                     "$ref": "#/$defs/DODOTRONIC"
                  },
                  {
                     "$ref": "#/$defs/DORIC"
                  },
                  {
                     "$ref": "#/$defs/EALING"
                  },
                  {
                     "$ref": "#/$defs/EDMUND_OPTICS"
                  },
                  {
                     "$ref": "#/$defs/EMORY"
                  },
                  {
                     "$ref": "#/$defs/EURESYS"
                  },
                  {
                     "$ref": "#/$defs/FUJINON"
                  },
                  {
                     "$ref": "#/$defs/HAMAMATSU"
                  },
                  {
                     "$ref": "#/$defs/HAMILTON"
                  },
                  {
                     "$ref": "#/$defs/HUST"
                  },
                  {
                     "$ref": "#/$defs/IR_ROBOT_CO"
                  },
                  {
                     "$ref": "#/$defs/ISL"
                  },
                  {
                     "$ref": "#/$defs/INFINITY_PHOTO_OPTICAL"
                  },
                  {
                     "$ref": "#/$defs/IDT"
                  },
                  {
                     "$ref": "#/$defs/IMEC"
                  },
                  {
                     "$ref": "#/$defs/INVITROGEN"
                  },
                  {
                     "$ref": "#/$defs/JAX"
                  },
                  {
                     "$ref": "#/$defs/JANELIA"
                  },
                  {
                     "$ref": "#/$defs/JULABO"
                  },
                  {
                     "$ref": "#/$defs/LG"
                  },
                  {
                     "$ref": "#/$defs/LEICA"
                  },
                  {
                     "$ref": "#/$defs/LUMEN_DYNAMICS"
                  },
                  {
                     "$ref": "#/$defs/LIFECANVAS"
                  },
                  {
                     "$ref": "#/$defs/MBF"
                  },
                  {
                     "$ref": "#/$defs/MKS_NEWPORT"
                  },
                  {
                     "$ref": "#/$defs/MPI"
                  },
                  {
                     "$ref": "#/$defs/MEADOWLARK_OPTICS"
                  },
                  {
                     "$ref": "#/$defs/MJFF"
                  },
                  {
                     "$ref": "#/$defs/MIDOPT"
                  },
                  {
                     "$ref": "#/$defs/MITUTUYO"
                  },
                  {
                     "$ref": "#/$defs/NRESEARCH_INC"
                  },
                  {
                     "$ref": "#/$defs/NCCIH"
                  },
                  {
                     "$ref": "#/$defs/NIMH"
                  },
                  {
                     "$ref": "#/$defs/NINDS"
                  },
                  {
                     "$ref": "#/$defs/NATIONAL_INSTRUMENTS"
                  },
                  {
                     "$ref": "#/$defs/NAVITAR"
                  },
                  {
                     "$ref": "#/$defs/NEUROPHOTOMETRICS"
                  },
                  {
                     "$ref": "#/$defs/NEW_SCALE_TECHNOLOGIES"
                  },
                  {
                     "$ref": "#/$defs/NYU"
                  },
                  {
                     "$ref": "#/$defs/NIKON"
                  },
                  {
                     "$ref": "#/$defs/OLYMPUS"
                  },
                  {
                     "$ref": "#/$defs/OEPS"
                  },
                  {
                     "$ref": "#/$defs/OPTOTUNE"
                  },
                  {
                     "$ref": "#/$defs/OTHER"
                  },
                  {
                     "$ref": "#/$defs/OXXIUS"
                  },
                  {
                     "$ref": "#/$defs/PRIZMATIX"
                  },
                  {
                     "$ref": "#/$defs/QUANTIFI"
                  },
                  {
                     "$ref": "#/$defs/RASPBERRY_PI"
                  },
                  {
                     "$ref": "#/$defs/SICGEN"
                  },
                  {
                     "$ref": "#/$defs/SCHNEIDER_KREUZNACH"
                  },
                  {
                     "$ref": "#/$defs/SECOND_ORDER_EFFECTS"
                  },
                  {
                     "$ref": "#/$defs/SEMROCK"
                  },
                  {
                     "$ref": "#/$defs/SIGMA_ALDRICH"
                  },
                  {
                     "$ref": "#/$defs/SIMONS_FOUNDATION"
                  },
                  {
                     "$ref": "#/$defs/SPINNAKER"
                  },
                  {
                     "$ref": "#/$defs/TAMRON"
                  },
                  {
                     "$ref": "#/$defs/TMC"
                  },
                  {
                     "$ref": "#/$defs/FLIR"
                  },
                  {
                     "$ref": "#/$defs/TWCF"
                  },
                  {
                     "$ref": "#/$defs/THE_IMAGING_SOURCE"
                  },
                  {
                     "$ref": "#/$defs/THE_LEE_COMPANY"
                  },
                  {
                     "$ref": "#/$defs/THERMO_FISHER_SCIENTIFIC"
                  },
                  {
                     "$ref": "#/$defs/THORLABS"
                  },
                  {
                     "$ref": "#/$defs/TYMPHANY"
                  },
                  {
                     "$ref": "#/$defs/VIEWORKS"
                  },
                  {
                     "$ref": "#/$defs/VORTRAN"
                  },
                  {
                     "$ref": "#/$defs/AMS_OSRAM"
                  }
               ],
               "title": "Source"
            },
            "rrid": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/PIDName"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Research Resource ID"
            },
            "lot_number": {
               "title": "Lot number",
               "type": "string"
            },
            "expiration_date": {
               "anyOf": [
                  {
                     "format": "date",
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Lot expiration date"
            }
         },
         "required": [
            "name",
            "source",
            "lot_number"
         ],
         "title": "Reagent",
         "type": "object"
      },
      "RelativePosition": {
         "additionalProperties": false,
         "description": "Position and rotation of a device in a rig or instrument",
         "properties": {
            "device_position_transformations": {
               "items": {
                  "discriminator": {
                     "mapping": {
                        "rotation": "#/$defs/Rotation3dTransform",
                        "translation": "#/$defs/Translation3dTransform"
                     },
                     "propertyName": "type"
                  },
                  "oneOf": [
                     {
                        "$ref": "#/$defs/Translation3dTransform"
                     },
                     {
                        "$ref": "#/$defs/Rotation3dTransform"
                     }
                  ]
               },
               "title": "Device position transforms",
               "type": "array"
            },
            "device_origin": {
               "description": "Reference point on device for position information",
               "title": "Device origin",
               "type": "string"
            },
            "device_axes": {
               "items": {
                  "$ref": "#/$defs/Axis"
               },
               "maxItems": 3,
               "minItems": 3,
               "title": "Device axes",
               "type": "array"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "device_position_transformations",
            "device_origin",
            "device_axes"
         ],
         "title": "RelativePosition",
         "type": "object"
      },
      "RewardDeliveryConfig": {
         "additionalProperties": false,
         "description": "Description of reward delivery configuration",
         "properties": {
            "reward_solution": {
               "$ref": "#/$defs/RewardSolution",
               "description": "If Other use notes",
               "title": "Reward solution"
            },
            "reward_spouts": {
               "items": {
                  "$ref": "#/$defs/RewardSpoutConfig"
               },
               "title": "Reward spouts",
               "type": "array"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "reward_solution",
            "reward_spouts"
         ],
         "title": "RewardDeliveryConfig",
         "type": "object"
      },
      "RewardSolution": {
         "description": "Reward solution name",
         "enum": [
            "Water",
            "Other"
         ],
         "title": "RewardSolution",
         "type": "string"
      },
      "RewardSpoutConfig": {
         "additionalProperties": false,
         "description": "Reward spout session information",
         "properties": {
            "side": {
               "$ref": "#/$defs/SpoutSide",
               "description": "Must match rig",
               "title": "Spout side"
            },
            "starting_position": {
               "$ref": "#/$defs/RelativePosition",
               "title": "Starting position"
            },
            "variable_position": {
               "description": "True if spout position changes during session as tracked in data",
               "title": "Variable position",
               "type": "boolean"
            }
         },
         "required": [
            "side",
            "starting_position",
            "variable_position"
         ],
         "title": "RewardSpoutConfig",
         "type": "object"
      },
      "Rotation3dTransform": {
         "additionalProperties": false,
         "description": "Values to be vector-added to a 3D position. Often needed to specify a device or tile's origin.",
         "properties": {
            "type": {
               "const": "rotation",
               "default": "rotation",
               "enum": [
                  "rotation"
               ],
               "title": "Type",
               "type": "string"
            },
            "rotation": {
               "items": {
                  "anyOf": [
                     {
                        "type": "number"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "maxItems": 9,
               "minItems": 9,
               "title": "3D rotation matrix values (3x3) ",
               "type": "array"
            }
         },
         "required": [
            "rotation"
         ],
         "title": "Rotation3dTransform",
         "type": "object"
      },
      "SCHNEIDER_KREUZNACH": {
         "properties": {
            "name": {
               "const": "Schneider-Kreuznach",
               "default": "Schneider-Kreuznach",
               "enum": [
                  "Schneider-Kreuznach"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "SCHNEIDER_KREUZNACH",
         "type": "object"
      },
      "SECOND_ORDER_EFFECTS": {
         "properties": {
            "name": {
               "const": "Second Order Effects",
               "default": "Second Order Effects",
               "enum": [
                  "Second Order Effects"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "SECOND_ORDER_EFFECTS",
         "type": "object"
      },
      "SEMROCK": {
         "properties": {
            "name": {
               "const": "Semrock",
               "default": "Semrock",
               "enum": [
                  "Semrock"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "SEMROCK",
         "type": "object"
      },
      "SICGEN": {
         "properties": {
            "name": {
               "const": "SICGEN",
               "default": "SICGEN",
               "enum": [
                  "SICGEN"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "SICGEN",
         "type": "object"
      },
      "SIGMA_ALDRICH": {
         "properties": {
            "name": {
               "const": "Sigma-Aldrich",
               "default": "Sigma-Aldrich",
               "enum": [
                  "Sigma-Aldrich"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "SIGMA_ALDRICH",
         "type": "object"
      },
      "SIMONS_FOUNDATION": {
         "properties": {
            "name": {
               "const": "Simons Foundation",
               "default": "Simons Foundation",
               "enum": [
                  "Simons Foundation"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "01cmst727",
               "default": "01cmst727",
               "enum": [
                  "01cmst727"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "SIMONS_FOUNDATION",
         "type": "object"
      },
      "SLAP": {
         "additionalProperties": false,
         "properties": {
            "name": {
               "const": "Scanned line projection imaging",
               "default": "Scanned line projection imaging",
               "enum": [
                  "Scanned line projection imaging"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "slap",
               "default": "slap",
               "enum": [
                  "slap"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "SLAP",
         "type": "object"
      },
      "SPIM": {
         "additionalProperties": false,
         "properties": {
            "name": {
               "const": "Selective plane illumination microscopy",
               "default": "Selective plane illumination microscopy",
               "enum": [
                  "Selective plane illumination microscopy"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "SPIM",
               "default": "SPIM",
               "enum": [
                  "SPIM"
               ],
               "title": "Abbreviation",
               "type": "string"
            }
         },
         "title": "SPIM",
         "type": "object"
      },
      "SPINNAKER": {
         "properties": {
            "name": {
               "const": "Spinnaker",
               "default": "Spinnaker",
               "enum": [
                  "Spinnaker"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "SPINNAKER",
         "type": "object"
      },
      "Scale3dTransform": {
         "additionalProperties": false,
         "description": "Values to be vector-multiplied with a 3D position, equivalent to the diagonals of a 3x3 transform matrix.\nRepresents voxel spacing if used as the first applied coordinate transform.",
         "properties": {
            "type": {
               "const": "scale",
               "default": "scale",
               "enum": [
                  "scale"
               ],
               "title": "Type",
               "type": "string"
            },
            "scale": {
               "items": {
                  "anyOf": [
                     {
                        "type": "number"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "maxItems": 3,
               "minItems": 3,
               "title": "3D scale parameters",
               "type": "array"
            }
         },
         "required": [
            "scale"
         ],
         "title": "Scale3dTransform",
         "type": "object"
      },
      "ScanType": {
         "description": "Type of scan",
         "enum": [
            "Set Up",
            "3D Scan"
         ],
         "title": "ScanType",
         "type": "string"
      },
      "Scanner": {
         "additionalProperties": false,
         "description": "Description of a MRI Scanner",
         "properties": {
            "device_type": {
               "const": "Scanner",
               "default": "Scanner",
               "enum": [
                  "Scanner"
               ],
               "title": "Device Type",
               "type": "string"
            },
            "name": {
               "title": "Device name",
               "type": "string"
            },
            "serial_number": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Serial number"
            },
            "manufacturer": {
               "anyOf": [
                  {
                     "discriminator": {
                        "mapping": {
                           "AA Opto Electronic": "#/$defs/AA_OPTO_ELECTRONIC",
                           "ASUS": "#/$defs/ASUS",
                           "Abcam": "#/$defs/ABCAM",
                           "Addgene": "#/$defs/ADDGENE",
                           "Ailipu Technology Co": "#/$defs/AILIPU",
                           "Allen Institute": "#/$defs/AI",
                           "Allen Institute for Brain Science": "#/$defs/AIBS",
                           "Allen Institute for Neural Dynamics": "#/$defs/AIND",
                           "Allied": "#/$defs/ALLIED",
                           "Applied Scientific Instrumentation": "#/$defs/ASI",
                           "Arecont Vision Costar": "#/$defs/ARECONT_VISION_COSTAR",
                           "Basler": "#/$defs/BASLER",
                           "Cambridge Technology": "#/$defs/CAMBRIDGE_TECHNOLOGY",
                           "Carl Zeiss": "#/$defs/CARL_ZEISS",
                           "Champalimaud Foundation": "#/$defs/CHAMPALIMAUD",
                           "Chan Zuckerberg Initiative": "#/$defs/CZI",
                           "Chroma": "#/$defs/CHROMA",
                           "Coherent Scientific": "#/$defs/COHERENT_SCIENTIFIC",
                           "Columbia University": "#/$defs/COLUMBIA",
                           "Computar": "#/$defs/COMPUTAR",
                           "Conoptics": "#/$defs/CONOPTICS",
                           "Custom": "#/$defs/CUSTOM",
                           "Dodotronic": "#/$defs/DODOTRONIC",
                           "Doric": "#/$defs/DORIC",
                           "Ealing": "#/$defs/EALING",
                           "Edmund Optics": "#/$defs/EDMUND_OPTICS",
                           "Emory University": "#/$defs/EMORY",
                           "Euresys": "#/$defs/EURESYS",
                           "Fujinon": "#/$defs/FUJINON",
                           "Hamamatsu": "#/$defs/HAMAMATSU",
                           "Hamilton": "#/$defs/HAMILTON",
                           "Huazhong University of Science and Technology": "#/$defs/HUST",
                           "IR Robot Co": "#/$defs/IR_ROBOT_CO",
                           "ISL Products International": "#/$defs/ISL",
                           "Infinity Photo-Optical": "#/$defs/INFINITY_PHOTO_OPTICAL",
                           "Integrated DNA Technologies": "#/$defs/IDT",
                           "Interuniversity Microelectronics Center": "#/$defs/IMEC",
                           "Invitrogen": "#/$defs/INVITROGEN",
                           "Jackson Laboratory": "#/$defs/JAX",
                           "Janelia Research Campus": "#/$defs/JANELIA",
                           "Julabo": "#/$defs/JULABO",
                           "LG": "#/$defs/LG",
                           "Leica": "#/$defs/LEICA",
                           "LifeCanvas": "#/$defs/LIFECANVAS",
                           "Lumen Dynamics": "#/$defs/LUMEN_DYNAMICS",
                           "MBF Bioscience": "#/$defs/MBF",
                           "MKS Newport": "#/$defs/MKS_NEWPORT",
                           "MPI": "#/$defs/MPI",
                           "Meadowlark Optics": "#/$defs/MEADOWLARK_OPTICS",
                           "Michael J. Fox Foundation for Parkinson's Research": "#/$defs/MJFF",
                           "Midwest Optical Systems, Inc.": "#/$defs/MIDOPT",
                           "Mitutuyo": "#/$defs/MITUTUYO",
                           "NResearch Inc": "#/$defs/NRESEARCH_INC",
                           "National Center for Complementary and Integrative Health": "#/$defs/NCCIH",
                           "National Institute of Mental Health": "#/$defs/NIMH",
                           "National Institute of Neurological Disorders and Stroke": "#/$defs/NINDS",
                           "National Instruments": "#/$defs/NATIONAL_INSTRUMENTS",
                           "Navitar": "#/$defs/NAVITAR",
                           "Neurophotometrics": "#/$defs/NEUROPHOTOMETRICS",
                           "New Scale Technologies": "#/$defs/NEW_SCALE_TECHNOLOGIES",
                           "New York University": "#/$defs/NYU",
                           "Nikon": "#/$defs/NIKON",
                           "Olympus": "#/$defs/OLYMPUS",
                           "Open Ephys Production Site": "#/$defs/OEPS",
                           "Optotune": "#/$defs/OPTOTUNE",
                           "Other": "#/$defs/OTHER",
                           "Oxxius": "#/$defs/OXXIUS",
                           "Prizmatix": "#/$defs/PRIZMATIX",
                           "Quantifi": "#/$defs/QUANTIFI",
                           "Raspberry Pi": "#/$defs/RASPBERRY_PI",
                           "SICGEN": "#/$defs/SICGEN",
                           "Schneider-Kreuznach": "#/$defs/SCHNEIDER_KREUZNACH",
                           "Second Order Effects": "#/$defs/SECOND_ORDER_EFFECTS",
                           "Semrock": "#/$defs/SEMROCK",
                           "Sigma-Aldrich": "#/$defs/SIGMA_ALDRICH",
                           "Simons Foundation": "#/$defs/SIMONS_FOUNDATION",
                           "Spinnaker": "#/$defs/SPINNAKER",
                           "Tamron": "#/$defs/TAMRON",
                           "Technical Manufacturing Corporation": "#/$defs/TMC",
                           "Teledyne FLIR": "#/$defs/FLIR",
                           "Templeton World Charity Foundation": "#/$defs/TWCF",
                           "The Imaging Source": "#/$defs/THE_IMAGING_SOURCE",
                           "The Lee Company": "#/$defs/THE_LEE_COMPANY",
                           "Thermo Fisher Scientific": "#/$defs/THERMO_FISHER_SCIENTIFIC",
                           "Thorlabs": "#/$defs/THORLABS",
                           "Tymphany": "#/$defs/TYMPHANY",
                           "Vieworks": "#/$defs/VIEWORKS",
                           "Vortran": "#/$defs/VORTRAN",
                           "ams OSRAM": "#/$defs/AMS_OSRAM"
                        },
                        "propertyName": "name"
                     },
                     "oneOf": [
                        {
                           "$ref": "#/$defs/AA_OPTO_ELECTRONIC"
                        },
                        {
                           "$ref": "#/$defs/ASUS"
                        },
                        {
                           "$ref": "#/$defs/ABCAM"
                        },
                        {
                           "$ref": "#/$defs/ADDGENE"
                        },
                        {
                           "$ref": "#/$defs/AILIPU"
                        },
                        {
                           "$ref": "#/$defs/AI"
                        },
                        {
                           "$ref": "#/$defs/AIBS"
                        },
                        {
                           "$ref": "#/$defs/AIND"
                        },
                        {
                           "$ref": "#/$defs/ALLIED"
                        },
                        {
                           "$ref": "#/$defs/ASI"
                        },
                        {
                           "$ref": "#/$defs/ARECONT_VISION_COSTAR"
                        },
                        {
                           "$ref": "#/$defs/BASLER"
                        },
                        {
                           "$ref": "#/$defs/CAMBRIDGE_TECHNOLOGY"
                        },
                        {
                           "$ref": "#/$defs/CARL_ZEISS"
                        },
                        {
                           "$ref": "#/$defs/CHAMPALIMAUD"
                        },
                        {
                           "$ref": "#/$defs/CZI"
                        },
                        {
                           "$ref": "#/$defs/CHROMA"
                        },
                        {
                           "$ref": "#/$defs/COHERENT_SCIENTIFIC"
                        },
                        {
                           "$ref": "#/$defs/COLUMBIA"
                        },
                        {
                           "$ref": "#/$defs/COMPUTAR"
                        },
                        {
                           "$ref": "#/$defs/CONOPTICS"
                        },
                        {
                           "$ref": "#/$defs/CUSTOM"
                        },
                        {
                           "$ref": "#/$defs/DODOTRONIC"
                        },
                        {
                           "$ref": "#/$defs/DORIC"
                        },
                        {
                           "$ref": "#/$defs/EALING"
                        },
                        {
                           "$ref": "#/$defs/EDMUND_OPTICS"
                        },
                        {
                           "$ref": "#/$defs/EMORY"
                        },
                        {
                           "$ref": "#/$defs/EURESYS"
                        },
                        {
                           "$ref": "#/$defs/FUJINON"
                        },
                        {
                           "$ref": "#/$defs/HAMAMATSU"
                        },
                        {
                           "$ref": "#/$defs/HAMILTON"
                        },
                        {
                           "$ref": "#/$defs/HUST"
                        },
                        {
                           "$ref": "#/$defs/IR_ROBOT_CO"
                        },
                        {
                           "$ref": "#/$defs/ISL"
                        },
                        {
                           "$ref": "#/$defs/INFINITY_PHOTO_OPTICAL"
                        },
                        {
                           "$ref": "#/$defs/IDT"
                        },
                        {
                           "$ref": "#/$defs/IMEC"
                        },
                        {
                           "$ref": "#/$defs/INVITROGEN"
                        },
                        {
                           "$ref": "#/$defs/JAX"
                        },
                        {
                           "$ref": "#/$defs/JANELIA"
                        },
                        {
                           "$ref": "#/$defs/JULABO"
                        },
                        {
                           "$ref": "#/$defs/LG"
                        },
                        {
                           "$ref": "#/$defs/LEICA"
                        },
                        {
                           "$ref": "#/$defs/LUMEN_DYNAMICS"
                        },
                        {
                           "$ref": "#/$defs/LIFECANVAS"
                        },
                        {
                           "$ref": "#/$defs/MBF"
                        },
                        {
                           "$ref": "#/$defs/MKS_NEWPORT"
                        },
                        {
                           "$ref": "#/$defs/MPI"
                        },
                        {
                           "$ref": "#/$defs/MEADOWLARK_OPTICS"
                        },
                        {
                           "$ref": "#/$defs/MJFF"
                        },
                        {
                           "$ref": "#/$defs/MIDOPT"
                        },
                        {
                           "$ref": "#/$defs/MITUTUYO"
                        },
                        {
                           "$ref": "#/$defs/NRESEARCH_INC"
                        },
                        {
                           "$ref": "#/$defs/NCCIH"
                        },
                        {
                           "$ref": "#/$defs/NIMH"
                        },
                        {
                           "$ref": "#/$defs/NINDS"
                        },
                        {
                           "$ref": "#/$defs/NATIONAL_INSTRUMENTS"
                        },
                        {
                           "$ref": "#/$defs/NAVITAR"
                        },
                        {
                           "$ref": "#/$defs/NEUROPHOTOMETRICS"
                        },
                        {
                           "$ref": "#/$defs/NEW_SCALE_TECHNOLOGIES"
                        },
                        {
                           "$ref": "#/$defs/NYU"
                        },
                        {
                           "$ref": "#/$defs/NIKON"
                        },
                        {
                           "$ref": "#/$defs/OLYMPUS"
                        },
                        {
                           "$ref": "#/$defs/OEPS"
                        },
                        {
                           "$ref": "#/$defs/OPTOTUNE"
                        },
                        {
                           "$ref": "#/$defs/OTHER"
                        },
                        {
                           "$ref": "#/$defs/OXXIUS"
                        },
                        {
                           "$ref": "#/$defs/PRIZMATIX"
                        },
                        {
                           "$ref": "#/$defs/QUANTIFI"
                        },
                        {
                           "$ref": "#/$defs/RASPBERRY_PI"
                        },
                        {
                           "$ref": "#/$defs/SICGEN"
                        },
                        {
                           "$ref": "#/$defs/SCHNEIDER_KREUZNACH"
                        },
                        {
                           "$ref": "#/$defs/SECOND_ORDER_EFFECTS"
                        },
                        {
                           "$ref": "#/$defs/SEMROCK"
                        },
                        {
                           "$ref": "#/$defs/SIGMA_ALDRICH"
                        },
                        {
                           "$ref": "#/$defs/SIMONS_FOUNDATION"
                        },
                        {
                           "$ref": "#/$defs/SPINNAKER"
                        },
                        {
                           "$ref": "#/$defs/TAMRON"
                        },
                        {
                           "$ref": "#/$defs/TMC"
                        },
                        {
                           "$ref": "#/$defs/FLIR"
                        },
                        {
                           "$ref": "#/$defs/TWCF"
                        },
                        {
                           "$ref": "#/$defs/THE_IMAGING_SOURCE"
                        },
                        {
                           "$ref": "#/$defs/THE_LEE_COMPANY"
                        },
                        {
                           "$ref": "#/$defs/THERMO_FISHER_SCIENTIFIC"
                        },
                        {
                           "$ref": "#/$defs/THORLABS"
                        },
                        {
                           "$ref": "#/$defs/TYMPHANY"
                        },
                        {
                           "$ref": "#/$defs/VIEWORKS"
                        },
                        {
                           "$ref": "#/$defs/VORTRAN"
                        },
                        {
                           "$ref": "#/$defs/AMS_OSRAM"
                        }
                     ]
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Manufacturer"
            },
            "model": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Model"
            },
            "path_to_cad": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "For CUSTOM manufactured devices",
               "title": "Path to CAD diagram"
            },
            "port_index": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Port index"
            },
            "additional_settings": {
               "$ref": "#/$defs/AindGeneric",
               "default": {},
               "title": "Additional parameters"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            },
            "scanner_location": {
               "$ref": "#/$defs/ScannerLocation",
               "title": "Scanner location"
            },
            "magnetic_strength": {
               "$ref": "#/$defs/MagneticStrength",
               "title": "Magnetic strength (T)"
            },
            "magnetic_strength_unit": {
               "default": "T",
               "title": "Magnetic strength unit",
               "type": "string"
            }
         },
         "required": [
            "name",
            "scanner_location",
            "magnetic_strength"
         ],
         "title": "Scanner",
         "type": "object"
      },
      "ScannerLocation": {
         "description": "location of scanner",
         "enum": [
            "Fred Hutch",
            "UW SLU"
         ],
         "title": "ScannerLocation",
         "type": "string"
      },
      "SizeUnit": {
         "description": "Enumeration of Length Measurements",
         "enum": [
            "meter",
            "centimeter",
            "millimeter",
            "micrometer",
            "nanometer",
            "inch",
            "pixel"
         ],
         "title": "SizeUnit",
         "type": "string"
      },
      "SlapFieldOfView": {
         "additionalProperties": false,
         "description": "Description of a Slap2 scan",
         "properties": {
            "index": {
               "title": "Index",
               "type": "integer"
            },
            "imaging_depth": {
               "title": "Imaging depth (um)",
               "type": "integer"
            },
            "imaging_depth_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "micrometer",
               "title": "Imaging depth unit"
            },
            "targeted_structure": {
               "title": "Targeted structure",
               "type": "string"
            },
            "fov_coordinate_ml": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "FOV coordinate ML"
            },
            "fov_coordinate_ap": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "FOV coordinate AP"
            },
            "fov_coordinate_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "micrometer",
               "title": "FOV coordinate unit"
            },
            "fov_reference": {
               "description": "Reference for ML/AP coordinates",
               "title": "FOV reference",
               "type": "string"
            },
            "fov_width": {
               "title": "FOV width (pixels)",
               "type": "integer"
            },
            "fov_height": {
               "title": "FOV height (pixels)",
               "type": "integer"
            },
            "fov_size_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "pixel",
               "title": "FOV size unit"
            },
            "magnification": {
               "title": "Magnification",
               "type": "string"
            },
            "fov_scale_factor": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "FOV scale factor (um/pixel)"
            },
            "fov_scale_factor_unit": {
               "default": "um/pixel",
               "title": "FOV scale factor unit",
               "type": "string"
            },
            "frame_rate": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Frame rate (Hz)"
            },
            "frame_rate_unit": {
               "$ref": "#/$defs/FrequencyUnit",
               "default": "hertz",
               "title": "Frame rate unit"
            },
            "coupled_fov_index": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "Coupled planes for multiscope",
               "title": "Coupled FOV"
            },
            "power": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "For coupled planes, this power is shared by both planes",
               "title": "Power"
            },
            "power_unit": {
               "$ref": "#/$defs/PowerUnit",
               "default": "percent",
               "title": "Power unit"
            },
            "power_ratio": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Power ratio for coupled planes"
            },
            "scanfield_z": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Z stage position of the fastz actuator for a given targeted depth"
            },
            "scanfield_z_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "micrometer",
               "title": "Z stage position unit"
            },
            "scanimage_roi_index": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "ScanImage ROI index"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            },
            "session_type": {
               "$ref": "#/$defs/SlapSessionType",
               "title": "Session type"
            },
            "dmd_dilation_x": {
               "title": "DMD Dilation X (pixels)",
               "type": "integer"
            },
            "dmd_dilation_y": {
               "title": "DMD Dilation Y (pixels)",
               "type": "integer"
            },
            "dilation_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "pixel",
               "title": "Dilation unit"
            },
            "target_neuron": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Target neuron"
            },
            "target_branch": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Target branch"
            },
            "path_to_array_of_frame_rates": {
               "title": "Array of frame rates",
               "type": "string"
            }
         },
         "required": [
            "index",
            "imaging_depth",
            "targeted_structure",
            "fov_coordinate_ml",
            "fov_coordinate_ap",
            "fov_reference",
            "fov_width",
            "fov_height",
            "magnification",
            "fov_scale_factor",
            "session_type",
            "dmd_dilation_x",
            "dmd_dilation_y",
            "path_to_array_of_frame_rates"
         ],
         "title": "SlapFieldOfView",
         "type": "object"
      },
      "SlapSessionType": {
         "description": "Type of slap session",
         "enum": [
            "Parent",
            "Branch"
         ],
         "title": "SlapSessionType",
         "type": "string"
      },
      "Software": {
         "additionalProperties": false,
         "description": "Description of generic software",
         "properties": {
            "name": {
               "title": "Software name",
               "type": "string"
            },
            "version": {
               "title": "Software version",
               "type": "string"
            },
            "url": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "URL to commit being used"
            },
            "parameters": {
               "$ref": "#/$defs/AindGeneric",
               "default": {},
               "title": "Software parameters"
            }
         },
         "required": [
            "name",
            "version"
         ],
         "title": "Software",
         "type": "object"
      },
      "SoundIntensityUnit": {
         "const": "decibels",
         "description": "Sound intensity units",
         "enum": [
            "decibels"
         ],
         "title": "SoundIntensityUnit",
         "type": "string"
      },
      "SpeakerConfig": {
         "additionalProperties": false,
         "description": "Description of auditory speaker configuration",
         "properties": {
            "name": {
               "description": "Must match rig json",
               "title": "Name",
               "type": "string"
            },
            "volume": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Volume (dB)"
            },
            "volume_unit": {
               "$ref": "#/$defs/SoundIntensityUnit",
               "default": "decibels",
               "title": "Volume unit"
            }
         },
         "required": [
            "name"
         ],
         "title": "SpeakerConfig",
         "type": "object"
      },
      "SpoutSide": {
         "description": "Spout sides",
         "enum": [
            "Left",
            "Right",
            "Center",
            "Other"
         ],
         "title": "SpoutSide",
         "type": "string"
      },
      "Stack": {
         "additionalProperties": false,
         "description": "Description of a two photon stack",
         "properties": {
            "channels": {
               "items": {
                  "$ref": "#/$defs/StackChannel"
               },
               "title": "Channels",
               "type": "array"
            },
            "number_of_planes": {
               "title": "Number of planes",
               "type": "integer"
            },
            "step_size": {
               "title": "Step size (um)",
               "type": "number"
            },
            "step_size_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "micrometer",
               "title": "Step size unit"
            },
            "number_of_plane_repeats_per_volume": {
               "title": "Number of repeats per volume",
               "type": "integer"
            },
            "number_of_volume_repeats": {
               "title": "Number of volume repeats",
               "type": "integer"
            },
            "fov_coordinate_ml": {
               "title": "FOV coordinate ML",
               "type": "number"
            },
            "fov_coordinate_ap": {
               "title": "FOV coordinate AP",
               "type": "number"
            },
            "fov_coordinate_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "micrometer",
               "title": "FOV coordinate unit"
            },
            "fov_reference": {
               "description": "Reference for ML/AP coordinates",
               "title": "FOV reference",
               "type": "string"
            },
            "fov_width": {
               "title": "FOV width (pixels)",
               "type": "integer"
            },
            "fov_height": {
               "title": "FOV height (pixels)",
               "type": "integer"
            },
            "fov_size_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "pixel",
               "title": "FOV size unit"
            },
            "magnification": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Magnification"
            },
            "fov_scale_factor": {
               "title": "FOV scale factor (um/pixel)",
               "type": "number"
            },
            "fov_scale_factor_unit": {
               "default": "um/pixel",
               "title": "FOV scale factor unit",
               "type": "string"
            },
            "frame_rate": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  }
               ],
               "title": "Frame rate (Hz)"
            },
            "frame_rate_unit": {
               "$ref": "#/$defs/FrequencyUnit",
               "default": "hertz",
               "title": "Frame rate unit"
            },
            "targeted_structure": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Targeted structure"
            }
         },
         "required": [
            "channels",
            "number_of_planes",
            "step_size",
            "number_of_plane_repeats_per_volume",
            "number_of_volume_repeats",
            "fov_coordinate_ml",
            "fov_coordinate_ap",
            "fov_reference",
            "fov_width",
            "fov_height",
            "fov_scale_factor",
            "frame_rate"
         ],
         "title": "Stack",
         "type": "object"
      },
      "StackChannel": {
         "additionalProperties": false,
         "description": "Description of a Channel used in a Stack",
         "properties": {
            "channel_name": {
               "title": "Channel",
               "type": "string"
            },
            "light_source_name": {
               "description": "Must match device name",
               "title": "Light source name",
               "type": "string"
            },
            "filter_names": {
               "description": "Must match device names",
               "items": {
                  "type": "string"
               },
               "title": "Filter names",
               "type": "array"
            },
            "detector_name": {
               "description": "Must match device name",
               "title": "Detector name",
               "type": "string"
            },
            "additional_device_names": {
               "default": [],
               "items": {
                  "type": "string"
               },
               "title": "Additional device names",
               "type": "array"
            },
            "excitation_wavelength": {
               "maximum": 1000,
               "minimum": 300,
               "title": "Wavelength",
               "type": "integer"
            },
            "excitation_wavelength_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "nanometer",
               "title": "Laser wavelength unit"
            },
            "excitation_power": {
               "maximum": 2000.0,
               "title": "Laser power",
               "type": "number"
            },
            "excitation_power_unit": {
               "$ref": "#/$defs/PowerUnit",
               "default": "milliwatt",
               "title": "Laser power unit"
            },
            "filter_wheel_index": {
               "title": "Filter wheel index",
               "type": "integer"
            },
            "dilation": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Dilation (pixels)"
            },
            "dilation_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "pixel",
               "title": "Dilation unit"
            },
            "description": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Description"
            },
            "start_depth": {
               "title": "Starting depth (um)",
               "type": "integer"
            },
            "end_depth": {
               "title": "Ending depth (um)",
               "type": "integer"
            },
            "depth_unit": {
               "$ref": "#/$defs/SizeUnit",
               "default": "micrometer",
               "title": "Depth unit"
            }
         },
         "required": [
            "channel_name",
            "light_source_name",
            "filter_names",
            "detector_name",
            "excitation_wavelength",
            "excitation_power",
            "filter_wheel_index",
            "start_depth",
            "end_depth"
         ],
         "title": "StackChannel",
         "type": "object"
      },
      "StimulusEpoch": {
         "additionalProperties": false,
         "description": "Description of stimulus used during session",
         "properties": {
            "stimulus_start_time": {
               "description": "When a specific stimulus begins. This might be the same as the session start time.",
               "format": "date-time",
               "title": "Stimulus start time",
               "type": "string"
            },
            "stimulus_end_time": {
               "description": "When a specific stimulus ends. This might be the same as the session end time.",
               "format": "date-time",
               "title": "Stimulus end time",
               "type": "string"
            },
            "stimulus_name": {
               "title": "Stimulus name",
               "type": "string"
            },
            "session_number": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Session number"
            },
            "software": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/Software"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": [],
               "description": "The software used to control the behavior/stimulus (e.g. Bonsai)",
               "title": "Software"
            },
            "script": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Software"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "description": "provide URL to the commit of the script and the parameters used",
               "title": "Script"
            },
            "stimulus_modalities": {
               "items": {
                  "$ref": "#/$defs/StimulusModality"
               },
               "title": "Stimulus modalities",
               "type": "array"
            },
            "stimulus_parameters": {
               "anyOf": [
                  {
                     "items": {
                        "discriminator": {
                           "mapping": {
                              "Auditory Stimulation": "#/$defs/AuditoryStimulation",
                              "Olfactory Stimulation": "#/$defs/OlfactoryStimulation",
                              "Opto Stimulation": "#/$defs/OptoStimulation",
                              "Photo Stimulation": "#/$defs/PhotoStimulation",
                              "Visual Stimulation": "#/$defs/VisualStimulation"
                           },
                           "propertyName": "stimulus_type"
                        },
                        "oneOf": [
                           {
                              "$ref": "#/$defs/AuditoryStimulation"
                           },
                           {
                              "$ref": "#/$defs/OptoStimulation"
                           },
                           {
                              "$ref": "#/$defs/OlfactoryStimulation"
                           },
                           {
                              "$ref": "#/$defs/PhotoStimulation"
                           },
                           {
                              "$ref": "#/$defs/VisualStimulation"
                           }
                        ]
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Stimulus parameters"
            },
            "stimulus_device_names": {
               "default": [],
               "items": {
                  "type": "string"
               },
               "title": "Stimulus devices",
               "type": "array"
            },
            "speaker_config": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/SpeakerConfig"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Speaker Config"
            },
            "light_source_config": {
               "anyOf": [
                  {
                     "items": {
                        "discriminator": {
                           "mapping": {
                              "Laser": "#/$defs/LaserConfig",
                              "Light emitting diode": "#/$defs/LightEmittingDiodeConfig"
                           },
                           "propertyName": "device_type"
                        },
                        "oneOf": [
                           {
                              "$ref": "#/$defs/LightEmittingDiodeConfig"
                           },
                           {
                              "$ref": "#/$defs/LaserConfig"
                           }
                        ]
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": [],
               "description": "Light sources for stimulation",
               "title": "Light source config"
            },
            "output_parameters": {
               "$ref": "#/$defs/AindGeneric",
               "default": {},
               "title": "Performance metrics"
            },
            "reward_consumed_during_epoch": {
               "anyOf": [
                  {
                     "type": "number"
                  },
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Reward consumed during training (uL)"
            },
            "reward_consumed_unit": {
               "$ref": "#/$defs/VolumeUnit",
               "default": "microliter",
               "title": "Reward consumed unit"
            },
            "trials_total": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Total trials"
            },
            "trials_finished": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Finished trials"
            },
            "trials_rewarded": {
               "anyOf": [
                  {
                     "type": "integer"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Rewarded trials"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "stimulus_start_time",
            "stimulus_end_time",
            "stimulus_name",
            "stimulus_modalities"
         ],
         "title": "StimulusEpoch",
         "type": "object"
      },
      "StimulusModality": {
         "description": "Types of stimulus modalities",
         "enum": [
            "Auditory",
            "Olfactory",
            "Optogenetics",
            "None",
            "Virtual reality",
            "Visual",
            "Wheel friction"
         ],
         "title": "StimulusModality",
         "type": "string"
      },
      "Stream": {
         "additionalProperties": false,
         "description": "Data streams with a start and stop time",
         "properties": {
            "stream_start_time": {
               "format": "date-time",
               "title": "Stream start time",
               "type": "string"
            },
            "stream_end_time": {
               "format": "date-time",
               "title": "Stream stop time",
               "type": "string"
            },
            "daq_names": {
               "default": [],
               "items": {
                  "type": "string"
               },
               "title": "DAQ devices",
               "type": "array"
            },
            "camera_names": {
               "default": [],
               "items": {
                  "type": "string"
               },
               "title": "Cameras",
               "type": "array"
            },
            "light_sources": {
               "default": [],
               "items": {
                  "discriminator": {
                     "mapping": {
                        "Laser": "#/$defs/LaserConfig",
                        "Light emitting diode": "#/$defs/LightEmittingDiodeConfig"
                     },
                     "propertyName": "device_type"
                  },
                  "oneOf": [
                     {
                        "$ref": "#/$defs/LightEmittingDiodeConfig"
                     },
                     {
                        "$ref": "#/$defs/LaserConfig"
                     }
                  ]
               },
               "title": "Light Sources",
               "type": "array"
            },
            "ephys_modules": {
               "default": [],
               "items": {
                  "$ref": "#/$defs/ManipulatorModule"
               },
               "title": "Ephys modules",
               "type": "array"
            },
            "stick_microscopes": {
               "default": [],
               "description": "Must match stick microscope assemblies in rig file",
               "items": {
                  "$ref": "#/$defs/DomeModule"
               },
               "title": "Stick microscopes",
               "type": "array"
            },
            "manipulator_modules": {
               "default": [],
               "items": {
                  "$ref": "#/$defs/ManipulatorModule"
               },
               "title": "Manipulator modules",
               "type": "array"
            },
            "detectors": {
               "default": [],
               "items": {
                  "$ref": "#/$defs/DetectorConfig"
               },
               "title": "Detectors",
               "type": "array"
            },
            "fiber_connections": {
               "default": [],
               "items": {
                  "$ref": "#/$defs/FiberConnectionConfig"
               },
               "title": "Implanted fiber photometry devices",
               "type": "array"
            },
            "fiber_modules": {
               "default": [],
               "items": {
                  "$ref": "#/$defs/FiberModule"
               },
               "title": "Inserted fiber modules",
               "type": "array"
            },
            "ophys_fovs": {
               "default": [],
               "items": {
                  "$ref": "#/$defs/FieldOfView"
               },
               "title": "Fields of view",
               "type": "array"
            },
            "slap_fovs": {
               "default": [],
               "items": {
                  "$ref": "#/$defs/SlapFieldOfView"
               },
               "title": "Slap2 fields of view",
               "type": "array"
            },
            "stack_parameters": {
               "anyOf": [
                  {
                     "$ref": "#/$defs/Stack"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Stack parameters"
            },
            "mri_scans": {
               "default": [],
               "items": {
                  "$ref": "#/$defs/MRIScan"
               },
               "title": "MRI scans",
               "type": "array"
            },
            "stream_modalities": {
               "items": {
                  "discriminator": {
                     "mapping": {
                        "EMG": "#/$defs/EMG",
                        "ISI": "#/$defs/ISI",
                        "MRI": "#/$defs/MRI",
                        "SPIM": "#/$defs/SPIM",
                        "behavior": "#/$defs/BEHAVIOR",
                        "behavior-videos": "#/$defs/BEHAVIOR_VIDEOS",
                        "confocal": "#/$defs/CONFOCAL",
                        "ecephys": "#/$defs/ECEPHYS",
                        "fMOST": "#/$defs/FMOST",
                        "fib": "#/$defs/FIB",
                        "icephys": "#/$defs/ICEPHYS",
                        "merfish": "#/$defs/MERFISH",
                        "pophys": "#/$defs/POPHYS",
                        "slap": "#/$defs/SLAP"
                     },
                     "propertyName": "abbreviation"
                  },
                  "oneOf": [
                     {
                        "$ref": "#/$defs/BEHAVIOR"
                     },
                     {
                        "$ref": "#/$defs/BEHAVIOR_VIDEOS"
                     },
                     {
                        "$ref": "#/$defs/CONFOCAL"
                     },
                     {
                        "$ref": "#/$defs/EMG"
                     },
                     {
                        "$ref": "#/$defs/ECEPHYS"
                     },
                     {
                        "$ref": "#/$defs/FIB"
                     },
                     {
                        "$ref": "#/$defs/FMOST"
                     },
                     {
                        "$ref": "#/$defs/ICEPHYS"
                     },
                     {
                        "$ref": "#/$defs/ISI"
                     },
                     {
                        "$ref": "#/$defs/MRI"
                     },
                     {
                        "$ref": "#/$defs/MERFISH"
                     },
                     {
                        "$ref": "#/$defs/POPHYS"
                     },
                     {
                        "$ref": "#/$defs/SLAP"
                     },
                     {
                        "$ref": "#/$defs/SPIM"
                     }
                  ]
               },
               "title": "Modalities",
               "type": "array"
            },
            "software": {
               "anyOf": [
                  {
                     "items": {
                        "$ref": "#/$defs/Software"
                     },
                     "type": "array"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": [],
               "title": "Data stream software information"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "stream_start_time",
            "stream_end_time",
            "stream_modalities"
         ],
         "title": "Stream",
         "type": "object"
      },
      "SubjectPosition": {
         "description": "Subject position",
         "enum": [
            "Prone",
            "Supine"
         ],
         "title": "SubjectPosition",
         "type": "string"
      },
      "TAMRON": {
         "properties": {
            "name": {
               "const": "Tamron",
               "default": "Tamron",
               "enum": [
                  "Tamron"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "TAMRON",
         "type": "object"
      },
      "THERMO_FISHER_SCIENTIFIC": {
         "properties": {
            "name": {
               "const": "Thermo Fisher Scientific",
               "default": "Thermo Fisher Scientific",
               "enum": [
                  "Thermo Fisher Scientific"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "03x1ewr52",
               "default": "03x1ewr52",
               "enum": [
                  "03x1ewr52"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "THERMO_FISHER_SCIENTIFIC",
         "type": "object"
      },
      "THE_IMAGING_SOURCE": {
         "properties": {
            "name": {
               "const": "The Imaging Source",
               "default": "The Imaging Source",
               "enum": [
                  "The Imaging Source"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "THE_IMAGING_SOURCE",
         "type": "object"
      },
      "THE_LEE_COMPANY": {
         "properties": {
            "name": {
               "const": "The Lee Company",
               "default": "The Lee Company",
               "enum": [
                  "The Lee Company"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "THE_LEE_COMPANY",
         "type": "object"
      },
      "THORLABS": {
         "properties": {
            "name": {
               "const": "Thorlabs",
               "default": "Thorlabs",
               "enum": [
                  "Thorlabs"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "04gsnvb07",
               "default": "04gsnvb07",
               "enum": [
                  "04gsnvb07"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "THORLABS",
         "type": "object"
      },
      "TMC": {
         "properties": {
            "name": {
               "const": "Technical Manufacturing Corporation",
               "default": "Technical Manufacturing Corporation",
               "enum": [
                  "Technical Manufacturing Corporation"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "TMC",
               "default": "TMC",
               "enum": [
                  "TMC"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "TMC",
         "type": "object"
      },
      "TWCF": {
         "properties": {
            "name": {
               "const": "Templeton World Charity Foundation",
               "default": "Templeton World Charity Foundation",
               "enum": [
                  "Templeton World Charity Foundation"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": "TWCF",
               "default": "TWCF",
               "enum": [
                  "TWCF"
               ],
               "title": "Abbreviation",
               "type": "string"
            },
            "registry": {
               "default": {
                  "name": "Research Organization Registry",
                  "abbreviation": "ROR"
               },
               "discriminator": {
                  "mapping": {
                     "Research Organization Registry": "#/$defs/ROR"
                  },
                  "propertyName": "name"
               },
               "oneOf": [
                  {
                     "$ref": "#/$defs/ROR"
                  }
               ],
               "title": "Registry"
            },
            "registry_identifier": {
               "const": "00x0z1472",
               "default": "00x0z1472",
               "enum": [
                  "00x0z1472"
               ],
               "title": "Registry Identifier",
               "type": "string"
            }
         },
         "title": "TWCF",
         "type": "object"
      },
      "TYMPHANY": {
         "properties": {
            "name": {
               "const": "Tymphany",
               "default": "Tymphany",
               "enum": [
                  "Tymphany"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "TYMPHANY",
         "type": "object"
      },
      "TimeUnit": {
         "description": "Enumeration of Time Measurements",
         "enum": [
            "hour",
            "minute",
            "second",
            "millisecond",
            "microsecond",
            "nanosecond"
         ],
         "title": "TimeUnit",
         "type": "string"
      },
      "Translation3dTransform": {
         "additionalProperties": false,
         "description": "Values to be vector-added to a 3D position. Often needed to specify a device or tile's origin.",
         "properties": {
            "type": {
               "const": "translation",
               "default": "translation",
               "enum": [
                  "translation"
               ],
               "title": "Type",
               "type": "string"
            },
            "translation": {
               "items": {
                  "anyOf": [
                     {
                        "type": "number"
                     },
                     {
                        "type": "string"
                     }
                  ]
               },
               "maxItems": 3,
               "minItems": 3,
               "title": "3D translation parameters",
               "type": "array"
            }
         },
         "required": [
            "translation"
         ],
         "title": "Translation3dTransform",
         "type": "object"
      },
      "TriggerType": {
         "description": "Types of detector triggers",
         "enum": [
            "Internal",
            "External"
         ],
         "title": "TriggerType",
         "type": "string"
      },
      "VIEWORKS": {
         "properties": {
            "name": {
               "const": "Vieworks",
               "default": "Vieworks",
               "enum": [
                  "Vieworks"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "VIEWORKS",
         "type": "object"
      },
      "VORTRAN": {
         "properties": {
            "name": {
               "const": "Vortran",
               "default": "Vortran",
               "enum": [
                  "Vortran"
               ],
               "title": "Name",
               "type": "string"
            },
            "abbreviation": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Abbreviation",
               "type": "null"
            },
            "registry": {
               "default": null,
               "title": "Registry",
               "type": "null"
            },
            "registry_identifier": {
               "const": null,
               "default": null,
               "enum": [
                  null
               ],
               "title": "Registry Identifier",
               "type": "null"
            }
         },
         "title": "VORTRAN",
         "type": "object"
      },
      "VisualStimulation": {
         "additionalProperties": false,
         "description": "Description of visual stimulus parameters. Provides a high level description of stimulus.",
         "properties": {
            "stimulus_type": {
               "const": "Visual Stimulation",
               "default": "Visual Stimulation",
               "enum": [
                  "Visual Stimulation"
               ],
               "title": "Stimulus Type",
               "type": "string"
            },
            "stimulus_name": {
               "title": "Stimulus name",
               "type": "string"
            },
            "stimulus_parameters": {
               "$ref": "#/$defs/AindGeneric",
               "default": {},
               "description": "Define and list the parameter values used (e.g. all TF or orientation values)",
               "title": "Stimulus parameters"
            },
            "stimulus_template_name": {
               "default": [],
               "description": "Name of image set or movie displayed",
               "items": {
                  "type": "string"
               },
               "title": "Stimulus template name",
               "type": "array"
            },
            "notes": {
               "anyOf": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "null"
                  }
               ],
               "default": null,
               "title": "Notes"
            }
         },
         "required": [
            "stimulus_name"
         ],
         "title": "VisualStimulation",
         "type": "object"
      },
      "VolumeUnit": {
         "description": "Enumeration of Volume Measurements",
         "enum": [
            "liter",
            "milliliter",
            "microliter",
            "nanoliter"
         ],
         "title": "VolumeUnit",
         "type": "string"
      }
   },
   "additionalProperties": false,
   "description": "Description of a physiology and/or behavior session",
   "properties": {
      "describedBy": {
         "const": "https://raw.githubusercontent.com/AllenNeuralDynamics/aind-data-schema/main/src/aind_data_schema/core/session.py",
         "default": "https://raw.githubusercontent.com/AllenNeuralDynamics/aind-data-schema/main/src/aind_data_schema/core/session.py",
         "title": "Describedby",
         "type": "string"
      },
      "schema_version": {
         "const": "1.0.2",
         "default": "1.0.2",
         "enum": [
            "1.0.2"
         ],
         "title": "Schema Version",
         "type": "string"
      },
      "protocol_id": {
         "default": [],
         "description": "DOI for protocols.io",
         "items": {
            "type": "string"
         },
         "title": "Protocol ID",
         "type": "array"
      },
      "experimenter_full_name": {
         "description": "First and last name of the experimenter(s).",
         "items": {
            "type": "string"
         },
         "title": "Experimenter(s) full name",
         "type": "array"
      },
      "session_start_time": {
         "format": "date-time",
         "title": "Session start time",
         "type": "string"
      },
      "session_end_time": {
         "anyOf": [
            {
               "format": "date-time",
               "type": "string"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "title": "Session end time"
      },
      "session_type": {
         "title": "Session type",
         "type": "string"
      },
      "iacuc_protocol": {
         "anyOf": [
            {
               "type": "string"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "title": "IACUC protocol"
      },
      "rig_id": {
         "title": "Rig ID",
         "type": "string"
      },
      "calibrations": {
         "default": [],
         "description": "Calibrations of rig devices prior to session",
         "items": {
            "$ref": "#/$defs/Calibration"
         },
         "title": "Calibrations",
         "type": "array"
      },
      "maintenance": {
         "default": [],
         "description": "Maintenance of rig devices prior to session",
         "items": {
            "$ref": "#/$defs/Maintenance"
         },
         "title": "Maintenance",
         "type": "array"
      },
      "subject_id": {
         "title": "Subject ID",
         "type": "string"
      },
      "animal_weight_prior": {
         "anyOf": [
            {
               "type": "number"
            },
            {
               "type": "string"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "description": "Animal weight before procedure",
         "title": "Animal weight (g)"
      },
      "animal_weight_post": {
         "anyOf": [
            {
               "type": "number"
            },
            {
               "type": "string"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "description": "Animal weight after procedure",
         "title": "Animal weight (g)"
      },
      "weight_unit": {
         "$ref": "#/$defs/MassUnit",
         "default": "gram",
         "title": "Weight unit"
      },
      "anaesthesia": {
         "anyOf": [
            {
               "$ref": "#/$defs/Anaesthetic"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "title": "Anaesthesia"
      },
      "data_streams": {
         "description": "A data stream is a collection of devices that are recorded simultaneously. Each session can include multiple streams (e.g., if the manipulators are moved to a new location)",
         "items": {
            "$ref": "#/$defs/Stream"
         },
         "title": "Data streams",
         "type": "array"
      },
      "stimulus_epochs": {
         "default": [],
         "items": {
            "$ref": "#/$defs/StimulusEpoch"
         },
         "title": "Stimulus",
         "type": "array"
      },
      "mouse_platform_name": {
         "title": "Mouse platform",
         "type": "string"
      },
      "active_mouse_platform": {
         "description": "Is the mouse platform being actively controlled",
         "title": "Active mouse platform",
         "type": "boolean"
      },
      "headframe_registration": {
         "anyOf": [
            {
               "$ref": "#/$defs/Affine3dTransform"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "description": "MRI transform matrix for headframe",
         "title": "Headframe registration"
      },
      "reward_delivery": {
         "anyOf": [
            {
               "$ref": "#/$defs/RewardDeliveryConfig"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "title": "Reward delivery"
      },
      "reward_consumed_total": {
         "anyOf": [
            {
               "type": "number"
            },
            {
               "type": "string"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "title": "Total reward consumed (mL)"
      },
      "reward_consumed_unit": {
         "$ref": "#/$defs/VolumeUnit",
         "default": "milliliter",
         "title": "Reward consumed unit"
      },
      "notes": {
         "anyOf": [
            {
               "type": "string"
            },
            {
               "type": "null"
            }
         ],
         "default": null,
         "title": "Notes"
      }
   },
   "required": [
      "experimenter_full_name",
      "session_start_time",
      "session_type",
      "rig_id",
      "subject_id",
      "data_streams",
      "mouse_platform_name",
      "active_mouse_platform"
   ],
   "title": "Session",
   "type": "object"
}